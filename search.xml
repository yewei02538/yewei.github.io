<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Android内存泄漏(一)——常见内存泄漏以及解决]]></title>
      <url>http://weyye.me/detail/android-memory-leak-explaination/</url>
      <content type="html"><![CDATA[<blockquote>
<p>转载请标明出处： <a href="http://www.weyye.me/detail/android-memory-leak-explaination/" target="_blank" rel="external">http://www.weyye.me/detail/android-memory-leak-explaination/</a><br>本文出自:<a href="http://weyye.me">【Wey Ye的博客】</a></p>
</blockquote>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>内存泄漏也算是一个老生常谈的一个话题，在面试的时候也会经常被问到。这几天正在研究性能优化，所以我打算先从内存泄漏开始讲起<br><a id="more"></a></p>
<h2 id="什么是内存泄漏"><a href="#什么是内存泄漏" class="headerlink" title="什么是内存泄漏"></a>什么是内存泄漏</h2><p>引用一句网上用烂的一句话，也是面试装逼必备~</p>
<blockquote>
<p>当一个对象已经不需要再使用了，本该被回收时，而有另外一个正在使用的对象持有它的引用从而就导致对象不能被回收。这种导致了本该被回收的对象不能被回收而停留在堆内存中，就产生了内存泄漏</p>
</blockquote>
<h2 id="谁管理着我们的内存？又是什么时候回收的？"><a href="#谁管理着我们的内存？又是什么时候回收的？" class="headerlink" title="谁管理着我们的内存？又是什么时候回收的？"></a>谁管理着我们的内存？又是什么时候回收的？</h2><p>做过C/C++同学都知道，都是自己去分配内存和释放内存，一切都是我们手动管理。而java则是自动管理的内存-即有自己的一套垃圾回收机制(Garbage Collection),简称gc.</p>
<p>Java语言规范没有明确地说明JVM使用哪种垃圾回收算法，但是任何一种垃圾回收算法一般要做2件基本的事情：</p>
<ul>
<li>发现无用信息对象</li>
<li>回收被无用对象占用的内存空间，使该空间可被程序再次使用</li>
</ul>
<h2 id="GC内存回收时机"><a href="#GC内存回收时机" class="headerlink" title="GC内存回收时机"></a>GC内存回收时机</h2><blockquote>
<p>当某对象不再有任何的引用的时候才会进行回收。</p>
</blockquote>
<h2 id="内存分配策略"><a href="#内存分配策略" class="headerlink" title="内存分配策略"></a>内存分配策略</h2><p>要想搞清楚为什么会内存泄漏，我们首先要了解内存是如何进行分配的</p>
<h3 id="静态存储区"><a href="#静态存储区" class="headerlink" title="静态存储区"></a>静态存储区</h3><p>内存在程序编译的时候就已经分配好，这块的内存在程序整个运行期间都一直存在。<strong>它主要存放静态数据、全局的static数据和一些常量。</strong></p>
<h3 id="栈区"><a href="#栈区" class="headerlink" title="栈区"></a>栈区</h3><p>当执行方法里面的代码时，方法里面的<strong>局部变量</strong>都是创建在栈上面的，<br>比如说基础数据类型<code>int i=5</code>,此时就会在栈上开辟一块区域名字是i，它的值就是5，当创建对象时候的<code>Person p=new Person()</code>，此时就会在堆中创建一个<strong>Person的实例</strong>,而在栈中就会开辟一块区域p，而值就是在堆中实例对应的引用地址（指针）。当函数执行结束后这些存储单元就会自动被释放掉栈内存包括分配的运算速度很快，因为内置在处理器的里面的。当然容量有限。</p>
<h3 id="堆区"><a href="#堆区" class="headerlink" title="堆区"></a>堆区</h3><p>堆内存用来存放由new创建的对象和数组。 如<code>new Person()</code>。在堆中创建一个数组或者对象后，还会在栈中定义一个特殊的变量，该变量存储着这个数组或对象的内存地址（指针），也就成了数组或对象的引用变量。在堆中申请的内存全部有gc管理</p>
<h3 id="堆和栈的区别"><a href="#堆和栈的区别" class="headerlink" title="堆和栈的区别"></a>堆和栈的区别</h3><ul>
<li>堆是不连续的内存区域，堆空间比较灵活也特别大。</li>
<li>栈式一块连续的内存区域，大小是有操作系统觉决定的。</li>
</ul>
<blockquote>
<p>堆管理很麻烦，频繁地new/remove会造成大量的内存碎片，这样就会慢慢导致效率低下。对于栈的话，他先进后出，进出完全不会产生碎片，运行效率高且稳定。</p>
</blockquote>
<pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span><span class="token punctuation">{</span>
    <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//注意：此成员变量在堆区</span>
    Person s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">XXX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//栈区</span>
        Student s2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre>
<ul>
<li>成员变量全部存储在堆中(包括基本数据类型，引用及引用的对象实体)—因为他们属于类，类对象最终还是要被new出来的。</li>
<li>局部变量的基本数据类型和引用存储于栈当中，引用的对象实体存储在堆中。—–因为他们属于方法当中的变量，生命周期会随着方法一起结束。</li>
</ul>
<p>其实说了这么多就像说明一个问题</p>
<blockquote>
<p>其实堆区它存放的就是栈中内存地址(指针)所指向的对象实例。</p>
</blockquote>
<h2 id="内存抖动"><a href="#内存抖动" class="headerlink" title="内存抖动"></a>内存抖动</h2><p>其实内存抖动就是在短时间内创建了大量的对象或者被回收的对象，gc为了内存合理使用就会进行频繁回收内存，这样就造成了内存抖动。其实gc内存回收机制也是一段代码的执行，它也会消耗cpu和内存。所以呢我们要避免内存抖动，你想它要在短短的时间内进行高工作的回收工作，这样就阻碍的性能，也是app卡顿的主要原因之一。</p>
<h2 id="内存泄漏的好处-or-坏处？"><a href="#内存泄漏的好处-or-坏处？" class="headerlink" title="内存泄漏的好处 or 坏处？"></a>内存泄漏的好处 or 坏处？</h2><h3 id="好处"><a href="#好处" class="headerlink" title="好处"></a>好处</h3><p>很遗憾的说没有好处！如果硬要说有，那就是我们不用逐一排查引起内存泄漏的原因啦~</p>
<h3 id="坏处"><a href="#坏处" class="headerlink" title="坏处"></a>坏处</h3><p>Android系统在我们运行app的时候其实就已经规定我们使用的内存大小，如果我们的内存泄漏了，内存无法进行回收，那么大量无用内存就会一直停留在里面。运行时间一长，就会超过给我们限制的内存大小最终出现内存溢出直接Crash</p>
<h2 id="内存泄露的栗子"><a href="#内存泄露的栗子" class="headerlink" title="内存泄露的栗子"></a>内存泄露的栗子</h2><h3 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h3><p>在我们时候单例模式的时候有时候需要传入一个Context,比如这样：</p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CommonManager</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> CommonManager instance<span class="token punctuation">;</span>
    <span class="token keyword">private</span>  Context mContext<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">CommonManager</span><span class="token punctuation">(</span>Context context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mContext<span class="token operator">=</span>context<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> CommonManager <span class="token function">getInstance</span><span class="token punctuation">(</span>Context context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>instance <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CommonManager</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> instance<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<p>然而在Activity调用的时候我们习惯这样</p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">public</span>
 <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>
        CommonManager manager <span class="token operator">=</span> CommonManager<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        manager<span class="token punctuation">.</span><span class="token function">xxx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<p>如上，如果你也传入了this，那么恭喜你。。内存泄漏了！</p>
<p><code>First blood!</code>(这是一个有声音的文字)</p>
<p>为什么捏？？</p>
<p>因为现在<code>CommonManager</code>持有了Activity的引入，如果现在Activity的整个生命周期执行完了（调用onDestroy()后），这个Activity本该被gc回收了，可是却被<code>CommonManager</code>持有了，然后这个<code>Activity</code>就会一直存在内存中，就像路边的垃圾的一样无人问津。。。</p>
<p>如何解决这个内存泄漏呢？</p>
<p>我们之所以要用单例，很大部分原因是因为我们在整个app的运行中，能够轻松的取到里面的值或者调用极其非静态的方法。由于我们的静态类的生命周期和整个app的生命周期一样长，而<code>Application</code>类正好也是，而<code>Application</code>也继承<code>Context</code>，所以我们可以改用<code>Application</code></p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span><span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>
        CommonManager manager <span class="token operator">=</span> CommonManager<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token function">getApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<p>因为Application跟静态的生命周期一样长，所以就不会产生内存泄漏啦！</p>
<h3 id="静态变量"><a href="#静态变量" class="headerlink" title="静态变量"></a>静态变量</h3><blockquote>
<p>慎用静态变量</p>
</blockquote>
<p>为什么说慎用呢？因为静态变量的生命周期在于从赋值开始一直到置空（null）或者app<strong>进程结束</strong>。也就是说你app所有的界面关闭了其实静态变量中的值还是存在的</p>
<p>那么如何进程会结束呢？</p>
<ul>
<li>如果运行内存足够，Android不会杀掉任何进程。在内存不足的时候就会杀掉或者重启进程</li>
<li>用户手机手动清理内存</li>
</ul>
<h4 id="静态变量使用错误之四大组件"><a href="#静态变量使用错误之四大组件" class="headerlink" title="静态变量使用错误之四大组件"></a>静态变量使用错误之四大组件</h4><p>有时候我们会有这样的需求比如：<code>MainActivity</code>跳转到<code>DetailActivity</code>,此时我需要在<code>DetailActivity</code>调用<code>MainActivity</code>里面的方法来刷新ui。这个时候你也许会这样做：</p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> MainActivity mIntance<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mIntance <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">//...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DetailActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_detail<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>btnCommit<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View v<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                MainActivity<span class="token punctuation">.</span>mIntance<span class="token punctuation">.</span><span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<p>把<code>MainActivity</code>中定义一个自己的静态变量实例<code>mIntance</code>，这样在<code>DetailActivity</code>以及任何界面都可以直接调用<code>MainActivity</code>中的方法。</p>
<p>如果你是这样做的，那么恭喜你。。内存泄漏了！</p>
<p><code>Double kill</code></p>
<p>为什么捏？</p>
<p>如上面所说，静态变量的生命周期从赋值开始一直到置空（null）或者app<strong>进程结束</strong>,也就是说这个<code>MainActivity</code>的实例一直存在得不到回收，所以产生了泄漏</p>
<p>怎么解决呢？</p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> MainActivity mIntance<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mIntance <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">//...</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mIntance <span class="token operator">=</span> null<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<p>在<code>onDestroy</code>置空即可。</p>
<p>当然我个人是不推荐这样做的。我现在是在按钮的点击事件里面去调用<code>MainActivity</code>的方法。那假如用户一直不点呢？那么这个MainActivity就会一直存在内存中。而<code>Activity</code>又是四大组件，可想而知它是个重量级的家伙。</p>
<p>那么有什么好的解决方法呢？</p>
<p>我们可以用第三方框架来解决这个问题，比如<code>EventBus</code>，如果你项目引入<code>RxJava</code>，那么你可以使用<code>RxBus</code>。在<code>MainActivity</code>注册订阅，然后在<code>DetailActivity</code>发消息通知<code>MainActivity</code>然后执行对应的方法，<strong>当然一定要在<code>onDestroy</code>的时候取消注册</strong>，不然还是会内存泄漏的！</p>
<h4 id="静态变量使用错误之View"><a href="#静态变量使用错误之View" class="headerlink" title="静态变量使用错误之View"></a>静态变量使用错误之View</h4><p>同样的问题，我需要在<code>DetailActivity</code>界面去更新<code>MainActiviy</code>的<code>button</code>的文字。</p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> Button mBtn<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mBtn<span class="token operator">=</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>btn<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DetailActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_detail<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>btnCommit<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View v<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                MainActivity<span class="token punctuation">.</span>mBtn<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">"我被改变了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<p>如果你是这样做的  <code>Trible Kill!</code></p>
<p>同理我们只需要在<code>onDestory</code>置空就可以了</p>
<p>那么我们有了上面的经验，同样直接就可以用EventBus/RxBus搞定!</p>
<h3 id="Handler泄漏"><a href="#Handler泄漏" class="headerlink" title="Handler泄漏"></a>Handler泄漏</h3><p>说起内存泄漏，那么一定跑不了<code>Handler</code>，因为我们日常写代码的时候经常会去这样写：</p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>
    Handler mHandler<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Handler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handleMessage</span><span class="token punctuation">(</span>Message msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">handleMessage</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">//handle message...</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mHandler<span class="token punctuation">.</span><span class="token function">postDelayed</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mHandler<span class="token punctuation">.</span><span class="token function">sendEmptyMessage</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">120000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre>
<p>在代码中可以看到延时2分钟给handler发送了一个空消息。看似没问题，那么如果此时用户点了返回退出了这个<code>Activity</code>，那么<code>Activity</code>2分钟内一直在内存中不能被回收，这个那么这个时候就产生泄漏</p>
<p>如果你代码类似这样。。 <code>Ultra Kill!</code></p>
<p>在我的<a href="http://www.weyye.me/detail/android-source-activity-oncreate/" target="_blank" rel="external">Android走进Framework之app是如何被启动的</a>里面说过当我们app启动时候<code>ActivityThread</code>会创建主线程的<code>Looper</code>对象，来进行消息队列的循环取出消息然后处理消息。发送消息的时候<code>Message</code>会持有<code>mHandler</code>的引用而<code>mHandler</code>又是一个匿名<code>Handler</code>类，匿名类是特殊内部类，而内部类是持有外部类实例的引用的。所以此时这个Handler持有了外部<code>Activity</code>的引用。这样Looper对象才可以取到<code>Message</code>然后交给对应的<code>Handler</code>去处理</p>
<p><strong>Handler.java</strong></p>
<pre class=" language-java"><code class="language-java">    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">enqueueMessage</span><span class="token punctuation">(</span>MessageQueue queue<span class="token punctuation">,</span> Message msg<span class="token punctuation">,</span> <span class="token keyword">long</span> uptimeMillis<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        msg<span class="token punctuation">.</span>target <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mAsynchronous<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            msg<span class="token punctuation">.</span><span class="token function">setAsynchronous</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> queue<span class="token punctuation">.</span><span class="token function">enqueueMessage</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> uptimeMillis<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre>
<p>当我发送消息的时候最终会调用<code>enqueueMessage</code>，在这里讲this(Handler)赋值给了<code>Message</code>里面的<code>target</code>;此时就持有了Handler的引用了</p>
<p>好了 搞清楚为什么会内存泄漏后，那我们怎么解决呢？</p>
<pre class=" language-java"><code class="language-java">     <span class="token keyword">static</span>  Handler mHandler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Handler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handleMessage</span><span class="token punctuation">(</span>Message msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">handleMessage</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">//handle message...</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre>
<p>将<code>mHandler</code>改成静态的，<strong>因为静态内部类是不持有外部类的引用的</strong></p>
<p>那就引入了另一问题：静态类怎么调用非静态的方法呢？当然加入构造方法传进来。比如这样？</p>
<pre class=" language-java"><code class="language-java">    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MyHandler</span> <span class="token keyword">extends</span> <span class="token class-name">Handler</span> <span class="token punctuation">{</span>
        MainActivity mActivity<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token function">MyHandler</span><span class="token punctuation">(</span>MainActivity activity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mActivity <span class="token operator">=</span> activity<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handleMessage</span><span class="token punctuation">(</span>Message msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">handleMessage</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
            mActivity<span class="token punctuation">.</span><span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre>
<blockquote>
<p>错！虽然变成了静态的了，但是这样做跟之前做是一样的，传入进来的都是强引用，还是一样回收不了。</p>
</blockquote>
<p>那么到底该怎么做呢？ 应该传入一个弱引用的Activity，如下</p>
<pre class=" language-java"><code class="language-java">    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MyHandler</span> <span class="token keyword">extends</span> <span class="token class-name">Handler</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token keyword">final</span> WeakReference<span class="token operator">&lt;</span>MainActivity<span class="token operator">></span> mActivity<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token function">MyHandler</span><span class="token punctuation">(</span>MainActivity activity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mActivity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakReference</span><span class="token operator">&lt;</span>MainActivity<span class="token operator">></span><span class="token punctuation">(</span>activity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handleMessage</span><span class="token punctuation">(</span>Message msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">handleMessage</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
            mActivity<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre>
<p>这样做就可以了。但是为什么要使用<code>WeakReference</code>呢?</p>
<p>来一段4大引用的解释</p>
<p><strong>StrongReference 强引用</strong>：</p>
<p>回收时机：从不回收<br>使用：对象的一般保存<br>生命周期：JVM停止的时候才会终止<br>（new出来的对应都是强引用）</p>
<p><strong>SoftReference 软引用</strong><br>回收时机：当内存不足的时候<br>使用：SoftReference<string>结合ReferenceQueue构造有效期短<br>生命周期：内存不足时终止</string></p>
<p><strong>WeakReference 弱引用</strong><br>回收时机：在垃圾回收的时候<br>使用：同软引用<br>生命周期：GC后终止</p>
<p><strong>PhatomReference 虚引用</strong><br>回收时机：在垃圾回收的时候<br>使用：合ReferenceQueue来跟踪对象呗垃圾回收期回收的活动<br>生命周期:GC后终止</p>
<p>当我们使用<code>WeakReference</code>，gc回收后那个<code>MainActivity</code>的引用也就不存在，那么<code>MainActivity</code>就可以了正常被回收了</p>
<p>当然这样做就完美了嘛？</p>
<p>No! 我们最好在<code>onDestory</code>移除消息，因为当你<code>Activity</code>退出后Message还在排队等待处理，而我们的<code>Activity</code>都关闭了，所以也就没必要处理了，最终如下</p>
<pre class=" language-java"><code class="language-java">
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> MyHandler mHandler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyHandler</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MyHandler</span> <span class="token keyword">extends</span> <span class="token class-name">Handler</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token keyword">final</span> WeakReference<span class="token operator">&lt;</span>MainActivity<span class="token operator">></span> mActivity<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token function">MyHandler</span><span class="token punctuation">(</span>MainActivity activity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mActivity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakReference</span><span class="token operator">&lt;</span>MainActivity<span class="token operator">></span><span class="token punctuation">(</span>activity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handleMessage</span><span class="token punctuation">(</span>Message msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">handleMessage</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
            mActivity<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mHandler<span class="token punctuation">.</span><span class="token function">postDelayed</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mHandler<span class="token punctuation">.</span><span class="token function">sendEmptyMessage</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//What建议定义常量，为了演示直接传0</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">120000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">//todo</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mHandler<span class="token punctuation">.</span><span class="token function">removeMessages</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<p>完美！</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>看到上面几个内存泄漏的例子,在我们日常编码中也要好好注意了，例如：</p>
<ul>
<li>当Application的Context能搞定的情况下，并且生命周期长的对象，优先使用Application的Context</li>
<li>不要生命周期长的对象引用Activity</li>
<li>尽量避免使用静态变量</li>
<li>内部类是持有外部类的的引用的，而静态内部类不持有</li>
<li>如果使用静态内部类，一定要将外部实例对象作为弱引用持有</li>
<li>Handler正确使用</li>
<li>4大引用的解释</li>
</ul>
<p>当然，这些例子都是比较常见的内存泄漏的地方，还有不常见的泄漏，这个时候就需要我们借助工具来查看逐一排除解决。在下一篇我会讲解如何去去使用工具来查看内存泄漏</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://zhuanlan.zhihu.com/p/23102625" target="_blank" rel="external">Java垃圾回收机制(GC)详解</a></p>
<p><a href="http://www.cnblogs.com/whgw/archive/2011/09/29/2194997.html" target="_blank" rel="external">Java中堆内存和栈内存详解</a></p>
<blockquote>
<p>博主整理不易，转载请注明出处:<br><a href="http://www.weyye.me/detail/android-memory-leak-explaination/" target="_blank" rel="external">http://www.weyye.me/detail/android-memory-leak-explaination/</a></p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android走进Framework之AppCompatActivity.setContentView]]></title>
      <url>http://weyye.me/detail/framework-appcompatactivity-setcontentview/</url>
      <content type="html"><![CDATA[<blockquote>
<p>转载请标明出处： <a href="http://weyye.me/detail/framework-appcompatactivity-setcontentview/">http://weyye.me/detail/framework-appcompatactivity-setcontentview/</a><br>本文出自:<a href="http://weyye.me">【Wey Ye的博客】</a></p>
</blockquote>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在上一篇<a href="http://weyye.me/detail/android-source-activity-oncreate/">Android走进Framework之app是如何被启动的</a>中讲到了从我们点击app一直到调用<code>Activity.onCreate()</code>的整个流程,今天来研究下我们最熟悉的一行代码<code>setContentView()</code>。网上也有很多关于setContentView的源码解析，但是都是基于<code>Activity</code>源码，而我们现在都是继承的<code>AppCompatActivity</code>,看源码发现改动还不少，所以我打算来研究下<code>AppCompatActivity</code>里是如何把我们的布局添加进去的。你是否也曾有过同样的疑惑，为什么创建<code>Activity</code>就要在<code>onCreate()</code>里面调用<code>setContentView()</code>?那就让我们来RTFSC (Read the fucking source code )。</p>
<a id="more"></a>
<h2 id="学前疑惑"><a href="#学前疑惑" class="headerlink" title="学前疑惑"></a>学前疑惑</h2><ul>
<li><code>setContentView</code>中到底做了什么？为什么我们调用后就可以显示到我们想到的布局?</li>
<li><code>PhoneWindow</code>是个什么鬼？<code>Window</code>和它又有什么关系？</li>
<li><code>DecorView</code>什么干嘛的？和我们的布局有什么联系？</li>
<li>在我们调用<code>requestFeature</code>的时候为什么要在<code>setContentView</code>之前？</li>
</ul>
<p>接下来，我们就来解决这些疑惑！<strong>以下源码基于Api24</strong></p>
<h2 id="AppCompatActivity-setContentView"><a href="#AppCompatActivity-setContentView" class="headerlink" title="AppCompatActivity.setContentView"></a>AppCompatActivity.setContentView</h2><p>我们先来看下<code>AppCompatActivity</code>中<code>setContentView</code>中做了什么<br><strong>AppCompatActivity.java</strong></p>
<pre class=" language-java"><code class="language-java">    <span class="token comment" spellcheck="true">//这个是我们最常用的</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token annotation punctuation">@LayoutRes</span> <span class="token keyword">int</span> layoutResID<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">getDelegate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setContentView</span><span class="token punctuation">(</span>layoutResID<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setContentView</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">getDelegate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setContentView</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setContentView</span><span class="token punctuation">(</span>View view<span class="token punctuation">,</span> ViewGroup<span class="token punctuation">.</span>LayoutParams params<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">getDelegate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setContentView</span><span class="token punctuation">(</span>view<span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre>
<p>可以看到3个重载的方法都调用<code>getDelegate()</code>,而其他的方法也都是调用了<code>getDelegate()</code>,很显然这个是代理模式。那么这个<code>getDelegate()</code>返回的是什么呢？</p>
<p><strong>AppCompatActivity.java</strong></p>
<pre class=" language-java"><code class="language-java">    <span class="token comment" spellcheck="true">/**
     * @return The {@link AppCompatDelegate} being used by this Activity.
     */</span>
    <span class="token annotation punctuation">@NonNull</span>
    <span class="token keyword">public</span> AppCompatDelegate <span class="token function">getDelegate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mDelegate <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">//第一次为空，创建了AppCompatDelegate</span>
            mDelegate <span class="token operator">=</span> AppCompatDelegate<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> mDelegate<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre>
<p>我们来看下<code>AppCompatDelegate</code>是怎么创建的</p>
<p><strong>AppCompatDelegate.java</strong></p>
<pre class=" language-java"><code class="language-java">    <span class="token keyword">private</span> <span class="token keyword">static</span> AppCompatDelegate <span class="token function">create</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> Window window<span class="token punctuation">,</span>
            AppCompatCallback callback<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> sdk <span class="token operator">=</span> Build<span class="token punctuation">.</span>VERSION<span class="token punctuation">.</span>SDK_INT<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>BuildCompat<span class="token punctuation">.</span><span class="token function">isAtLeastN</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">//7.0以及7.0以上创建AppCompatDelegateImplN</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AppCompatDelegateImplN</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> window<span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>sdk <span class="token operator">>=</span> <span class="token number">23</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">//6.0创建AppCompatDelegateImplV23</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AppCompatDelegateImplV23</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> window<span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>sdk <span class="token operator">>=</span> <span class="token number">14</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">//...</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AppCompatDelegateImplV14</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> window<span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>sdk <span class="token operator">>=</span> <span class="token number">11</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">//...</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AppCompatDelegateImplV11</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> window<span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AppCompatDelegateImplV9</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> window<span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre>
<p>哦~原来根据不同的api版本返回不同的Delegate,我们先来看看<code>AppCompatDelegateImplN</code>,里面是否有<code>setContentView</code></p>
<p><strong>AppCompatDelegateImplN.java</strong></p>
<pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RequiresApi</span><span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@TargetApi</span><span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span>
<span class="token keyword">class</span> <span class="token class-name">AppCompatDelegateImplN</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatDelegateImplV23</span> <span class="token punctuation">{</span>

    <span class="token function">AppCompatDelegateImplN</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> Window window<span class="token punctuation">,</span> AppCompatCallback callback<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> window<span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    Window<span class="token punctuation">.</span>Callback <span class="token function">wrapWindowCallback</span><span class="token punctuation">(</span>Window<span class="token punctuation">.</span>Callback callback<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AppCompatWindowCallbackN</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">class</span> <span class="token class-name">AppCompatWindowCallbackN</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatWindowCallbackV23</span> <span class="token punctuation">{</span>
        <span class="token function">AppCompatWindowCallbackN</span><span class="token punctuation">(</span>Window<span class="token punctuation">.</span>Callback callback<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">super</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onProvideKeyboardShortcuts</span><span class="token punctuation">(</span>
                List<span class="token operator">&lt;</span>KeyboardShortcutGroup<span class="token operator">></span> data<span class="token punctuation">,</span> Menu menu<span class="token punctuation">,</span> <span class="token keyword">int</span> deviceId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> PanelFeatureState panel <span class="token operator">=</span> <span class="token function">getPanelState</span><span class="token punctuation">(</span>Window<span class="token punctuation">.</span>FEATURE_OPTIONS_PANEL<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>panel <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> panel<span class="token punctuation">.</span>menu <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment" spellcheck="true">// The menu provided is one created by PhoneWindow which we don't actually use.</span>
                <span class="token comment" spellcheck="true">// Instead we'll pass through our own...</span>
                <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onProvideKeyboardShortcuts</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> panel<span class="token punctuation">.</span>menu<span class="token punctuation">,</span> deviceId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment" spellcheck="true">// If we don't have a menu, jump pass through the original instead</span>
                <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onProvideKeyboardShortcuts</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> menu<span class="token punctuation">,</span> deviceId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<p>发现并没有<code>setContentView</code>，那么肯定在父类。诶，它继承<code>AppCompatDelegateImplV23</code>,而<code>AppCompatDelegateImplV23</code>又继承<code>AppCompatDelegateImplV14</code>,<code>AppCompatDelegateImplV14</code>又继承<code>AppCompatDelegateImplV11</code>,<code>AppCompatDelegateImplV11</code>又继承<code>AppCompatDelegateImplV9</code>，好，知道关系后我有点懵逼了,搞什么鬼？客官别急，我们先来画个图</p>
<p><img src="http://img.blog.csdn.net/20170314164728213?watermark/2/text/aHR0cDovL3dleXllLm1l/font/5a6L5L2T/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="类继承关系"><br>ok,最后我在V9里找到<code>setContentView</code>，我们来看下</p>
<p><strong>AppCompatDelegateImplV9.java</strong></p>
<pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token keyword">int</span> resId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">//这个很关键，稍后会讲</span>
        <span class="token function">ensureSubDecor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ViewGroup contentParent <span class="token operator">=</span> <span class="token punctuation">(</span>ViewGroup<span class="token punctuation">)</span> mSubDecor<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>android<span class="token punctuation">.</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>
        contentParent<span class="token punctuation">.</span><span class="token function">removeAllViews</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//把我们的布局放到contentParent里面</span>
        LayoutInflater<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>mContext<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>resId<span class="token punctuation">,</span> contentParent<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mOriginalWindowCallback<span class="token punctuation">.</span><span class="token function">onContentChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setContentView</span><span class="token punctuation">(</span>View v<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">ensureSubDecor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ViewGroup contentParent <span class="token operator">=</span> <span class="token punctuation">(</span>ViewGroup<span class="token punctuation">)</span> mSubDecor<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>android<span class="token punctuation">.</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>
        contentParent<span class="token punctuation">.</span><span class="token function">removeAllViews</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        contentParent<span class="token punctuation">.</span><span class="token function">addView</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mOriginalWindowCallback<span class="token punctuation">.</span><span class="token function">onContentChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setContentView</span><span class="token punctuation">(</span>View v<span class="token punctuation">,</span> ViewGroup<span class="token punctuation">.</span>LayoutParams lp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">ensureSubDecor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ViewGroup contentParent <span class="token operator">=</span> <span class="token punctuation">(</span>ViewGroup<span class="token punctuation">)</span> mSubDecor<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>android<span class="token punctuation">.</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>
        contentParent<span class="token punctuation">.</span><span class="token function">removeAllViews</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        contentParent<span class="token punctuation">.</span><span class="token function">addView</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> lp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mOriginalWindowCallback<span class="token punctuation">.</span><span class="token function">onContentChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre>
<p>这是对应的3个实现的方法，发现都会调用<code>ensureSubDecor();</code>并且都会找到<code>contentParent</code>，然后把我们的布局放入进去</p>
<p>ok，到这里我们来捋一捋流程。</p>
<p><img src="http://img.blog.csdn.net/20170314165211151?watermark/2/text/aHR0cDovL3dleXllLm1l/font/5a6L5L2T/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="大致流程"></p>
<pre class=" language-java"><code class="language-java">    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">ensureSubDecor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mSubDecorInstalled<span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token comment" spellcheck="true">//这个mSubDecor其实就ViewGroup,调用createSubDecor()后，此时存放我们的布局的容器已经准备好了</span>
            mSubDecor <span class="token operator">=</span> <span class="token function">createSubDecor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//核心代码！</span>

            <span class="token comment" spellcheck="true">// If a title was set before we installed the decor, propagate it now</span>
            CharSequence title <span class="token operator">=</span> <span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>TextUtils<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">onTitleChanged</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token function">applyFixedSizeWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">//SubDecor 安装后的回调</span>
            <span class="token function">onSubDecorInstalled</span><span class="token punctuation">(</span>mSubDecor<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">//设置标记位</span>
            mSubDecorInstalled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

            <span class="token comment" spellcheck="true">// Invalidate if the panel menu hasn't been created before this.</span>
            <span class="token comment" spellcheck="true">// Panel menu invalidation is deferred avoiding application onCreateOptionsMenu</span>
            <span class="token comment" spellcheck="true">// being called in the middle of onCreate or similar.</span>
            <span class="token comment" spellcheck="true">// A pending invalidation will typically be resolved before the posted message</span>
            <span class="token comment" spellcheck="true">// would run normally in order to satisfy instance state restoration.</span>
            PanelFeatureState st <span class="token operator">=</span> <span class="token function">getPanelState</span><span class="token punctuation">(</span>FEATURE_OPTIONS_PANEL<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isDestroyed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>st <span class="token operator">==</span> null <span class="token operator">||</span> st<span class="token punctuation">.</span>menu <span class="token operator">==</span> null<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">invalidatePanelMenu</span><span class="token punctuation">(</span>FEATURE_SUPPORT_ACTION_BAR<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre>
<p>调用了<code>createSubDecor()</code>，看字面意思创建了一个<code>SubDecor</code>,看似跟<code>DecorView</code>有联系。我们看下里面做了什么操作</p>
<pre class=" language-java"><code class="language-java">    <span class="token keyword">private</span> ViewGroup <span class="token function">createSubDecor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        TypedArray a <span class="token operator">=</span> mContext<span class="token punctuation">.</span><span class="token function">obtainStyledAttributes</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>styleable<span class="token punctuation">.</span>AppCompatTheme<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>a<span class="token punctuation">.</span><span class="token function">hasValue</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>styleable<span class="token punctuation">.</span>AppCompatTheme_windowActionBar<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            a<span class="token punctuation">.</span><span class="token function">recycle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">//还记得我们使用AppCompatActivity如果不设置AppCompat主题报的错误吗？就是在这里抛出来的</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span>
                    <span class="token string">"You need to use a Theme.AppCompat theme (or descendant) with this activity."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment" spellcheck="true">//初始化相关特征标志</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">getBoolean</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>styleable<span class="token punctuation">.</span>AppCompatTheme_windowNoTitle<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">//一般我们的主题默认都是NoTitle</span>
            <span class="token function">requestWindowFeature</span><span class="token punctuation">(</span>Window<span class="token punctuation">.</span>FEATURE_NO_TITLE<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">getBoolean</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>styleable<span class="token punctuation">.</span>AppCompatTheme_windowActionBar<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">// Don't allow an action bar if there is no title.</span>
            <span class="token function">requestWindowFeature</span><span class="token punctuation">(</span>FEATURE_SUPPORT_ACTION_BAR<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">getBoolean</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>styleable<span class="token punctuation">.</span>AppCompatTheme_windowActionBarOverlay<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">requestWindowFeature</span><span class="token punctuation">(</span>FEATURE_SUPPORT_ACTION_BAR_OVERLAY<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">getBoolean</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>styleable<span class="token punctuation">.</span>AppCompatTheme_windowActionModeOverlay<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">requestWindowFeature</span><span class="token punctuation">(</span>FEATURE_ACTION_MODE_OVERLAY<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        mIsFloating <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">getBoolean</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>styleable<span class="token punctuation">.</span>AppCompatTheme_android_windowIsFloating<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        a<span class="token punctuation">.</span><span class="token function">recycle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">//重点！在这里就创建DecorView,至于DecorView到底是什么以及如何创建的，稍后会讲到</span>
        mWindow<span class="token punctuation">.</span><span class="token function">getDecorView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">final</span> LayoutInflater inflater <span class="token operator">=</span> LayoutInflater<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>mContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//可以看到其实就是个ViewGroup，我们接着往下看，跟DecorView到底有啥关系</span>
        ViewGroup subDecor <span class="token operator">=</span> null<span class="token punctuation">;</span>


        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mWindowNoTitle<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">//上面说了主题默认都是NoTitle，所以不会走里面的方法</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mIsFloating<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment" spellcheck="true">// If we're floating, inflate the dialog title decor</span>
                subDecor <span class="token operator">=</span> <span class="token punctuation">(</span>ViewGroup<span class="token punctuation">)</span> inflater<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>
                        R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>abc_dialog_title_material<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>mHasActionBar<span class="token punctuation">)</span> <span class="token punctuation">{</span>

                TypedValue outValue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TypedValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                mContext<span class="token punctuation">.</span><span class="token function">getTheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">resolveAttribute</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>attr<span class="token punctuation">.</span>actionBarTheme<span class="token punctuation">,</span> outValue<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

                <span class="token comment" spellcheck="true">// Now inflate the view using the themed context and set it as the content view</span>
                subDecor <span class="token operator">=</span> <span class="token punctuation">(</span>ViewGroup<span class="token punctuation">)</span> LayoutInflater<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>themedContext<span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>abc_screen_toolbar<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token comment" spellcheck="true">/**
                 * Propagate features to DecorContentParent
                 */</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>mOverlayActionBar<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    mDecorContentParent<span class="token punctuation">.</span><span class="token function">initFeature</span><span class="token punctuation">(</span>FEATURE_SUPPORT_ACTION_BAR_OVERLAY<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>mFeatureProgress<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    mDecorContentParent<span class="token punctuation">.</span><span class="token function">initFeature</span><span class="token punctuation">(</span>Window<span class="token punctuation">.</span>FEATURE_PROGRESS<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>mFeatureIndeterminateProgress<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    mDecorContentParent<span class="token punctuation">.</span><span class="token function">initFeature</span><span class="token punctuation">(</span>Window<span class="token punctuation">.</span>FEATURE_INDETERMINATE_PROGRESS<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">//我们进入else</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mOverlayActionMode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment" spellcheck="true">//调用了requestWindowFeature(FEATURE_ACTION_MODE_OVERLAY)会走进来</span>
                subDecor <span class="token operator">=</span> <span class="token punctuation">(</span>ViewGroup<span class="token punctuation">)</span> inflater<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>
                        R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>abc_screen_simple_overlay_action_mode<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment" spellcheck="true">//ok，所以如果这些我们都没设置，默认就走到这里来了，在这里映射出了subDecor,稍后我们来看下这个布局是啥</span>
                subDecor <span class="token operator">=</span> <span class="token punctuation">(</span>ViewGroup<span class="token punctuation">)</span> inflater<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>abc_screen_simple<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>subDecor <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span>
                    <span class="token string">"AppCompat does not support the current theme features: { "</span>
                            <span class="token operator">+</span> <span class="token string">"windowActionBar: "</span> <span class="token operator">+</span> mHasActionBar
                            <span class="token operator">+</span> <span class="token string">", windowActionBarOverlay: "</span><span class="token operator">+</span> mOverlayActionBar
                            <span class="token operator">+</span> <span class="token string">", android:windowIsFloating: "</span> <span class="token operator">+</span> mIsFloating
                            <span class="token operator">+</span> <span class="token string">", windowActionModeOverlay: "</span> <span class="token operator">+</span> mOverlayActionMode
                            <span class="token operator">+</span> <span class="token string">", windowNoTitle: "</span> <span class="token operator">+</span> mWindowNoTitle
                            <span class="token operator">+</span> <span class="token string">" }"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>mDecorContentParent <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mTitleView <span class="token operator">=</span> <span class="token punctuation">(</span>TextView<span class="token punctuation">)</span> subDecor<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>title<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment" spellcheck="true">// Make the decor optionally fit system windows, like the window's decor</span>
        ViewUtils<span class="token punctuation">.</span><span class="token function">makeOptionalFitsSystemWindows</span><span class="token punctuation">(</span>subDecor<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//这个contentView很重要，是我们布局的父容器，你可以把它直接当成FrameLayout</span>
        <span class="token keyword">final</span> ContentFrameLayout contentView <span class="token operator">=</span> <span class="token punctuation">(</span>ContentFrameLayout<span class="token punctuation">)</span> subDecor<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>
                R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>action_bar_activity_content<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//看过相关知识的同学应该知道android.R.id.content这个Id在以前是我们布局的父容器的Id</span>
        <span class="token keyword">final</span> ViewGroup windowContentView <span class="token operator">=</span> <span class="token punctuation">(</span>ViewGroup<span class="token punctuation">)</span> mWindow<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>android<span class="token punctuation">.</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>windowContentView <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">// There might be Views already added to the Window's content view so we need to</span>
            <span class="token comment" spellcheck="true">// migrate them to our content view</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>windowContentView<span class="token punctuation">.</span><span class="token function">getChildCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">final</span> View child <span class="token operator">=</span> windowContentView<span class="token punctuation">.</span><span class="token function">getChildAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                windowContentView<span class="token punctuation">.</span><span class="token function">removeViewAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                contentView<span class="token punctuation">.</span><span class="token function">addView</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment" spellcheck="true">//注意！原来windowContentView的Id是android.R.id.content，现在设置成NO_ID</span>
            windowContentView<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>View<span class="token punctuation">.</span>NO_ID<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">//在之前这个id是我们的父容器，现在将contentView设置成android.R.id.content，那么可以初步判定，这个contentView将会是我的父容器</span>
            contentView<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>android<span class="token punctuation">.</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment" spellcheck="true">// The decorContent may have a foreground drawable set (windowContentOverlay).</span>
            <span class="token comment" spellcheck="true">// Remove this as we handle it ourselves</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>windowContentView <span class="token keyword">instanceof</span> <span class="token class-name">FrameLayout</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token punctuation">(</span><span class="token punctuation">(</span>FrameLayout<span class="token punctuation">)</span> windowContentView<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setForeground</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment" spellcheck="true">// Now set the Window's content view with the decor</span>
        <span class="token comment" spellcheck="true">//注意！重要！将subDecor放入到了这个Window里面，这个Window是个抽象类，其实现类是PhoneWindow，稍后会讲到</span>
        mWindow<span class="token punctuation">.</span><span class="token function">setContentView</span><span class="token punctuation">(</span>subDecor<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

        <span class="token keyword">return</span> subDecor<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre>
<p>看到了requestWindowFeature是不是很熟悉？还记得我们是怎么让Activity全屏的吗？</p>
<pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">requestWindowFeature</span><span class="token punctuation">(</span>Window<span class="token punctuation">.</span>FEATURE_NO_TITLE<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">getWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setFlags</span><span class="token punctuation">(</span>WindowManager<span class="token punctuation">.</span>LayoutParams<span class="token punctuation">.</span>FILL_PARENT
        <span class="token punctuation">,</span>WindowManager<span class="token punctuation">.</span>LayoutParams<span class="token punctuation">.</span>FILL_PARENT<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_test<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre>
<p>而且这两行代码必须在setContentView()之前调用，知道为啥了吧？因为在这里就把Window的相关特征标志给初始化了，在setContentView()之后调用就不起作用了！</p>
<p>在代码里其他比较重要的地方已写了注释，我们来看下这个<code>abc_screen_simple.xml</code>的布局到底是什么样子的</p>
<p><strong>abc_screen_simple.xml</strong></p>
<pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>android.support.v7.internal.widget.FitWindowsLinearLayout</span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/action_bar_root<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>fitsSystemWindows</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>android.support.v7.internal.widget.ViewStubCompat</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/action_mode_bar_stub<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>inflatedId</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/action_mode_bar<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@layout/abc_action_mode_bar<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span> <span class="token attr-name">layout</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@layout/abc_screen_content_include<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>android.support.v7.internal.widget.FitWindowsLinearLayout</span><span class="token punctuation">></span></span>
</code></pre>
<p><strong>abc_screen_content_include.xml</strong></p>
<pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>merge</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>android.support.v7.internal.widget.ContentFrameLayout</span>
            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@id/action_bar_activity_content<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>foregroundGravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fill_horizontal|top<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>foreground</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>?android:attr/windowContentOverlay<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>merge</span><span class="token punctuation">></span></span>
</code></pre>
<p>原来这个<code>subDecor</code>就是<code>FitWindowsLinearLayout</code></p>
<p>看到这2个布局，我们先把这2个布局用图画出来。</p>
<p><img src="http://img.blog.csdn.net/20170313203810270?watermark/2/text/aHR0cDovL3dleXllLm1l/font/5a6L5L2T/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="布局结构"><br>（图不在美，能懂就行~）</p>
<p>从AppCompatActivity到现在布局，在我的脑海里浮现出这样的的画面。。。</p>
<p>那这是不是我们app最终的布局呢？当然不是，因为我们还没讲到非常重要的两行代码</p>
<blockquote>
<p><code>mWindow.getDecorView();</code><br><code>mWindow.setContentView(subDecor);</code></p>
</blockquote>
<p>注释中说道Window是个抽象类，其实现类是PhoneWindow。那么我们先来看PhoneWindow的getDecorView做了什么</p>
<p><strong>PhoneWindow.java</strong></p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PhoneWindow</span> <span class="token keyword">extends</span> <span class="token class-name">Window</span> <span class="token keyword">implements</span> <span class="token class-name">MenuBuilder<span class="token punctuation">.</span>Callback</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> View <span class="token function">getDecorView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mDecor <span class="token operator">==</span> null <span class="token operator">||</span> mForceDecorInstall<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">installDecor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> mDecor<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">installDecor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">//mDecor是DecorView,第一次mDecor=null，所以调用generateDecor</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mDecor <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mDecor <span class="token operator">=</span> <span class="token function">generateDecor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
         <span class="token punctuation">}</span>
         <span class="token comment" spellcheck="true">//第一次mContentParent也等于null</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mContentParent <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">//可以看到把DecorView传入进去了</span>
            mContentParent <span class="token operator">=</span> <span class="token function">generateLayout</span><span class="token punctuation">(</span>mDecor<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre>
<p>在generateDecor()做了什么？其实返回了一个DecorView对象。</p>
<pre class=" language-java"><code class="language-java">    <span class="token keyword">protected</span> DecorView <span class="token function">generateDecor</span><span class="token punctuation">(</span><span class="token keyword">int</span> featureId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// System process doesn't have application context and in that case we need to directly use</span>
        <span class="token comment" spellcheck="true">// the context we have. Otherwise we want the application context, so we don't cling to the</span>
        <span class="token comment" spellcheck="true">// activity.</span>
        Context context<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mUseDecorContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            Context applicationContext <span class="token operator">=</span> <span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>applicationContext <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                context <span class="token operator">=</span> <span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DecorContext</span><span class="token punctuation">(</span>applicationContext<span class="token punctuation">,</span> <span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>mTheme <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    context<span class="token punctuation">.</span><span class="token function">setTheme</span><span class="token punctuation">(</span>mTheme<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            context <span class="token operator">=</span> <span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">DecorView</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> featureId<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token function">getAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre>
<p>DecorView是啥呢？</p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DecorView</span> <span class="token keyword">extends</span> <span class="token class-name">FrameLayout</span> <span class="token keyword">implements</span> <span class="token class-name">RootViewSurfaceTaker</span><span class="token punctuation">,</span> WindowCallbacks <span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre>
<p>哦~原来继承FrameLayout，起到了装饰的作用。</p>
<p>我们在来看看<code>generateLayout()</code>做了什么。</p>
<pre class=" language-java"><code class="language-java">    <span class="token keyword">protected</span> ViewGroup <span class="token function">generateLayout</span><span class="token punctuation">(</span>DecorView decor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        TypedArray a <span class="token operator">=</span> <span class="token function">getWindowStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//设置一堆标志位...</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mForcedStatusBarColor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">//获取主题状态栏的颜色</span>
            mStatusBarColor <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>styleable<span class="token punctuation">.</span>Window_statusBarColor<span class="token punctuation">,</span> <span class="token number">0xFF000000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mForcedNavigationBarColor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">//获取底部NavigationBar颜色</span>
            mNavigationBarColor <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>styleable<span class="token punctuation">.</span>Window_navigationBarColor<span class="token punctuation">,</span> <span class="token number">0xFF000000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment" spellcheck="true">//获取主题一些资源</span>
       <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

        <span class="token comment" spellcheck="true">// Inflate the window decor.</span>

        <span class="token keyword">int</span> layoutResource<span class="token punctuation">;</span>
        <span class="token keyword">int</span> features <span class="token operator">=</span> <span class="token function">getLocalFeatures</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// System.out.println("Features: 0x" + Integer.toHexString(features));</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>features <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> FEATURE_SWIPE_TO_DISMISS<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>我们设置不同的主题以及样式，会采用不同的布局文件<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">//记住这个布局，之后我们会来验证下布局的结构</span>
            layoutResource <span class="token operator">=</span> R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>screen_simple<span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">// System.out.println("Simple!");</span>
        <span class="token punctuation">}</span>
        <span class="token comment" spellcheck="true">//要开始更改mDecor啦~</span>
        mDecor<span class="token punctuation">.</span><span class="token function">startChanging</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//注意，此时把screen_simple放到了DecorView里面</span>
        mDecor<span class="token punctuation">.</span><span class="token function">onResourcesLoaded</span><span class="token punctuation">(</span>mLayoutInflater<span class="token punctuation">,</span> layoutResource<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//这里的ID_ANDROID_CONTENT就是R.id.content;</span>
        ViewGroup contentParent <span class="token operator">=</span> <span class="token punctuation">(</span>ViewGroup<span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span>ID_ANDROID_CONTENT<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>contentParent <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"Window couldn't find content container view"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>


        <span class="token comment" spellcheck="true">//这里的getContainer()返回的是个Window类，也就是父Window，一般为空</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> Drawable background<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mBackgroundResource <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                background <span class="token operator">=</span> <span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDrawable</span><span class="token punctuation">(</span>mBackgroundResource<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                background <span class="token operator">=</span> mBackgroundDrawable<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment" spellcheck="true">//设置背景</span>
            mDecor<span class="token punctuation">.</span><span class="token function">setWindowBackground</span><span class="token punctuation">(</span>background<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">final</span> Drawable frame<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mFrameResource <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                frame <span class="token operator">=</span> <span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDrawable</span><span class="token punctuation">(</span>mFrameResource<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                frame <span class="token operator">=</span> null<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            mDecor<span class="token punctuation">.</span><span class="token function">setWindowFrame</span><span class="token punctuation">(</span>frame<span class="token punctuation">)</span><span class="token punctuation">;</span>

            mDecor<span class="token punctuation">.</span><span class="token function">setElevation</span><span class="token punctuation">(</span>mElevation<span class="token punctuation">)</span><span class="token punctuation">;</span>
            mDecor<span class="token punctuation">.</span><span class="token function">setClipToOutline</span><span class="token punctuation">(</span>mClipToOutline<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>mTitle <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">setTitle</span><span class="token punctuation">(</span>mTitle<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>mTitleColor <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mTitleColor <span class="token operator">=</span> mTextColor<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token function">setTitleColor</span><span class="token punctuation">(</span>mTitleColor<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        mDecor<span class="token punctuation">.</span><span class="token function">finishChanging</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> contentParent<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre>
<p>可以看到根据不同主题属性使用的不同的布局，然后返回了这个布局<code>contentParent</code> 。</p>
<p>我们来看看这个screen_simple.xml布局是什么样子的</p>
<pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>fitsSystemWindows</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ViewStub</span> <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/action_mode_bar_stub<span class="token punctuation">"</span></span>
              <span class="token attr-name"><span class="token namespace">android:</span>inflatedId</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/action_mode_bar<span class="token punctuation">"</span></span>
              <span class="token attr-name"><span class="token namespace">android:</span>layout</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@layout/action_mode_bar<span class="token punctuation">"</span></span>
              <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
              <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FrameLayout</span>
         <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@android:id/content<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">android:</span>foregroundInsidePadding</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">android:</span>foregroundGravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fill_horizontal|top<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">android:</span>foreground</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>?android:attr/windowContentOverlay<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span>
</code></pre>
<p>咦，这个布局结构跟<code>subDecor</code>好相似啊。。</p>
<p>好了，到目前为止我们知道了，当我们调用<code>mWindow.getDecorView();</code>的时候里面创建DecorView，然后又根据不同主题属性添加不同布局放到DecorView下，然后找到这个布局的<code>R.id.content</code>，也就是<code>mContentParent</code>。ok，搞清楚<code>mWindow.getDecorView();</code>之后，我们在来看看<code>mWindow.setContentView(subDecor);</code>（注意：此时把subDecor传入进去）</p>
<pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setContentView</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">//调用下面的重载方法</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>view<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ViewGroup<span class="token punctuation">.</span>LayoutParams</span><span class="token punctuation">(</span>MATCH_PARENT<span class="token punctuation">,</span> MATCH_PARENT<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setContentView</span><span class="token punctuation">(</span>View view<span class="token punctuation">,</span> ViewGroup<span class="token punctuation">.</span>LayoutParams params<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">//在mWindow.getDecorView()已经创建了mContentParent</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mContentParent <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">installDecor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">hasFeature</span><span class="token punctuation">(</span>FEATURE_CONTENT_TRANSITIONS<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mContentParent<span class="token punctuation">.</span><span class="token function">removeAllViews</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment" spellcheck="true">//是否有transitions动画。没有，进入else</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasFeature</span><span class="token punctuation">(</span>FEATURE_CONTENT_TRANSITIONS<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            view<span class="token punctuation">.</span><span class="token function">setLayoutParams</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">final</span> Scene newScene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>mContentParent<span class="token punctuation">,</span> view<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">transitionTo</span><span class="token punctuation">(</span>newScene<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">//重要！！将这个subDecor也就是FitWindowsLinearLayout添加到这个mContentParent里面了</span>
            <span class="token comment" spellcheck="true">//mContentParent是FrameLayout，在之前设置的View.NO_ID</span>
            mContentParent<span class="token punctuation">.</span><span class="token function">addView</span><span class="token punctuation">(</span>view<span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        mContentParent<span class="token punctuation">.</span><span class="token function">requestApplyInsets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> Callback cb <span class="token operator">=</span> <span class="token function">getCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>cb <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isDestroyed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            cb<span class="token punctuation">.</span><span class="token function">onContentChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        mContentParentExplicitlySet <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre>
<p>当调用了<code>mWindow.getDecorView();</code>创建了DecorView以及<code>mContentParent</code>,并且把<code>subDecor</code>放到了<code>mContentParent</code>里面。我们再来回头看看<code>AppCompatDelegateImplV9</code>，还记得它吗？当我们在<code>AppCompatActivity</code>的<code>setContentView</code>的时候会去调用<code>AppCompatDelegateImplV9</code>的<code>setContentView</code></p>
<p><strong>AppCompatDelegateImplV9.java</strong></p>
<pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setContentView</span><span class="token punctuation">(</span>View v<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">//此时DecorView和subDecor都创建好了</span>
        <span class="token function">ensureSubDecor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//还记得调用createSubDecor的时候把原本是R.id.content的windowContentView设置成了NO_ID</span>
        <span class="token comment" spellcheck="true">//并且将contentView也就是ContentFrameLayout设置成了R.id.content吗？</span>
        <span class="token comment" spellcheck="true">//也就是说此时的contentParent就是ContentFrameLayout</span>
        ViewGroup contentParent <span class="token operator">=</span> <span class="token punctuation">(</span>ViewGroup<span class="token punctuation">)</span> mSubDecor<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>android<span class="token punctuation">.</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>
        contentParent<span class="token punctuation">.</span><span class="token function">removeAllViews</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//将我的布局放到contentParent里面</span>
        contentParent<span class="token punctuation">.</span><span class="token function">addView</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mOriginalWindowCallback<span class="token punctuation">.</span><span class="token function">onContentChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token keyword">int</span> resId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">ensureSubDecor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ViewGroup contentParent <span class="token operator">=</span> <span class="token punctuation">(</span>ViewGroup<span class="token punctuation">)</span> mSubDecor<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>android<span class="token punctuation">.</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>
        contentParent<span class="token punctuation">.</span><span class="token function">removeAllViews</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//将我们的布局id映射成View并且放到contentParent下</span>
        LayoutInflater<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>mContext<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>resId<span class="token punctuation">,</span> contentParent<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mOriginalWindowCallback<span class="token punctuation">.</span><span class="token function">onContentChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setContentView</span><span class="token punctuation">(</span>View v<span class="token punctuation">,</span> ViewGroup<span class="token punctuation">.</span>LayoutParams lp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">ensureSubDecor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ViewGroup contentParent <span class="token operator">=</span> <span class="token punctuation">(</span>ViewGroup<span class="token punctuation">)</span> mSubDecor<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>android<span class="token punctuation">.</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>
        contentParent<span class="token punctuation">.</span><span class="token function">removeAllViews</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        contentParent<span class="token punctuation">.</span><span class="token function">addView</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> lp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mOriginalWindowCallback<span class="token punctuation">.</span><span class="token function">onContentChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre>
<h2 id="完整布局"><a href="#完整布局" class="headerlink" title="完整布局"></a>完整布局</h2><p>ok,看到这里，想必大家在脑海里也有个大致布局了吧，我们再来把整个app初始布局画出来</p>
<p><img src="http://img.blog.csdn.net/20170314164258993?watermark/2/text/aHR0cDovL3dleXllLm1l/font/5a6L5L2T/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="不喜勿喷..."></p>
<h2 id="验证布局"><a href="#验证布局" class="headerlink" title="验证布局"></a>验证布局</h2><p>接下来我们来验证下我们布局结构是否正确</p>
<p>新建一个<code>Activity</code></p>
<pre class=" language-java"><code class="language-java">    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestAcitivty</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_test<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<p>主题</p>
<pre class=" language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- Base application theme. --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>AppTheme<span class="token punctuation">"</span></span> <span class="token attr-name">parent</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Theme.AppCompat.Light.NoActionBar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token comment" spellcheck="true">&lt;!-- Customize your theme here. --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>colorPrimary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@color/colorPrimary<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>colorPrimaryDark<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@color/colorPrimaryDark<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>colorAccent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@color/colorAccent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android:listDivider<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@color/divider_dddddd<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>
</code></pre>
<p>为了演示布局非常简单，就是一个textview</p>
<pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
          <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/textView<span class="token punctuation">"</span></span>
          <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
          <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
          <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TextView</span><span class="token punctuation">></span></span>
</code></pre>
<p>运行后，我们在用<code>hierarchyviewer</code>查看下</p>
<p><img src="http://img.blog.csdn.net/20170314163715943?watermark/2/text/aHR0cDovL3dleXllLm1l/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>看来我们的脑补的布局是对的！</p>
<h2 id="学后总结"><a href="#学后总结" class="headerlink" title="学后总结"></a>学后总结</h2><p>整个流程就是这样。看到这里我们明白了，当我们调用<code>setContentView</code>的时候加载了2次系统布局，在<code>PhoneWindow</code>里面创建了<code>DecorView</code>,<code>DecorView</code>是我们的最底层的View，并且将我们的布局放入到一个<code>ContentFrameLayout</code>里，我们还知道在<code>setContentView</code>的时候进行了相关特征标志初始化，所以在它之后调用<code>requestWindowFeature</code>就会不起作用然后报错。</p>
<h2 id="setContentView时序图"><a href="#setContentView时序图" class="headerlink" title="setContentView时序图"></a>setContentView时序图</h2><p>知道这些之后我们不妨用时序图来梳理下整个调用的流程</p>
<p><img src="http://img.blog.csdn.net/20170315105945025?watermark/2/text/aHR0cDovL3dleXllLm1l/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="setContentView时序图"></p>
<p><a href="http://img.blog.csdn.net/20170315105945025?watermark/2/text/aHR0cDovL3dleXllLm1l/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" target="_blank" rel="external">查看高清无码大图</a></p>
<h2 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h2><p><a href="http://www.jianshu.com/p/521f9b176bc7" target="_blank" rel="external">【凯子哥带你学Framework】Activity界面显示全解析（上）</a></p>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>当然，在这篇文章中，因为篇幅问题，也有许多没有讲的重要知识点，比如:</p>
<ul>
<li><code>PhoneWindow</code>在哪里初始化？它做了哪些事？</li>
<li><code>view</code>树是如何被管理的？</li>
<li><code>findViewById</code>到底是怎么找到对应的View的？</li>
<li>为什么说<code>setContentView</code>在<code>onResume</code>在对用户可见？</li>
<li>等等…</li>
</ul>
<p>在下一篇中我会详细讲解这些问题。</p>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>如果你觉得不错，点下喜欢呗~当做是对我的鼓励( ^_^ )<br>文中如有错误，希望大家指出！</p>
<blockquote>
<p>博主整理不易，转载请注明出处:<br><a href="http://weyye.me/detail/framework-appcompatactivity-setcontentview/">http://weyye.me/detail/framework-appcompatactivity-setcontentview/</a></p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[手撸一个今日头条视频下载器]]></title>
      <url>http://weyye.me/detail/today-news-video/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今日头条是我最喜欢的app之一，当然喜欢并不是因为内容精彩，而是逗比的评论，而且看视频的没有广告，我这个人喜欢收藏，尤其是小视频（手动滑稽），可是却没有下载的按钮，之后在<a href="http://www.weyye.me/detail/my-project-today-news/" target="_blank" rel="external">仿今日头条项目</a>里也需要用到视频，进入网页右键另存为也比较麻烦，作为程序猿，这可不是我们的办事风格。于是动手撸了一个视频下载器,喜欢的记得给个Star，当作是给我的鼓励和动力吧。<br><a id="more"></a></p>
<h2 id="成果图"><a href="#成果图" class="headerlink" title="成果图"></a>成果图</h2><p><img src="/img/video1.gif" alt=""></p>
<p><img src="/img/video2.gif" alt=""></p>
<h2 id="源码下载"><a href="#源码下载" class="headerlink" title="源码下载"></a>源码下载</h2><p><a href="https://github.com/yewei02538/TodayNewsVideoDownloader" target="_blank" rel="external">https://github.com/yewei02538/TodayNewsVideoDownloader</a></p>
<h2 id="分析视频地址"><a href="#分析视频地址" class="headerlink" title="分析视频地址"></a>分析视频地址</h2><p>详细的视频地址分析请看<a href="http://blog.csdn.net/jiangwei0910410003/article/details/54092364" target="_blank" rel="external">Python脚本下载今日头条视频(附加Android版本辅助下载器)</a></p>
<p>这里我摘出来视频的获取流程</p>
<blockquote>
<p>1、将/video/urls/v/1/toutiao/mp4/{videoid}?r={Math.random()}，进行crc32加密。<br>2、将上面得到的加密值拼接到上面的链接中即可，最终的链接形式是：<br><a href="http://i.snssdk.com/video/urls/v/1/toutiao/mp4/{videoid}?r={Math.random()}&amp;s={crc32值}" target="_blank" rel="external">http://i.snssdk.com/video/urls/v/1/toutiao/mp4/{videoid}?r={Math.random()}&amp;s={crc32值}</a><br>3、访问这个链接得到一个json数据，需要解析video_list数组中的main_url值，然后用base64解码得到最终的原始视频链接。<br>看到上面的步骤并不复杂，但是在操作过程中还是有些地方需要注意的，主要是上面的那个随机数和crc32加密逻辑,videoid可以从视频网页的html源代码里面获取</p>
</blockquote>
<p><img src="/img/QQ截图20170215161710.png" alt=""></p>
<p>用正则表达式取出videoid即可</p>
<p>看流程分析，我们需要视频所在的网页地址，在get请求访问成功的回调里面进行正则表达式匹配，然后将/video/urls/v/1/toutiao/mp4/{videoid}?r={Math.random()}，进行crc32加密，然后拼在一起，再get请求，再在请求成功的回调里解析json获取base64编码的地址，然后进行解码，最后获得视频源地址。这一些列操作都是需要请求成功才可以执行的，可以想到嵌套里面再嵌套，那种代码逻辑着实让人看着蛋疼，所以这个时候RxJava的优势就出来了，完美的解决了这个问题，如果还不是很懂RxJava的朋友可以去看下这篇文章<a href="http://gank.io/post/560e15be2dca930e00da1083" target="_blank" rel="external">给 Android 开发者的 RxJava 详解</a></p>
<h2 id="撸代码"><a href="#撸代码" class="headerlink" title="撸代码"></a>撸代码</h2><p>首先得先获取到播放视频的网页地址，这里我使用的是分享来接收，今日头条有分享功能，分享的内容里面肯定会有地址，所以我们来配置下接收分享</p>
<pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span>activity
            android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">".ui.MainActivity"</span>
            android<span class="token operator">:</span>label<span class="token operator">=</span><span class="token string">"@string/app_name"</span>
            android<span class="token operator">:</span>launchMode<span class="token operator">=</span><span class="token string">"singleTask"</span>
            android<span class="token operator">:</span>theme<span class="token operator">=</span><span class="token string">"@style/AppTheme.NoActionBar"</span><span class="token operator">></span>
            <span class="token operator">&lt;</span>intent<span class="token operator">-</span>filter<span class="token operator">></span>
                <span class="token operator">&lt;</span>action android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.intent.action.MAIN"</span><span class="token operator">/</span><span class="token operator">></span>

                <span class="token operator">&lt;</span>category android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.intent.category.LAUNCHER"</span><span class="token operator">/</span><span class="token operator">></span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>intent<span class="token operator">-</span>filter<span class="token operator">></span>
            <span class="token operator">&lt;</span>intent<span class="token operator">-</span>filter<span class="token operator">></span>
                <span class="token operator">&lt;</span>action android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.intent.action.SEND"</span><span class="token operator">/</span><span class="token operator">></span>

                <span class="token operator">&lt;</span>category android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.intent.category.DEFAULT"</span><span class="token operator">/</span><span class="token operator">></span>

                <span class="token operator">&lt;</span>data android<span class="token operator">:</span>mimeType<span class="token operator">=</span><span class="token string">"text/plain"</span><span class="token operator">/</span><span class="token operator">></span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>intent<span class="token operator">-</span>filter<span class="token operator">></span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>activity<span class="token operator">></span>
</code></pre>
<p>ok,这样就具备的接收的功能，然后在<code>MainActivity</code>里面写上接受的逻辑</p>
<pre class=" language-java"><code class="language-java">    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onNewIntent</span><span class="token punctuation">(</span>Intent intent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onNewIntent</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>
        Log<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token string">"MainActivity"</span><span class="token punctuation">,</span> <span class="token string">"onNewIntent"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        String title <span class="token operator">=</span> intent<span class="token punctuation">.</span><span class="token function">getStringExtra</span><span class="token punctuation">(</span>Intent<span class="token punctuation">.</span>EXTRA_TEXT<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">parseUrl</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">parseUrl</span><span class="token punctuation">(</span>String title<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">//取出网页地址</span>
        Pattern pattern <span class="token operator">=</span> Pattern<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">"【(.+)】\\n(http.+)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">final</span> Matcher matcher <span class="token operator">=</span> pattern<span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>matcher<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token keyword">final</span> ProgressDialog dialog <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ProgressDialog</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            dialog<span class="token punctuation">.</span><span class="token function">setMessage</span><span class="token punctuation">(</span><span class="token string">"正在获取视频地址，请稍后~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            dialog<span class="token punctuation">.</span><span class="token function">setCanceledOnTouchOutside</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">//解析视频真实地址</span>
            VideoPathDecoder decoder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VideoPathDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token annotation punctuation">@Override</span>
                <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSuccess</span><span class="token punctuation">(</span>Video s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    dialog<span class="token punctuation">.</span><span class="token function">dismiss</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    s<span class="token punctuation">.</span>title <span class="token operator">=</span> matcher<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    mDatas<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    mAdapter<span class="token punctuation">.</span><span class="token function">notifyItemInserted</span><span class="token punctuation">(</span>mDatas<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">startDownload</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token annotation punctuation">@Override</span>
                <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onDecodeError</span><span class="token punctuation">(</span>Throwable e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    dialog<span class="token punctuation">.</span><span class="token function">dismiss</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    Snackbar<span class="token punctuation">.</span><span class="token function">make</span><span class="token punctuation">(</span>mRecyclerView<span class="token punctuation">,</span> <span class="token string">"获取视频失败！"</span><span class="token punctuation">,</span> Snackbar<span class="token punctuation">.</span>LENGTH_LONG<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
            dialog<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            decoder<span class="token punctuation">.</span><span class="token function">decodePath</span><span class="token punctuation">(</span>matcher<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            Snackbar<span class="token punctuation">.</span><span class="token function">make</span><span class="token punctuation">(</span>mRecyclerView<span class="token punctuation">,</span> <span class="token string">"不是分享的链接"</span><span class="token punctuation">,</span> Snackbar<span class="token punctuation">.</span>LENGTH_LONG<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre>
<p>首先通过正则表达式取出分享链接，然后进行视频解析</p>
<p>视频解析的核心代码</p>
<pre class=" language-java"><code class="language-java"> AppClient<span class="token punctuation">.</span><span class="token function">getApiService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getVideoHtml</span><span class="token punctuation">(</span>srcUrl<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Observable<span class="token operator">&lt;</span>ResultResponse<span class="token operator">&lt;</span>VideoModel<span class="token operator">>>></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> Observable<span class="token operator">&lt;</span>ResultResponse<span class="token operator">&lt;</span>VideoModel<span class="token operator">>></span> <span class="token function">call</span><span class="token punctuation">(</span>String response<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        Pattern pattern <span class="token operator">=</span> Pattern<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">"videoid:\'(.+)\'"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        Matcher matcher <span class="token operator">=</span> pattern<span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>matcher<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            String videoId <span class="token operator">=</span> matcher<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            Log<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span>videoId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token comment" spellcheck="true">//1.将/video/urls/v/1/toutiao/mp4/{videoid}?r={Math.random()}，进行crc32加密。</span>
                            String r <span class="token operator">=</span> <span class="token function">getRandom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            CRC32 crc32 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CRC32</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            String s <span class="token operator">=</span> String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>ApiService<span class="token punctuation">.</span>URL_VIDEO<span class="token punctuation">,</span> videoId<span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token comment" spellcheck="true">//进行crc32加密。</span>
                            crc32<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            String crcString <span class="token operator">=</span> crc32<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">;</span>
                            <span class="token comment" spellcheck="true">//2.访问http://i.snssdk.com/video/urls/v/1/toutiao/mp4/{videoid}?r={Math.random()}&amp;s={crc32值}</span>
                            String url <span class="token operator">=</span> ApiService<span class="token punctuation">.</span>HOST_VIDEO <span class="token operator">+</span> s <span class="token operator">+</span> <span class="token string">"&amp;s="</span> <span class="token operator">+</span> crcString<span class="token punctuation">;</span>
                            Log<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token keyword">return</span> AppClient<span class="token punctuation">.</span><span class="token function">getApiService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getVideoData</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        <span class="token keyword">return</span> null<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token operator">&lt;</span>ResultResponse<span class="token operator">&lt;</span>VideoModel<span class="token operator">></span><span class="token punctuation">,</span> Video<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> Video <span class="token function">call</span><span class="token punctuation">(</span>ResultResponse<span class="token operator">&lt;</span>VideoModel<span class="token operator">></span> videoModelResultResponse<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        VideoModel<span class="token punctuation">.</span>VideoListBean data <span class="token operator">=</span> videoModelResultResponse<span class="token punctuation">.</span>data<span class="token punctuation">.</span>video_list<span class="token punctuation">;</span>

                        <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>video_3 <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token keyword">return</span> <span class="token function">updateVideo</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>video_3<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>video_2 <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token keyword">return</span> <span class="token function">updateVideo</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>video_2<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>video_1 <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token keyword">return</span> <span class="token function">updateVideo</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>video_1<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        <span class="token keyword">return</span> null<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token keyword">private</span> String <span class="token function">getRealPath</span><span class="token punctuation">(</span>String base64<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>Base64<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>base64<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Base64<span class="token punctuation">.</span>DEFAULT<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token keyword">private</span> Video <span class="token function">updateVideo</span><span class="token punctuation">(</span>Video video<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token comment" spellcheck="true">//base64解码</span>
                        video<span class="token punctuation">.</span>main_url <span class="token operator">=</span> <span class="token function">getRealPath</span><span class="token punctuation">(</span>video<span class="token punctuation">.</span>main_url<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">return</span> video<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">subscribeOn</span><span class="token punctuation">(</span>Schedulers<span class="token punctuation">.</span><span class="token function">io</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">observeOn</span><span class="token punctuation">(</span>AndroidSchedulers<span class="token punctuation">.</span><span class="token function">mainThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Subscriber</span><span class="token operator">&lt;</span>Video<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCompleted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

                    <span class="token punctuation">}</span>

                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span>Throwable e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token function">onDecodeError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span>Video s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">onSuccess</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
<p>ok，一套流程下来，我们就获取到视频的真实地址</p>
<p>视频获取出来，就可以下载了，</p>
<pre class=" language-java"><code class="language-java">
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">startDownload</span><span class="token punctuation">(</span><span class="token keyword">final</span> Video video<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        FileDownload download <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileDownload</span><span class="token punctuation">(</span>Environment<span class="token punctuation">.</span><span class="token function">getExternalStorageDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> File<span class="token punctuation">.</span>separator <span class="token operator">+</span> <span class="token string">"todayNewsVideo"</span>
                <span class="token punctuation">,</span> UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"."</span> <span class="token operator">+</span> video<span class="token punctuation">.</span>vtype<span class="token punctuation">)</span><span class="token punctuation">;</span>
        download<span class="token punctuation">.</span><span class="token function">download</span><span class="token punctuation">(</span>video<span class="token punctuation">.</span>main_url<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">FileDownload<span class="token punctuation">.</span>Callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span>Exception e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mAdapter<span class="token punctuation">.</span><span class="token function">setPercent</span><span class="token punctuation">(</span>video<span class="token punctuation">.</span>main_url<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSuccess</span><span class="token punctuation">(</span>File file<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                video<span class="token punctuation">.</span>file <span class="token operator">=</span> file<span class="token punctuation">;</span>
                mAdapter<span class="token punctuation">.</span><span class="token function">setPercent</span><span class="token punctuation">(</span>video<span class="token punctuation">.</span>main_url<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">inProgress</span><span class="token punctuation">(</span><span class="token keyword">float</span> progress<span class="token punctuation">,</span> <span class="token keyword">long</span> total<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mAdapter<span class="token punctuation">.</span><span class="token function">setPercent</span><span class="token punctuation">(</span>video<span class="token punctuation">.</span>main_url<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>progress <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token punctuation">}</span>
</code></pre>
<p>这里我没有使用<code>retrofit</code>，因为下载大文件的时候容易oom（希望有大神能解决我这个问题）为了方便，我直接使用原生的okhttp来下载</p>
<pre class=" language-java"><code class="language-java">
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">download</span><span class="token punctuation">(</span>String url<span class="token punctuation">,</span> <span class="token keyword">final</span> Callback callback<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        OkHttpClient client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OkHttpClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        Request request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Request<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        client<span class="token punctuation">.</span><span class="token function">newCall</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">enqueue</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">okhttp3<span class="token punctuation">.</span>Callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onFailure</span><span class="token punctuation">(</span>Call call<span class="token punctuation">,</span> IOException e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                callback<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onResponse</span><span class="token punctuation">(</span>Call call<span class="token punctuation">,</span> Response response<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token keyword">final</span> File file <span class="token operator">=</span> <span class="token function">saveFile</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    AppClient<span class="token punctuation">.</span><span class="token function">getDelivery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token annotation punctuation">@Override</span>
                        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            callback<span class="token punctuation">.</span><span class="token function">onSuccess</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    callback<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>ok,整个下载的逻辑就写完了</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://blog.csdn.net/jiangwei0910410003/article/details/54092364" target="_blank" rel="external">Python脚本下载今日头条视频(附加Android版本辅助下载器)</a></p>
<p><a href="http://stackoverflow.com/questions/21864863/android-canvas-clear-with-transparency" target="_blank" rel="external">Android Canvas Clear with transparency</a></p>
<h2 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h2><p>这个属于个人开发作品，仅做学习交流使用，<strong>切勿使用于商业用途，如用本程序做非法用途后果自负，与作者无关!!</strong></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android仿今日头条的开源项目]]></title>
      <url>http://weyye.me/detail/my-project-today-news/</url>
      <content type="html"><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>看到众多大神纷纷有了自己的开源项目，于是自己琢磨着也想做一个开源项目来学习下，因为每次无聊必刷的app就是今日头条，评论简直比内容都精彩，所以我打算仿今日头条来练练手，期间也曾放弃过，也遇到很多坑，拿出来跟大家分享一下。该项目使用的是MVP+<a href="https://github.com/ReactiveX/RxJava" target="_blank" rel="external">RxJava</a>+<a href="https://github.com/square/retrofit" target="_blank" rel="external">Retrofit</a>。喜欢的记得给个Star，当作是给我的鼓励和动力吧。<br><a id="more"></a></p>
<h2 id="源码链接"><a href="#源码链接" class="headerlink" title="源码链接"></a>源码链接</h2><p><a href="https://github.com/yewei02538/TodayNews" target="_blank" rel="external">https://github.com/yewei02538/TodayNews</a></p>
<h2 id="成果图"><a href="#成果图" class="headerlink" title="成果图"></a>成果图</h2><p><img src="/img/todaynews01.png" alt=""></p>
<p><img src="/img/todaynews02.png" alt=""></p>
<p><img src="/img/todaynews03.png" alt=""></p>
<p><img src="/img/todaynews04.png" alt=""></p>
<p><img src="/img/todaynews05.png" alt=""></p>
<p><img src="/img/todaynews06.png" alt=""></p>
<p><img src="/img/todaynews07.png" alt=""></p>
<p><img src="/img/todaynews08.jpg" alt=""></p>
<h2 id="第三方库"><a href="#第三方库" class="headerlink" title="第三方库"></a>第三方库</h2><ul>
<li><a href="https://github.com/CymChad/BaseRecyclerViewAdapterHelper" target="_blank" rel="external">BaseRecyclerViewAdapterHelper</a></li>
<li><a href="https://github.com/nostra13/Android-Universal-Image-Loader" target="_blank" rel="external">ImageLoader</a></li>
<li><a href="https://github.com/square/retrofit" target="_blank" rel="external">Retrofit</a></li>
<li><a href="https://github.com/ReactiveX/RxJava" target="_blank" rel="external">RxJava</a></li>
<li><a href="https://github.com/JakeWharton/butterknife" target="_blank" rel="external">ButterKnife</a></li>
<li><a href="https://github.com/dersoncheng/MultipleTheme" target="_blank" rel="external">MultipleTheme</a></li>
<li><a href="https://github.com/hongyangAndroid/ColorTrackView" target="_blank" rel="external">ColorTrackView</a></li>
<li><a href="https://github.com/google/gson" target="_blank" rel="external">Gson</a></li>
<li><a href="https://github.com/lipangit/JieCaoVideoPlayer" target="_blank" rel="external">JieCaoVideoPlayer</a></li>
</ul>
<h2 id="技术要点"><a href="#技术要点" class="headerlink" title="技术要点"></a>技术要点</h2><ul>
<li>主要是一些第三方库的使用</li>
<li>首页顶部导航使用的<a href="https://github.com/hongyangAndroid" target="_blank" rel="external">hongyang</a>大神的<a href="https://github.com/hongyangAndroid/ColorTrackView" target="_blank" rel="external">ColorTrackView</a>然后做了一下封装来实现滑动渐变效果</li>
<li>多种Item布局展示-&gt;<a href="https://github.com/CymChad/BaseRecyclerViewAdapterHelper" target="_blank" rel="external">BaseRecyclerViewAdapterHelper</a></li>
<li>日夜间模式切换-&gt;<a href="https://github.com/dersoncheng/MultipleTheme" target="_blank" rel="external">MultipleTheme</a></li>
<li>个人中心 自定义ScrollView实现下拉图片放大</li>
<li>新闻详情我采用的是RecyclerView添加头的方式添加WebView（当然是Adapter里面添加）,加载页面成功之后获取评论信息，点击评论图标滑动至评论第一条，这里我是调用<code>recyclerView.smoothScrollToPosition(1);</code></li>
<li>视频播放我使用的是<a href="https://github.com/lipangit/JieCaoVideoPlayer" target="_blank" rel="external">JieCaoVideoPlayer</a>,一群大牛封装的代码，底层实际使用<a href="https://github.com/Bilibili/ijkplayer" target="_blank" rel="external">ijkplayer</a>,视频源均使用非正常手段获取，视频源地址分析请看我的另一篇博客<a href="http://www.weyye.me/detail/today-news-video/" target="_blank" rel="external">手撸一个今日头条视频下载器</a></li>
</ul>
<h3 id="问题1"><a href="#问题1" class="headerlink" title="问题1"></a>问题1</h3><p>在使用<a href="https://github.com/dersoncheng/MultipleTheme" target="_blank" rel="external">MultipleTheme</a>的时候唯一的缺陷就是需要在布局里面大量使用到自定义控件，这对于我们的项目而言，布局看着很冗余，也有点恶心。。我有时候就在想，那我可不可以写原生控件，然后在特定的时机来个偷梁换柱换成我们的自定义控件呢？(比如我们布局写RelativeLayout—转换成MyRelativeLayout),似乎好像是可以的。</p>
<h4 id="思路1"><a href="#思路1" class="headerlink" title="思路1"></a>思路1</h4><p>当时想到一个最简单最快实现的方法，也就是替换，我在布局里面写原生控件，然后在用工具全局替换成我们的自定义控件，但是假如我们换了包名，那就需要重新替换，这无疑是不易扩展的，所以这个方法放弃掉</p>
<h4 id="思路2"><a href="#思路2" class="headerlink" title="思路2"></a>思路2</h4><p>不知道大家有木有发现就是，我们在布局里面写上<code>Button</code>、<code>ImageView</code>、<code>TextView</code>等这些控件的时候，在5.0以上运行的时候实际变成了<code>AppCompatButton</code>、<code>AppCompatImageView</code>、<code>AppCompatTextView</code>(debug或者打印对象就可以看到实际的类型),在当我们运行的时候就这样悄无声息的给替换了，那系统又是怎么做到的？那只要找到它的实现方法，我们的问题不就迎刃而解了吗？</p>
<p><img src="/img/emoticon_chai_laugh.jpg" alt=""></p>
<p>于是我找到系统替换的代码（以下代码全部基于Api23）</p>
<p><strong>AppCompatViewInflater.java</strong></p>
<pre class=" language-java"><code class="language-java">
    <span class="token keyword">public</span> <span class="token keyword">final</span> View <span class="token function">createView</span><span class="token punctuation">(</span>View parent<span class="token punctuation">,</span> <span class="token keyword">final</span> String name<span class="token punctuation">,</span> <span class="token annotation punctuation">@NonNull</span> Context context<span class="token punctuation">,</span>
            <span class="token annotation punctuation">@NonNull</span> AttributeSet attrs<span class="token punctuation">,</span> <span class="token keyword">boolean</span> inheritContext<span class="token punctuation">,</span>
            <span class="token keyword">boolean</span> readAndroidTheme<span class="token punctuation">,</span> <span class="token keyword">boolean</span> readAppTheme<span class="token punctuation">,</span> <span class="token keyword">boolean</span> wrapContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> Context originalContext <span class="token operator">=</span> context<span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">// We can emulate Lollipop's android:theme attribute propagating down the view hierarchy</span>
        <span class="token comment" spellcheck="true">// by using the parent's context</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>inheritContext <span class="token operator">&amp;&amp;</span> parent <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            context <span class="token operator">=</span> parent<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>readAndroidTheme <span class="token operator">||</span> readAppTheme<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">// We then apply the theme on the context, if specified</span>
            context <span class="token operator">=</span> <span class="token function">themifyContext</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">,</span> readAndroidTheme<span class="token punctuation">,</span> readAppTheme<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>wrapContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            context <span class="token operator">=</span> TintContextWrapper<span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        View view <span class="token operator">=</span> null<span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">// We need to 'inject' our tint aware Views in place of the standard framework versions</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token string">"TextView"</span><span class="token operator">:</span>
                view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AppCompatTextView</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">"ImageView"</span><span class="token operator">:</span>
                view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AppCompatImageView</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">"Button"</span><span class="token operator">:</span>
                view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AppCompatButton</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">"EditText"</span><span class="token operator">:</span>
                view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AppCompatEditText</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">"Spinner"</span><span class="token operator">:</span>
                view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AppCompatSpinner</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">"ImageButton"</span><span class="token operator">:</span>
                view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AppCompatImageButton</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">"CheckBox"</span><span class="token operator">:</span>
                view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AppCompatCheckBox</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">"RadioButton"</span><span class="token operator">:</span>
                view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AppCompatRadioButton</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">"CheckedTextView"</span><span class="token operator">:</span>
                view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AppCompatCheckedTextView</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">"AutoCompleteTextView"</span><span class="token operator">:</span>
                view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AppCompatAutoCompleteTextView</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">"MultiAutoCompleteTextView"</span><span class="token operator">:</span>
                view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AppCompatMultiAutoCompleteTextView</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">"RatingBar"</span><span class="token operator">:</span>
                view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AppCompatRatingBar</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">"SeekBar"</span><span class="token operator">:</span>
                view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AppCompatSeekBar</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>view <span class="token operator">==</span> null <span class="token operator">&amp;&amp;</span> originalContext <span class="token operator">!=</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">// If the original context does not equal our themed context, then we need to manually</span>
            <span class="token comment" spellcheck="true">// inflate it using the name so that android:theme takes effect.</span>
            view <span class="token operator">=</span> <span class="token function">createViewFromTag</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> name<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>view <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">// If we have created a view, check it's android:onClick</span>
            <span class="token function">checkOnClickListener</span><span class="token punctuation">(</span>view<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> view<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre>
<p>当我们在xml写的那些布局映射成对象的时候，都会调用到这里来转换成对应的AppCompat。</p>
<p>偷梁换柱的关键点我们找到了，那如何找到这个入口呢？</p>
<p>其实当我们加载布局的时候最终都会用<code>LayoutInflater</code>来加载，所以我打算从这里入手，看源码我发现有一个接口可以利用-&gt;<code>Factory</code>,这个接口有一个方法</p>
<pre class=" language-java"><code class="language-java">    <span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Factory</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">/**
         * Hook you can supply that is called when inflating from a LayoutInflater.
         * You can use this to customize the tag names available in your XML
         * layout files.
         * 
         * &lt;p>
         * Note that it is good practice to prefix these custom names with your
         * package (i.e., com.coolcompany.apps) to avoid conflicts with system
         * names.
         * 
         * @param name Tag name to be inflated.
         * @param context The context the view is being created in.
         * @param attrs Inflation attributes as specified in XML file.
         * 
         * @return View Newly created view. Return null for the default
         *         behavior.
         */</span>
        <span class="token keyword">public</span> View <span class="token function">onCreateView</span><span class="token punctuation">(</span>String name<span class="token punctuation">,</span> Context context<span class="token punctuation">,</span> AttributeSet attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre>
<p>果然功夫不负有心人，如果我们实现了这个接口，最终加载布局的时候那么就会调用<code>onCreateView</code>在这里面来实现偷梁换柱替换成我们的自定义控件</p>
<p>ok，入口和关键代码都找到了，剩下的就是撸代码了</p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SkinFactory</span> <span class="token keyword">implements</span> <span class="token class-name">LayoutInflaterFactory</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> AppCompatActivity mActivity<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">SkinFactory</span><span class="token punctuation">(</span>AppCompatActivity activity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mActivity <span class="token operator">=</span> activity<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> View <span class="token function">onCreateView</span><span class="token punctuation">(</span>View parent<span class="token punctuation">,</span> String name<span class="token punctuation">,</span> Context context<span class="token punctuation">,</span> AttributeSet attrs<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        View view <span class="token operator">=</span> null<span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//是否需要替换成自定义View</span>
        <span class="token keyword">boolean</span> isColorUi <span class="token operator">=</span> attrs<span class="token punctuation">.</span><span class="token function">getAttributeBooleanValue</span><span class="token punctuation">(</span><span class="token string">"http://schemas.android.com/apk/res-auto"</span><span class="token punctuation">,</span> <span class="token string">"isColorUi"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isColorUi<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">delegateCreateView</span><span class="token punctuation">(</span>parent<span class="token punctuation">,</span> name<span class="token punctuation">,</span> context<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">switch</span> <span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token string">"TextView"</span><span class="token operator">:</span>
                view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ColorTextView</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">"ImageView"</span><span class="token operator">:</span>
                view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ColorImageView</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>
                Logger<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token string">"ImageView 转换成"</span><span class="token operator">+</span>view<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">"RelativeLayout"</span><span class="token operator">:</span>
                view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ColorRelativeLayout</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">"LinearLayout"</span><span class="token operator">:</span>
                view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ColorLinearLayout</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">"View"</span><span class="token operator">:</span>
                view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ColorView</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>view <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            view <span class="token operator">=</span> <span class="token function">delegateCreateView</span><span class="token punctuation">(</span>parent<span class="token punctuation">,</span> name<span class="token punctuation">,</span> context<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> view<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> View <span class="token function">delegateCreateView</span><span class="token punctuation">(</span>View parent<span class="token punctuation">,</span> String name<span class="token punctuation">,</span> Context context<span class="token punctuation">,</span> AttributeSet attrs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        AppCompatDelegate delegate <span class="token operator">=</span> mActivity<span class="token punctuation">.</span><span class="token function">getDelegate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> delegate<span class="token punctuation">.</span><span class="token function">createView</span><span class="token punctuation">(</span>parent<span class="token punctuation">,</span> name<span class="token punctuation">,</span> context<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<p>这里<code>isColorUi</code>做了一个标示，因为有的是不需要转换的，如果不转换，直接走系统的创建View流程</p>
<p>关键代码写好了，下面是入口</p>
<p><strong>BaseActivity.java</strong></p>
<pre class=" language-java"><code class="language-java">
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
    LayoutInflaterCompat<span class="token punctuation">.</span><span class="token function">setFactory</span><span class="token punctuation">(</span>layoutInflater<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">SkinFactory</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre>
<p>原本以为这样就完美的解决了，没想到又引出了下一个问题</p>
<p><img src="/img/emoticon_wtf.jpg" alt=""></p>
<pre class=" language-java"><code class="language-java">                                                              Caused by<span class="token operator">:</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>IllegalStateException<span class="token operator">:</span> A factory has already been set on <span class="token keyword">this</span> LayoutInflater
                                                                      at android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>LayoutInflater<span class="token punctuation">.</span><span class="token function">setFactory2</span><span class="token punctuation">(</span>LayoutInflater<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">317</span><span class="token punctuation">)</span>
                                                                      at android<span class="token punctuation">.</span>support<span class="token punctuation">.</span>v4<span class="token punctuation">.</span>view<span class="token punctuation">.</span>LayoutInflaterCompatLollipop<span class="token punctuation">.</span><span class="token function">setFactory</span><span class="token punctuation">(</span>LayoutInflaterCompatLollipop<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">28</span><span class="token punctuation">)</span>
                                                                      at android<span class="token punctuation">.</span>support<span class="token punctuation">.</span>v4<span class="token punctuation">.</span>view<span class="token punctuation">.</span>LayoutInflaterCompat$LayoutInflaterCompatImplV21<span class="token punctuation">.</span><span class="token function">setFactory</span><span class="token punctuation">(</span>LayoutInflaterCompat<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">55</span><span class="token punctuation">)</span>
                                                                      at android<span class="token punctuation">.</span>support<span class="token punctuation">.</span>v4<span class="token punctuation">.</span>view<span class="token punctuation">.</span>LayoutInflaterCompat<span class="token punctuation">.</span><span class="token function">setFactory</span><span class="token punctuation">(</span>LayoutInflaterCompat<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">85</span><span class="token punctuation">)</span>
                                                                      at me<span class="token punctuation">.</span>weyye<span class="token punctuation">.</span>todaynews<span class="token punctuation">.</span>base<span class="token punctuation">.</span>BaseActivity<span class="token punctuation">.</span><span class="token function">setLayoutInflaterFactory</span><span class="token punctuation">(</span>BaseActivity<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">70</span><span class="token punctuation">)</span>
                                                                      at me<span class="token punctuation">.</span>weyye<span class="token punctuation">.</span>todaynews<span class="token punctuation">.</span>base<span class="token punctuation">.</span>BaseActivity<span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>BaseActivity<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">60</span><span class="token punctuation">)</span>
                                                                      at android<span class="token punctuation">.</span>app<span class="token punctuation">.</span>Activity<span class="token punctuation">.</span><span class="token function">performCreate</span><span class="token punctuation">(</span>Activity<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">6910</span><span class="token punctuation">)</span>
                                                                      at android<span class="token punctuation">.</span>app<span class="token punctuation">.</span>Instrumentation<span class="token punctuation">.</span><span class="token function">callActivityOnCreate</span><span class="token punctuation">(</span>Instrumentation<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1123</span><span class="token punctuation">)</span>
                                                                      at android<span class="token punctuation">.</span>app<span class="token punctuation">.</span>ActivityThread<span class="token punctuation">.</span><span class="token function">performLaunchActivity</span><span class="token punctuation">(</span>ActivityThread<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">2746</span><span class="token punctuation">)</span>
                                                                      at android<span class="token punctuation">.</span>app<span class="token punctuation">.</span>ActivityThread<span class="token punctuation">.</span><span class="token function">handleLaunchActivity</span><span class="token punctuation">(</span>ActivityThread<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">2864</span><span class="token punctuation">)</span> 
                                                                      at android<span class="token punctuation">.</span>app<span class="token punctuation">.</span>ActivityThread<span class="token punctuation">.</span>-<span class="token function">wrap12</span><span class="token punctuation">(</span>ActivityThread<span class="token punctuation">.</span>java<span class="token punctuation">)</span> 
                                                                      at android<span class="token punctuation">.</span>app<span class="token punctuation">.</span>ActivityThread$H<span class="token punctuation">.</span><span class="token function">handleMessage</span><span class="token punctuation">(</span>ActivityThread<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1567</span><span class="token punctuation">)</span>
</code></pre>
<p>于是找到这个方法</p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setFactory</span><span class="token punctuation">(</span>Factory factory<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mFactorySet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token string">"A factory has already been set on this LayoutInflater"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>factory <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token string">"Given factory can not be null"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        mFactorySet <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mFactory <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mFactory <span class="token operator">=</span> factory<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            mFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FactoryMerger</span><span class="token punctuation">(</span>factory<span class="token punctuation">,</span> null<span class="token punctuation">,</span> mFactory<span class="token punctuation">,</span> mFactory2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre>
<p>当<code>mFactorySet=true</code>的时候就会抛出这个错误，可是我并没有去set，那么可能是系统set了，对，没错，不然它怎么转换成AppCompat呢。</p>
<p>那么我只需要用反射把mFactorySet改成false就可以了</p>
<p>于是乎我修改了下原来的代码</p>
<p><strong>BaseActivity.java</strong></p>
<pre class=" language-java"><code class="language-java">    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setLayoutInflaterFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setLayoutInflaterFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        LayoutInflater layoutInflater <span class="token operator">=</span> <span class="token function">getLayoutInflater</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            Field mFactorySet <span class="token operator">=</span> LayoutInflater<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">"mFactorySet"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mFactorySet<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mFactorySet<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>layoutInflater<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            LayoutInflaterCompat<span class="token punctuation">.</span><span class="token function">setFactory</span><span class="token punctuation">(</span>layoutInflater<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">SkinFactory</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre>
<p>先利用反射改成false然后在设置上去，这样就不会报错了</p>
<h3 id="问题2"><a href="#问题2" class="headerlink" title="问题2"></a>问题2</h3><p>好吧，几经周折终于完成了日夜间切换，但是当我滑动新闻列表的时候，又一个问题出来了…</p>
<p><img src="/img/17_2_7_16_49_36.gif" alt=""></p>
<p>当点击切换成夜间主题后，列表滑动后有的还是白天的主题，这很明显是<code>RecyclerView</code>复用的问题，我的思路是当点击切换主题后清除掉复用的View,这样就不会出现这种问题。怎么清除呢？好像RecyclerView没有直接给我们方法，所以我得去源码好好看看，发现RecyclerView里面有个内部类<code>Recycler</code>用来管理复用和回收的类，而且有<code>clear</code>方法，</p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Recycler</span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

    <span class="token comment" spellcheck="true">/**
    * Clear scrap views out of this recycler. Detached views contained within a
    * recycled view pool will remain.
    */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mAttachedScrap<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">recycleAndClearCachedViews</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre>
<p>看代码好像是我所需要的，于是找到这个类对应的变量<code>mRecycler</code>,可惜的是private并且没有get方法，那就只好反射咯~</p>
<pre class=" language-java"><code class="language-java">        RecyclerView recyclerView <span class="token operator">=</span> <span class="token punctuation">(</span>RecyclerView<span class="token punctuation">)</span> rootView<span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            Field mRecyclerField <span class="token operator">=</span> RecyclerView<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">"mRecycler"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mRecyclerField<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            Method clearMethod <span class="token operator">=</span> RecyclerView<span class="token punctuation">.</span>Recycler<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span><span class="token string">"clear"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            clearMethod<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            clearMethod<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>mRecyclerField<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>recyclerView<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
</code></pre>
<p>ok,成功解决!</p>
<h3 id="问题3"><a href="#问题3" class="headerlink" title="问题3"></a>问题3</h3><p>首页点击+号添加栏目的时候会崩溃。而5.0以上的手机却没有问题，看到崩溃日志，也是让我一脸懵逼。。。</p>
<pre class=" language-java"><code class="language-java">
android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>InflateException<span class="token operator">:</span> Binary XML file line #<span class="token number">35</span><span class="token operator">:</span> Error inflating <span class="token keyword">class</span> <span class="token class-name">TextView</span>
                                                                        at android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>LayoutInflater<span class="token punctuation">.</span><span class="token function">createViewFromTag</span><span class="token punctuation">(</span>LayoutInflater<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">704</span><span class="token punctuation">)</span>
                                                                        at android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>LayoutInflater<span class="token punctuation">.</span><span class="token function">rInflate</span><span class="token punctuation">(</span>LayoutInflater<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">746</span><span class="token punctuation">)</span>
                                                                        at android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>LayoutInflater<span class="token punctuation">.</span><span class="token function">rInflate</span><span class="token punctuation">(</span>LayoutInflater<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">749</span><span class="token punctuation">)</span>
                                                                        at android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>LayoutInflater<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>LayoutInflater<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">489</span><span class="token punctuation">)</span>
                                                                        at de<span class="token punctuation">.</span>robv<span class="token punctuation">.</span>android<span class="token punctuation">.</span>xposed<span class="token punctuation">.</span>XposedBridge<span class="token punctuation">.</span><span class="token function">invokeOriginalMethodNative</span><span class="token punctuation">(</span>Native Method<span class="token punctuation">)</span>
</code></pre>
<p>What?  <code>TextView</code>会报错？ 于是来到35行</p>
<pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span>TextView
            android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/tvEdit"</span>
            android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>
            android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"match_parent"</span>
            android<span class="token operator">:</span>paddingBottom<span class="token operator">=</span><span class="token string">"5dp"</span>
            android<span class="token operator">:</span>paddingLeft<span class="token operator">=</span><span class="token string">"15dp"</span>
            android<span class="token operator">:</span>paddingRight<span class="token operator">=</span><span class="token string">"15dp"</span>
            android<span class="token operator">:</span>paddingTop<span class="token operator">=</span><span class="token string">"5dp"</span>
            android<span class="token operator">:</span>text<span class="token operator">=</span><span class="token string">"编辑"</span>
            android<span class="token operator">:</span>textColor<span class="token operator">=</span><span class="token string">"?attr/font_red"</span>
            android<span class="token operator">:</span>textSize<span class="token operator">=</span><span class="token string">"14sp"</span>
            app<span class="token operator">:</span>isColorUi<span class="token operator">=</span><span class="token string">"true"</span>
            android<span class="token operator">:</span>background<span class="token operator">=</span><span class="token string">"@drawable/shape_stroke_red"</span>
            <span class="token operator">/</span><span class="token operator">></span>
</code></pre>
<p>乍一看这个TextView没毛病啊，而且错误日志也是比较模糊。既然是在<code>LayoutInflater</code>里面抛出的异常，那我就在<code>LayoutInflater.createViewFromTag</code>方法里打个断点试下（由于大部分厂商改过源码，真机调试会导致行数对不上无法debug，所以这里我使用的是模拟器），再次调试</p>
<p><img src="/img/QQ截图20170224173406.png" alt=""></p>
<p>发现这个<code>shape_stroke_red.xml</code>找不到,可是我的drawable文件夹下面明明有啊！！</p>
<pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token operator">?</span><span class="token operator">></span>
<span class="token operator">&lt;</span>shape xmlns<span class="token operator">:</span>android<span class="token operator">=</span><span class="token string">"http://schemas.android.com/apk/res/android"</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>corners android<span class="token operator">:</span>radius<span class="token operator">=</span><span class="token string">"20dp"</span><span class="token operator">/</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>solid android<span class="token operator">:</span>color<span class="token operator">=</span><span class="token string">"@color/transparent"</span><span class="token operator">/</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>stroke
        android<span class="token operator">:</span>width<span class="token operator">=</span><span class="token string">"1dp"</span>
        android<span class="token operator">:</span>color<span class="token operator">=</span><span class="token string">"?attr/font_red"</span><span class="token operator">/</span><span class="token operator">></span>
<span class="token operator">&lt;</span><span class="token operator">/</span>shape<span class="token operator">></span>
</code></pre>
<p>难道是因为自定义属性的原因？于是乎改成固定颜色值，运行就正常了</p>
<pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span>shape xmlns<span class="token operator">:</span>android<span class="token operator">=</span><span class="token string">"http://schemas.android.com/apk/res/android"</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>corners android<span class="token operator">:</span>radius<span class="token operator">=</span><span class="token string">"20dp"</span><span class="token operator">/</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>solid android<span class="token operator">:</span>color<span class="token operator">=</span><span class="token string">"@color/transparent"</span><span class="token operator">/</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>stroke
        android<span class="token operator">:</span>width<span class="token operator">=</span><span class="token string">"1dp"</span>
        android<span class="token operator">:</span>color<span class="token operator">=</span><span class="token string">"#aaaaaa"</span><span class="token operator">/</span><span class="token operator">></span>
<span class="token operator">&lt;</span><span class="token operator">/</span>shape<span class="token operator">></span>
</code></pre>
<p>可是这又是为什么呢？</p>
<p>于是在<code>stackoverflow</code>找到答案<a href="http://stackoverflow.com/questions/35473456/why-attr-coloraccent-dose-not-work-below-lollipop-version" target="_blank" rel="external">Why ?attr/colorAccent dose not work below lollipop version?</a></p>
<p>原来其原因是因为5.0以下drawable不支持自定义属性</p>
<h3 id="未完待续…"><a href="#未完待续…" class="headerlink" title="未完待续…"></a>未完待续…</h3><h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2><ul>
<li>加入未写界面以及功能</li>
<li>逻辑代码的整理</li>
</ul>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://blog.csdn.net/llew2011/article/details/51252401" target="_blank" rel="external">Android 源码系列之&lt;四&gt;从源码的角度深入理解LayoutInflater.Factory之主题切换(上)</a></p>
<h2 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h2><p>这个属于个人开发作品，仅做学习交流使用，如用到实际项目还需多考虑其他因素如并发等，请多多斟酌。<strong>诸位勿传播于非技术人员，拒绝用于商业用途，数据均属于非正常渠道获取，原作公司拥有所有权利。</strong></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android走进Framework之app是如何被启动的]]></title>
      <url>http://weyye.me/detail/android-source-activity-oncreate/</url>
      <content type="html"><![CDATA[<blockquote>
<p>转载请标明出处： <a href="http://www.weyye.me/detail/android-source-activity-oncreate/" target="_blank" rel="external">http://www.weyye.me/detail/android-source-activity-oncreate/</a><br>本文出自:<a href="http://weyye.me">【Wey Ye的博客】</a></p>
</blockquote>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ul>
<li><strong>一个app的程序是怎么启动的？入口在哪里？</strong></li>
<li><strong>听说ActivityManagerServices很屌，Why？</strong></li>
<li><strong>Activity生命周期到底是谁调用的？</strong></li>
<li><strong>Application又是在哪里初始化的？onCreate又是如何被调用的？</strong></li>
<li><strong>面试官常常会问：为什么主线程使用looper.loop不会卡死界面?</strong></li>
<li><strong>等等..</strong></li>
</ul>
<p>是不是一直有这样的疑问？很懵逼对不对 - - ，那我们就站在巨人的丁丁上来解决一下这些问题，如果文中出现一些错误，还望指正，互相学习<br><a id="more"></a></p>
<h2 id="主要流程"><a href="#主要流程" class="headerlink" title="主要流程"></a>主要流程</h2><p> 大家都知道 <code>Android</code>是基于<code>Linux</code>系统的，而在<code>Linux</code>中，所有的进程都是由<code>init</code>进程直接或者是间接<code>fork</code>出来的，当我开机的时候<code>init</code>进程就会<code>fork</code>出一个<code>Android</code>的第一个新的进程<br><strong>Zygote</strong>,中文翻译过来要”受精卵”，一个很有意识的名字。为什么这么说呢，当我们<code>Zygote</code>进程跑起来后，<code>Android</code>为了实现实现资源共用和更快的启动速度，通过<code>Zygote</code>进程直接去<code>fork</code>出一些子进程，这就是为什么要<strong>”受精卵”</strong>的原因，也就是我们的<code>app</code>全部都是基于<code>Zygote</code>上的 ，没有<code>Zygote</code>就没有我们，当<code>Zygote</code>初始化完成之后，首先会<code>fork</code>它的第一个子进程<strong>SystemServer</strong>,这个类非常的重要，为什么这么说呢？因为系统里面重要的服务都是在这个进程里面开启的，比如<code>ActivityManagerService</code>、<code>PackageManagerService</code>、<code>WindowManagerService</code>等等，有木有觉得似曾相识<br>当<code>SystemServer</code>跑起来后，这些重要的服务也会随之创建,系统初始化完成之后我们就会进到系统桌面-&gt;<strong>Launcher</strong>，其实<code>Launcher</code>也是一个<code>app</code>，它继承自<code>Activity</code>，当我们点击桌面上的app后，系统就会为我们的app创建一个进程，然后启动我们App的第一个类<strong>ActivityThread</strong>,其实说到底我们的app就是一个<code>main</code>函数,也就是启动了<code>ActivityThread.main()</code>。我们重点来看下这个类</p>
<h2 id="App的程序入口"><a href="#App的程序入口" class="headerlink" title="App的程序入口"></a>App的程序入口</h2><blockquote>
<p>都说主线程更新ui，主线程不能有耗时操作，主线程是在哪里创建的呢？我们来看下ActivityThread.main()。</p>
</blockquote>
<pre class=" language-java"><code class="language-java">
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token keyword">final</span> File configDir <span class="token operator">=</span> Environment<span class="token punctuation">.</span><span class="token function">getUserConfigDirectory</span><span class="token punctuation">(</span>UserHandle<span class="token punctuation">.</span><span class="token function">myUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    TrustedCertificateStore<span class="token punctuation">.</span><span class="token function">setDefaultUserDirectory</span><span class="token punctuation">(</span>configDir<span class="token punctuation">)</span><span class="token punctuation">;</span>

    Process<span class="token punctuation">.</span><span class="token function">setArgV0</span><span class="token punctuation">(</span><span class="token string">"&lt;pre-initialized>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">//创建主线程Looper</span>
    Looper<span class="token punctuation">.</span><span class="token function">prepareMainLooper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    ActivityThread thread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ActivityThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    thread<span class="token punctuation">.</span><span class="token function">attach</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>sMainThreadHandler <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sMainThreadHandler <span class="token operator">=</span> thread<span class="token punctuation">.</span><span class="token function">getHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Looper<span class="token punctuation">.</span><span class="token function">myLooper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setMessageLogging</span><span class="token punctuation">(</span><span class="token keyword">new</span>
                <span class="token class-name">LogPrinter</span><span class="token punctuation">(</span>Log<span class="token punctuation">.</span>DEBUG<span class="token punctuation">,</span> <span class="token string">"ActivityThread"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">// End of event ActivityThreadMain.</span>
    Trace<span class="token punctuation">.</span><span class="token function">traceEnd</span><span class="token punctuation">(</span>Trace<span class="token punctuation">.</span>TRACE_TAG_ACTIVITY_MANAGER<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">//主线程消息循环</span>
    Looper<span class="token punctuation">.</span><span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"Main thread loop unexpectedly exited"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<h2 id="为什么主线程使用Looper-loop-不会卡死界面"><a href="#为什么主线程使用Looper-loop-不会卡死界面" class="headerlink" title="为什么主线程使用Looper.loop()不会卡死界面"></a>为什么主线程使用Looper.loop()不会卡死界面</h2><p>首先我们要明白一点，主线程也是一个线程，也是有他的生命周期的，当我们<code>new Thread()</code>后执行完里面的代码也就意味着这个线程的结束，刚说了主线程也是线程，如果我们的代码一下就执行完了，那么我们这个app的功能还能执行吗？ 我还没开始呢，你咋就结束了？这样多不持久，<code>Android</code>为了解决这个问题，使用的<strong>Looper</strong>循环,了解<code>Handler</code>的机制的童鞋，会知道在处理消息的时候使用了<code>Looper.loop()</code>方法，并且在该方法中进入了一个死循环<br>同时<code>Looper.loop()</code>方法是在主线程中调用的，那么为什么没有卡死界面呢？ </p>
<h3 id="线程的生命周期"><a href="#线程的生命周期" class="headerlink" title="线程的生命周期"></a>线程的生命周期</h3><p>首先我们要明白线程它也是有生命周期的，它的生命周期在于这个线程里面所要执行的代码执行完成，这个线程的使命也就完成了</p>
<h3 id="主线程如何与子线程通信"><a href="#主线程如何与子线程通信" class="headerlink" title="主线程如何与子线程通信"></a>主线程如何与子线程通信</h3><p>其次我们要明白我们主线程是如何跟子线程通信（发消息）的</p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>
    Handler mHandler<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment" spellcheck="true">//初始化Looper对象 一个线程对应一个looper</span>
                Looper<span class="token punctuation">.</span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                mHandler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Handler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handleMessage</span><span class="token punctuation">(</span>Message msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">handleMessage</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        Log<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">,</span> <span class="token string">"do somethings"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">;</span>
                <span class="token comment" spellcheck="true">//开启消息循环</span>
                Looper<span class="token punctuation">.</span><span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>btn<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View v<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mHandler<span class="token punctuation">.</span><span class="token function">sendEmptyMessage</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre>
<p>我们主线程跟子线程就是这样通信的，可是为什么要 先Looper.prepare(),然后执行处理逻辑，最后Looper.loop();<br>我们先来看看Looper.prepare()</p>
<pre class=" language-java"><code class="language-java">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">prepare</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">prepare</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">prepare</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> quitAllowed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>sThreadLocal<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"Only one Looper may be created per thread"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        sThreadLocal<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Looper</span><span class="token punctuation">(</span>quitAllowed<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre>
<p>sThreadLocal你可以理解成一个hashmap键值对，key就是我们当前的Thread线程，value就是new Lopper出来的对象，sThreadLocal.get()如果不等于空的话 表示直接调用了prepare已经set进去了，就会抛出一个异常。也就是说一个线程只能对应一个looper，人家可是很专一的~，在来看看</p>
<pre class=" language-java"><code class="language-java"> <span class="token comment" spellcheck="true">/**
     * Run the message queue in this thread. Be sure to call
     * {@link #quit()} to end the loop.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">//获取当前线程对应的Looper对象</span>
        <span class="token keyword">final</span> Looper me <span class="token operator">=</span> <span class="token function">myLooper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>me <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">//没有调用Looper.prepare()</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"No Looper; Looper.prepare() wasn't called on this thread."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">final</span> MessageQueue queue <span class="token operator">=</span> me<span class="token punctuation">.</span>mQueue<span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">// Make sure the identity of this thread is that of the local process,</span>
        <span class="token comment" spellcheck="true">// and keep track of what that identity token actually is.</span>
        Binder<span class="token punctuation">.</span><span class="token function">clearCallingIdentity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token keyword">long</span> ident <span class="token operator">=</span> Binder<span class="token punctuation">.</span><span class="token function">clearCallingIdentity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//死循环，不断从消息队列取消息，有消息就直接处理消息</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">//取出下一个消息</span>
            Message msg <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// might block</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>msg <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment" spellcheck="true">// No message indicates that the message queue is quitting.</span>
                <span class="token comment" spellcheck="true">//当前没有消息，直接返回</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment" spellcheck="true">// This must be in a local variable, in case a UI event sets the logger</span>
            <span class="token keyword">final</span> Printer logging <span class="token operator">=</span> me<span class="token punctuation">.</span>mLogging<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>logging <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                logging<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">">>>>> Dispatching to "</span> <span class="token operator">+</span> msg<span class="token punctuation">.</span>target <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span>
                        msg<span class="token punctuation">.</span>callback <span class="token operator">+</span> <span class="token string">": "</span> <span class="token operator">+</span> msg<span class="token punctuation">.</span>what<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">final</span> <span class="token keyword">long</span> traceTag <span class="token operator">=</span> me<span class="token punctuation">.</span>mTraceTag<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>traceTag <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                Trace<span class="token punctuation">.</span><span class="token function">traceBegin</span><span class="token punctuation">(</span>traceTag<span class="token punctuation">,</span> msg<span class="token punctuation">.</span>target<span class="token punctuation">.</span><span class="token function">getTraceName</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token comment" spellcheck="true">//能走到这里，表示msg不为空，有消息要处理</span>
                <span class="token comment" spellcheck="true">//调用handler.dispatchMessage()处理消息</span>
                msg<span class="token punctuation">.</span>target<span class="token punctuation">.</span><span class="token function">dispatchMessage</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>traceTag <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    Trace<span class="token punctuation">.</span><span class="token function">traceEnd</span><span class="token punctuation">(</span>traceTag<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>logging <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                logging<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"&lt;&lt;&lt;&lt;&lt; Finished to "</span> <span class="token operator">+</span> msg<span class="token punctuation">.</span>target <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> msg<span class="token punctuation">.</span>callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment" spellcheck="true">// Make sure that during the course of dispatching the</span>
            <span class="token comment" spellcheck="true">// identity of the thread wasn't corrupted.</span>
            <span class="token keyword">final</span> <span class="token keyword">long</span> newIdent <span class="token operator">=</span> Binder<span class="token punctuation">.</span><span class="token function">clearCallingIdentity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>ident <span class="token operator">!=</span> newIdent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                Log<span class="token punctuation">.</span><span class="token function">wtf</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"Thread identity changed from 0x"</span>
                        <span class="token operator">+</span> Long<span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span>ident<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" to 0x"</span>
                        <span class="token operator">+</span> Long<span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span>newIdent<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" while dispatching to "</span>
                        <span class="token operator">+</span> msg<span class="token punctuation">.</span>target<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" "</span>
                        <span class="token operator">+</span> msg<span class="token punctuation">.</span>callback <span class="token operator">+</span> <span class="token string">" what="</span> <span class="token operator">+</span> msg<span class="token punctuation">.</span>what<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            msg<span class="token punctuation">.</span><span class="token function">recycleUnchecked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre>
<p>代码上注释也写的比较清楚了，我们刚说了线程也是有生命周期的，我们在线程里面创建了looper对象之后，new Handler()然后去处理消息，假如我们Looper.loop()没有这个死循环，这个线程任务就执行完成了，那Handler里面<strong>还能收到消息吗</strong>？所以我就需要调用Looper.loop()一个死循环，不断去消息队列去取,然后我们主线程发了消息后，Looper取到了消息，子线程里面的Handler也就自然能够处理消息这就是这个调用Looper.loop()的作用</p>
<h3 id="主线程创建Handler的时候为什么不用调用Looper-prepare-Loop-loop"><a href="#主线程创建Handler的时候为什么不用调用Looper-prepare-Loop-loop" class="headerlink" title="主线程创建Handler的时候为什么不用调用Looper.prepare(),Loop.loop()?"></a>主线程创建Handler的时候为什么不用调用Looper.prepare(),Loop.loop()?</h3><p>我们在来看看AcivityThread源码</p>
<p><strong>ActivityThread.java</strong></p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        Looper<span class="token punctuation">.</span><span class="token function">prepareMainLooper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        ActivityThread thread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ActivityThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        thread<span class="token punctuation">.</span><span class="token function">attach</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>sMainThreadHandler <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            sMainThreadHandler <span class="token operator">=</span> thread<span class="token punctuation">.</span><span class="token function">getHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            Looper<span class="token punctuation">.</span><span class="token function">myLooper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setMessageLogging</span><span class="token punctuation">(</span><span class="token keyword">new</span>
                    <span class="token class-name">LogPrinter</span><span class="token punctuation">(</span>Log<span class="token punctuation">.</span>DEBUG<span class="token punctuation">,</span> <span class="token string">"ActivityThread"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment" spellcheck="true">// End of event ActivityThreadMain.</span>
        Trace<span class="token punctuation">.</span><span class="token function">traceEnd</span><span class="token punctuation">(</span>Trace<span class="token punctuation">.</span>TRACE_TAG_ACTIVITY_MANAGER<span class="token punctuation">)</span><span class="token punctuation">;</span>
        Looper<span class="token punctuation">.</span><span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre>
<p>看到木有，在我们app启动的时候,ActivityThread已经帮我们做好了Looper消息循环，所以我们在主线程new Handler()的时候就不用创建Looper，反而你再次调用Looper.prepare()还会报错，因为主线程已经创建了Looper对象了。</p>
<h3 id="为什么主线程不会卡死界面"><a href="#为什么主线程不会卡死界面" class="headerlink" title="为什么主线程不会卡死界面"></a>为什么主线程不会卡死界面</h3><p>理解了上面几个问题我们就比较好理解了，首先，主线程也是线程，只不过这个线程是被系统创建的（就好比我们自己创建了子线程一样），其次 Looper是不断的去消息队列里面取，取到消息就去处理消息，只要处理消息的操作不是耗时操作，就不会引起卡顿,其实<code>Android</code>的交互都是基于<strong>消息机制的分发</strong>，<code>handler</code> 可以发送消息，然后<code>loop</code> 里就分发消息然后就发给<code>handler</code>, 然后就执行到 <code>H（Handler ）</code>里的对应代码。所以这些代码就不会卡死～,也就说循环消息并不会使起卡死，而真正会卡死的是我们的处理消息，这也就是我们主线程为什么不能执行耗时操作的原因。</p>
<h3 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h3><p>讲到这里你可能还不是很能理解，那我们就来举一个栗子~</p>
<p>我们去做地铁或者做火车的时候都要去过安检，这个安检的机器就好比我们的Looper对象，机器内部检测违禁品就好比是Handler，因为我们要依次排队去放到机器上去检查，我们一个人的行李物品就比作一个Message,多个人所以就组成了一个MessageQueue,  好，有了这些东西我们就可以脑补整个运行过程了，首先如果要运行机器首先你的插插头吧？不然怎么通电-&gt;（Looper.prepare）,通完点后你得按开关吧？（Looper.loop），因为运行很早，这个时候还没有人来安检，此时消息队列（MessageQueue）是空的，这个时候我过来安检，因为我是出去玩，所以带的东西比较少，这个时候我把我的包包（Message）放到了安检机器的韧带（MessageQueue）上面了，此时MessageQueue消息队列里面就有我的包包了，机器此时正在运转，<br>然后机器自动检测我的是否有违禁品（Handler.handleMessage）,这个时候来了位大叔，带着很大一包东西（Message），放到了MessageQueue里，这个安检机器还在循环（Looper）,当循环到这个大叔的大件后，大叔在另一头等待了好久发现怎么都不出来，因为太大，检测需要时间（假设机器比较low），而这个等待的时间就是我们所说的做了耗时操作导致ui卡顿。如果等了很久会导致很多乘客不满（ANR）。这个比喻可能不是很形象，但是话粗理不粗，这个只是我的个人理解</p>
<p>如果大家还是不能理解的话，可以参考<a href="http://www.codeceo.com/article/android-event.html" target="_blank" rel="external">Android事件机制详细解读</a>里面有更深入的解读</p>
<h2 id="ActivityThread-attach"><a href="#ActivityThread-attach" class="headerlink" title="ActivityThread.attach()"></a>ActivityThread.attach()</h2><p>回归上一个话题，执行main函数的时候new ActivityThread(),执行了它的attach方法，我们来看下attach方法</p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">attach</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> system<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sCurrentActivityThread <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    mSystemThread <span class="token operator">=</span> system<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>system<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

       <span class="token keyword">final</span> IActivityManager mgr <span class="token operator">=</span>ActivityManagerNative<span class="token punctuation">.</span><span class="token function">getDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            mgr<span class="token punctuation">.</span><span class="token function">attachApplication</span><span class="token punctuation">(</span>mAppThread<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RemoteException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> ex<span class="token punctuation">.</span><span class="token function">rethrowFromSystemServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment" spellcheck="true">// Watch for getting close to heap limit.</span>
        BinderInternal<span class="token punctuation">.</span><span class="token function">addGcWatcher</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mSomeActivitiesChanged<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                Runtime runtime <span class="token operator">=</span> Runtime<span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">long</span> dalvikMax <span class="token operator">=</span> runtime<span class="token punctuation">.</span><span class="token function">maxMemory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">long</span> dalvikUsed <span class="token operator">=</span> runtime<span class="token punctuation">.</span><span class="token function">totalMemory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> runtime<span class="token punctuation">.</span><span class="token function">freeMemory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>dalvikUsed <span class="token operator">></span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token operator">*</span>dalvikMax<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>DEBUG_MEMORY_TRIM<span class="token punctuation">)</span> Slog<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"Dalvik max="</span> <span class="token operator">+</span> <span class="token punctuation">(</span>dalvikMax<span class="token operator">/</span><span class="token number">1024</span><span class="token punctuation">)</span>
                            <span class="token operator">+</span> <span class="token string">" total="</span> <span class="token operator">+</span> <span class="token punctuation">(</span>runtime<span class="token punctuation">.</span><span class="token function">totalMemory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">1024</span><span class="token punctuation">)</span>
                            <span class="token operator">+</span> <span class="token string">" used="</span> <span class="token operator">+</span> <span class="token punctuation">(</span>dalvikUsed<span class="token operator">/</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    mSomeActivitiesChanged <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        mgr<span class="token punctuation">.</span><span class="token function">releaseSomeActivities</span><span class="token punctuation">(</span>mAppThread<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RemoteException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">throw</span> e<span class="token punctuation">.</span><span class="token function">rethrowFromSystemServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// Don't set application object here -- if the system crashes,</span>
        <span class="token comment" spellcheck="true">// we can't display an alert, we just want to die die die.</span>
        android<span class="token punctuation">.</span>ddm<span class="token punctuation">.</span>DdmHandleAppName<span class="token punctuation">.</span><span class="token function">setAppName</span><span class="token punctuation">(</span><span class="token string">"system_process"</span><span class="token punctuation">,</span>
                UserHandle<span class="token punctuation">.</span><span class="token function">myUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            mInstrumentation <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Instrumentation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            ContextImpl context <span class="token operator">=</span> ContextImpl<span class="token punctuation">.</span><span class="token function">createAppContext</span><span class="token punctuation">(</span>
                    <span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token function">getSystemContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mPackageInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
            mInitialApplication <span class="token operator">=</span> context<span class="token punctuation">.</span>mPackageInfo<span class="token punctuation">.</span><span class="token function">makeApplication</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>
            mInitialApplication<span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>
                    <span class="token string">"Unable to instantiate Application():"</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<p>首先attach方法有一个boolean的变量system,传过来的是false，聪明的你一看就是这个意思，是否是系统应用 ，当然我们不是，然后我们会走到if里面，里面有一行比较关键的代码</p>
<blockquote>
<p>final IActivityManager mgr = ActivityManagerNative.getDefault();</p>
</blockquote>
<p>我点进去看下getDefault()函数</p>
<p><strong>ActivityManagerNative.java</strong></p>
<pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/**
 * Retrieve the system's default/global activity manager.
 */</span>
<span class="token keyword">static</span> <span class="token keyword">public</span> IActivityManager <span class="token function">getDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> gDefault<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>看注释说返回一个系统全局的ActivityManager，调用了<code>gDefault.get()</code>,我们来看下这个<code>gDefault</code>变量看看是在哪里初始化的</p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> Singleton<span class="token operator">&lt;</span>IActivityManager<span class="token operator">></span> gDefault <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Singleton</span><span class="token operator">&lt;</span>IActivityManager<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">protected</span> IActivityManager <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        IBinder b <span class="token operator">=</span> ServiceManager<span class="token punctuation">.</span><span class="token function">getService</span><span class="token punctuation">(</span><span class="token string">"activity"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            Log<span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span><span class="token string">"ActivityManager"</span><span class="token punctuation">,</span> <span class="token string">"default service binder = "</span> <span class="token operator">+</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        IActivityManager am <span class="token operator">=</span> <span class="token function">asInterface</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            Log<span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span><span class="token string">"ActivityManager"</span><span class="token punctuation">,</span> <span class="token string">"default service = "</span> <span class="token operator">+</span> am<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> am<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre>
<p>ServiceManager.getService(“activity”)返回一个IBinder  这个Binder对象是谁呢？既然有getService，那么肯定有addService，并且这个key是“activity”，我们来看下是在哪个类添加的</p>
<p><strong>ActivityManagerService.java</strong></p>
<pre class=" language-java"><code class="language-java">
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSystemProcess</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        ServiceManager<span class="token punctuation">.</span><span class="token function">addService</span><span class="token punctuation">(</span>Context<span class="token punctuation">.</span>ACTIVITY_SERVICE<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ServiceManager<span class="token punctuation">.</span><span class="token function">addService</span><span class="token punctuation">(</span>ProcessStats<span class="token punctuation">.</span>SERVICE_NAME<span class="token punctuation">,</span> mProcessStats<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ServiceManager<span class="token punctuation">.</span><span class="token function">addService</span><span class="token punctuation">(</span><span class="token string">"meminfo"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">MemBinder</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ServiceManager<span class="token punctuation">.</span><span class="token function">addService</span><span class="token punctuation">(</span><span class="token string">"gfxinfo"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">GraphicsBinder</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ServiceManager<span class="token punctuation">.</span><span class="token function">addService</span><span class="token punctuation">(</span><span class="token string">"dbinfo"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">DbBinder</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>MONITOR_CPU_USAGE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            ServiceManager<span class="token punctuation">.</span><span class="token function">addService</span><span class="token punctuation">(</span><span class="token string">"cpuinfo"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">CpuBinder</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        ServiceManager<span class="token punctuation">.</span><span class="token function">addService</span><span class="token punctuation">(</span><span class="token string">"permission"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">PermissionController</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ServiceManager<span class="token punctuation">.</span><span class="token function">addService</span><span class="token punctuation">(</span><span class="token string">"processinfo"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ProcessInfoService</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        ApplicationInfo info <span class="token operator">=</span> mContext<span class="token punctuation">.</span><span class="token function">getPackageManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getApplicationInfo</span><span class="token punctuation">(</span>
                <span class="token string">"android"</span><span class="token punctuation">,</span> STOCK_PM_FLAGS <span class="token operator">|</span> MATCH_SYSTEM_ONLY<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mSystemThread<span class="token punctuation">.</span><span class="token function">installSystemApplicationInfo</span><span class="token punctuation">(</span>info<span class="token punctuation">,</span> <span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            ProcessRecord app <span class="token operator">=</span> <span class="token function">newProcessRecordLocked</span><span class="token punctuation">(</span>info<span class="token punctuation">,</span> info<span class="token punctuation">.</span>processName<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            app<span class="token punctuation">.</span>persistent <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            app<span class="token punctuation">.</span>pid <span class="token operator">=</span> MY_PID<span class="token punctuation">;</span>
            app<span class="token punctuation">.</span>maxAdj <span class="token operator">=</span> ProcessList<span class="token punctuation">.</span>SYSTEM_ADJ<span class="token punctuation">;</span>
            app<span class="token punctuation">.</span><span class="token function">makeActive</span><span class="token punctuation">(</span>mSystemThread<span class="token punctuation">.</span><span class="token function">getApplicationThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mProcessStats<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>mPidsSelfLocked<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mPidsSelfLocked<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>app<span class="token punctuation">.</span>pid<span class="token punctuation">,</span> app<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token function">updateLruProcessLocked</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">updateOomAdjLocked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">PackageManager<span class="token punctuation">.</span>NameNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>
                <span class="token string">"Unable to find android system package"</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<p>我们看这一行代码</p>
<blockquote>
<p>ServiceManager.addService(Context.ACTIVITY_SERVICE, this, true);</p>
</blockquote>
<p>看下这个Context这个常量：</p>
<blockquote>
<p>public static final String ACTIVITY_SERVICE = “activity”;</p>
</blockquote>
<p>正好是刚才<code>ServiceManager.getService()</code>传过去的key, addService()的时候传过去一个<code>this</code>，也就是<strong>ActivityManagerService</strong>自己，那么getService()的时候返回的毫无疑问就是<strong>ActivityManagerService</strong></p>
<p>我们在回来看下ActivityThread.attach()方法</p>
<p><strong>ActivityThread.java</strong></p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">final</span> IActivityManager mgr <span class="token operator">=</span> ActivityManagerNative<span class="token punctuation">.</span><span class="token function">getDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            mgr<span class="token punctuation">.</span><span class="token function">attachApplication</span><span class="token punctuation">(</span>mAppThread<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RemoteException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> ex<span class="token punctuation">.</span><span class="token function">rethrowFromSystemServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
</code></pre>
<p>我们搞清楚调用ActivityManagerNative.getDefault()返回了IActivityManager类型的mgr，也就是<strong>ActivityManagerService</strong>之后 ，它调用了<code>attachApplication</code>,并传入了一个<strong>mAppThread</strong>我们首先来看下这个变量是什么类型</p>
<blockquote>
<p>final ApplicationThread mAppThread = new ApplicationThread();</p>
</blockquote>
<p>是<code>ApplicationThread</code>，我们在来看看调用了<code>ActivityManagerService.attachApplication</code>做了什么事情</p>
<p><strong>ActivityManagerService.java</strong></p>
<pre class=" language-java"><code class="language-java">
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">attachApplication</span><span class="token punctuation">(</span>IApplicationThread thread<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> callingPid <span class="token operator">=</span> Binder<span class="token punctuation">.</span><span class="token function">getCallingPid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token keyword">long</span> origId <span class="token operator">=</span> Binder<span class="token punctuation">.</span><span class="token function">clearCallingIdentity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">attachApplicationLocked</span><span class="token punctuation">(</span>thread<span class="token punctuation">,</span> callingPid<span class="token punctuation">)</span><span class="token punctuation">;</span>
        Binder<span class="token punctuation">.</span><span class="token function">restoreCallingIdentity</span><span class="token punctuation">(</span>origId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<p>调用了attachApplicationLocked()，继续看下做了啥</p>
<p>这个方法比较长，我就只取关键的部分贴出来</p>
<pre class=" language-java"><code class="language-java">
<span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">attachApplicationLocked</span><span class="token punctuation">(</span>IApplicationThread thread<span class="token punctuation">,</span>
        <span class="token keyword">int</span> pid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

<span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    
    ProfilerInfo profilerInfo <span class="token operator">=</span> profileFile <span class="token operator">==</span> null <span class="token operator">?</span> null
            <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">ProfilerInfo</span><span class="token punctuation">(</span>profileFile<span class="token punctuation">,</span> profileFd<span class="token punctuation">,</span> samplingInterval<span class="token punctuation">,</span> profileAutoStop<span class="token punctuation">)</span><span class="token punctuation">;</span>
    thread<span class="token punctuation">.</span><span class="token function">bindApplication</span><span class="token punctuation">(</span>processName<span class="token punctuation">,</span> appInfo<span class="token punctuation">,</span> providers<span class="token punctuation">,</span> app<span class="token punctuation">.</span>instrumentationClass<span class="token punctuation">,</span>
            profilerInfo<span class="token punctuation">,</span> app<span class="token punctuation">.</span>instrumentationArguments<span class="token punctuation">,</span> app<span class="token punctuation">.</span>instrumentationWatcher<span class="token punctuation">,</span>
            app<span class="token punctuation">.</span>instrumentationUiAutomationConnection<span class="token punctuation">,</span> testMode<span class="token punctuation">,</span>
            mBinderTransactionTrackingEnabled<span class="token punctuation">,</span> enableTrackAllocation<span class="token punctuation">,</span>
            isRestrictedBackupMode <span class="token operator">||</span> <span class="token operator">!</span>normalMode<span class="token punctuation">,</span> app<span class="token punctuation">.</span>persistent<span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span>mConfiguration<span class="token punctuation">)</span><span class="token punctuation">,</span> app<span class="token punctuation">.</span>compat<span class="token punctuation">,</span>
            <span class="token function">getCommonServicesLocked</span><span class="token punctuation">(</span>app<span class="token punctuation">.</span>isolated<span class="token punctuation">)</span><span class="token punctuation">,</span>
            mCoreSettingsObserver<span class="token punctuation">.</span><span class="token function">getCoreSettingsLocked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">updateLruProcessLocked</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>
    app<span class="token punctuation">.</span>lastRequestedGc <span class="token operator">=</span> app<span class="token punctuation">.</span>lastLowMemory <span class="token operator">=</span> SystemClock<span class="token punctuation">.</span><span class="token function">uptimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">// todo: Yikes!  What should we do?  For now we will try to</span>
    <span class="token comment" spellcheck="true">// start another process, but that could easily get us in</span>
    <span class="token comment" spellcheck="true">// an infinite loop of restarting processes...</span>
    Slog<span class="token punctuation">.</span><span class="token function">wtf</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"Exception thrown during bind of "</span> <span class="token operator">+</span> app<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>

    app<span class="token punctuation">.</span><span class="token function">resetPackageList</span><span class="token punctuation">(</span>mProcessStats<span class="token punctuation">)</span><span class="token punctuation">;</span>
    app<span class="token punctuation">.</span><span class="token function">unlinkDeathRecipient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">startProcessLocked</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> <span class="token string">"bind fail"</span><span class="token punctuation">,</span> processName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre>
<h2 id="Application是在什么时候创建的？onCreate-什么时候调用的？"><a href="#Application是在什么时候创建的？onCreate-什么时候调用的？" class="headerlink" title="Application是在什么时候创建的？onCreate()什么时候调用的？"></a>Application是在什么时候创建的？onCreate()什么时候调用的？</h2><p>执行完判断和赋值的操作后最后调用了thread.bindApplication(),刚才看到是ApplicationThread,所以我来看看<code>ApplicationThread.bindApplication</code></p>
<p><strong>ActivityThread.java</strong></p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">ApplicationThread</span> <span class="token keyword">extends</span> <span class="token class-name">ApplicationThreadNative</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String DB_INFO_FORMAT <span class="token operator">=</span> <span class="token string">"  %8s %8s %14s %14s  %s"</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> mLastProcessState <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>

<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">bindApplication</span><span class="token punctuation">(</span>String processName<span class="token punctuation">,</span> ApplicationInfo appInfo<span class="token punctuation">,</span>
        List<span class="token operator">&lt;</span>ProviderInfo<span class="token operator">></span> providers<span class="token punctuation">,</span> ComponentName instrumentationName<span class="token punctuation">,</span>
        ProfilerInfo profilerInfo<span class="token punctuation">,</span> Bundle instrumentationArgs<span class="token punctuation">,</span>
        IInstrumentationWatcher instrumentationWatcher<span class="token punctuation">,</span>
        IUiAutomationConnection instrumentationUiConnection<span class="token punctuation">,</span> <span class="token keyword">int</span> debugMode<span class="token punctuation">,</span>
        <span class="token keyword">boolean</span> enableBinderTracking<span class="token punctuation">,</span> <span class="token keyword">boolean</span> trackAllocation<span class="token punctuation">,</span>
        <span class="token keyword">boolean</span> isRestrictedBackupMode<span class="token punctuation">,</span> <span class="token keyword">boolean</span> persistent<span class="token punctuation">,</span> Configuration config<span class="token punctuation">,</span>
        CompatibilityInfo compatInfo<span class="token punctuation">,</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> IBinder<span class="token operator">></span> services<span class="token punctuation">,</span> Bundle coreSettings<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>services <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// Setup the service cache in the ServiceManager</span>
        ServiceManager<span class="token punctuation">.</span><span class="token function">initServiceCache</span><span class="token punctuation">(</span>services<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">setCoreSettings</span><span class="token punctuation">(</span>coreSettings<span class="token punctuation">)</span><span class="token punctuation">;</span>

    AppBindData data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AppBindData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    data<span class="token punctuation">.</span>processName <span class="token operator">=</span> processName<span class="token punctuation">;</span>
    data<span class="token punctuation">.</span>appInfo <span class="token operator">=</span> appInfo<span class="token punctuation">;</span>
    data<span class="token punctuation">.</span>providers <span class="token operator">=</span> providers<span class="token punctuation">;</span>
    data<span class="token punctuation">.</span>instrumentationName <span class="token operator">=</span> instrumentationName<span class="token punctuation">;</span>
    data<span class="token punctuation">.</span>instrumentationArgs <span class="token operator">=</span> instrumentationArgs<span class="token punctuation">;</span>
    data<span class="token punctuation">.</span>instrumentationWatcher <span class="token operator">=</span> instrumentationWatcher<span class="token punctuation">;</span>
    data<span class="token punctuation">.</span>instrumentationUiAutomationConnection <span class="token operator">=</span> instrumentationUiConnection<span class="token punctuation">;</span>
    data<span class="token punctuation">.</span>debugMode <span class="token operator">=</span> debugMode<span class="token punctuation">;</span>
    data<span class="token punctuation">.</span>enableBinderTracking <span class="token operator">=</span> enableBinderTracking<span class="token punctuation">;</span>
    data<span class="token punctuation">.</span>trackAllocation <span class="token operator">=</span> trackAllocation<span class="token punctuation">;</span>
    data<span class="token punctuation">.</span>restrictedBackupMode <span class="token operator">=</span> isRestrictedBackupMode<span class="token punctuation">;</span>
    data<span class="token punctuation">.</span>persistent <span class="token operator">=</span> persistent<span class="token punctuation">;</span>
    data<span class="token punctuation">.</span>config <span class="token operator">=</span> config<span class="token punctuation">;</span>
    data<span class="token punctuation">.</span>compatInfo <span class="token operator">=</span> compatInfo<span class="token punctuation">;</span>
    data<span class="token punctuation">.</span>initProfilerInfo <span class="token operator">=</span> profilerInfo<span class="token punctuation">;</span>
    <span class="token function">sendMessage</span><span class="token punctuation">(</span>H<span class="token punctuation">.</span>BIND_APPLICATION<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre>
<p>可以看到是<code>ActivityThread</code>的<strong>内部类</strong>，我去！你在玩我呢？绕了这么半天又绕回来了。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1643415-44cc94546a3c9b00?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="xq"></p>
<p>客官别急，我们继续向下看，执行bindApplication的时候发了一个消息</p>
<blockquote>
<p>sendMessage(H.BIND_APPLICATION, data);</p>
</blockquote>
<p>这个H就是我们前面说的Handler，我们来看下handler做了哪些处理</p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">H</span> <span class="token keyword">extends</span> <span class="token class-name">Handler</span> <span class="token punctuation">{</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handleMessage</span><span class="token punctuation">(</span>Message msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>DEBUG_MESSAGES<span class="token punctuation">)</span> Slog<span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">">>> handling: "</span> <span class="token operator">+</span> <span class="token function">codeToString</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>what<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>msg<span class="token punctuation">.</span>what<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> BIND_APPLICATION<span class="token operator">:</span>
        Trace<span class="token punctuation">.</span><span class="token function">traceBegin</span><span class="token punctuation">(</span>Trace<span class="token punctuation">.</span>TRACE_TAG_ACTIVITY_MANAGER<span class="token punctuation">,</span> <span class="token string">"bindApplication"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        AppBindData data <span class="token operator">=</span> <span class="token punctuation">(</span>AppBindData<span class="token punctuation">)</span>msg<span class="token punctuation">.</span>obj<span class="token punctuation">;</span>
        <span class="token function">handleBindApplication</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        Trace<span class="token punctuation">.</span><span class="token function">traceEnd</span><span class="token punctuation">(</span>Trace<span class="token punctuation">.</span>TRACE_TAG_ACTIVITY_MANAGER<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>看到它调用了<code>handleBindApplication()</code>，其主要作用是绑定我的的自定义的application，做一些初始化操作，我们继续看</p>
<pre class=" language-java"><code class="language-java">
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">handleBindApplication</span><span class="token punctuation">(</span>AppBindData data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>ii <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> ApplicationInfo instrApp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ApplicationInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ii<span class="token punctuation">.</span><span class="token function">copyTo</span><span class="token punctuation">(</span>instrApp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        instrApp<span class="token punctuation">.</span><span class="token function">initForUser</span><span class="token punctuation">(</span>UserHandle<span class="token punctuation">.</span><span class="token function">myUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> LoadedApk pi <span class="token operator">=</span> <span class="token function">getPackageInfo</span><span class="token punctuation">(</span>instrApp<span class="token punctuation">,</span> data<span class="token punctuation">.</span>compatInfo<span class="token punctuation">,</span>
                appContext<span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> ContextImpl instrContext <span class="token operator">=</span> ContextImpl<span class="token punctuation">.</span><span class="token function">createAppContext</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> pi<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> ClassLoader cl <span class="token operator">=</span> instrContext<span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mInstrumentation <span class="token operator">=</span> <span class="token punctuation">(</span>Instrumentation<span class="token punctuation">)</span>
                cl<span class="token punctuation">.</span><span class="token function">loadClass</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>instrumentationName<span class="token punctuation">.</span><span class="token function">getClassName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>
                <span class="token string">"Unable to instantiate instrumentation "</span>
                <span class="token operator">+</span> data<span class="token punctuation">.</span>instrumentationName <span class="token operator">+</span> <span class="token string">": "</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">final</span> ComponentName component <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ComponentName</span><span class="token punctuation">(</span>ii<span class="token punctuation">.</span>packageName<span class="token punctuation">,</span> ii<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mInstrumentation<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> instrContext<span class="token punctuation">,</span> appContext<span class="token punctuation">,</span> component<span class="token punctuation">,</span>
                data<span class="token punctuation">.</span>instrumentationWatcher<span class="token punctuation">,</span> data<span class="token punctuation">.</span>instrumentationUiAutomationConnection<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>mProfiler<span class="token punctuation">.</span>profileFile <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>ii<span class="token punctuation">.</span>handleProfiling
                <span class="token operator">&amp;&amp;</span> mProfiler<span class="token punctuation">.</span>profileFd <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mProfiler<span class="token punctuation">.</span>handlingProfiling <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token keyword">final</span> File file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>mProfiler<span class="token punctuation">.</span>profileFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
            file<span class="token punctuation">.</span><span class="token function">getParentFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mkdirs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            Debug<span class="token punctuation">.</span><span class="token function">startMethodTracing</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">8</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        mInstrumentation <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Instrumentation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// If the app is being launched for full backup or restore, bring it up in</span>
        <span class="token comment" spellcheck="true">// a restricted environment with the base application class.</span>
        Application app <span class="token operator">=</span> data<span class="token punctuation">.</span>info<span class="token punctuation">.</span><span class="token function">makeApplication</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>restrictedBackupMode<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mInitialApplication <span class="token operator">=</span> app<span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">// don't bring up providers in restricted mode; they may depend on the</span>
        <span class="token comment" spellcheck="true">// app's custom Application class</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>data<span class="token punctuation">.</span>restrictedBackupMode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ArrayUtils<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>providers<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">installContentProviders</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> data<span class="token punctuation">.</span>providers<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment" spellcheck="true">// For process that contains content providers, we want to</span>
                <span class="token comment" spellcheck="true">// ensure that the JIT is enabled "at some point".</span>
                mH<span class="token punctuation">.</span><span class="token function">sendEmptyMessageDelayed</span><span class="token punctuation">(</span>H<span class="token punctuation">.</span>ENABLE_JIT<span class="token punctuation">,</span> <span class="token number">10</span><span class="token operator">*</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment" spellcheck="true">// Do this after providers, since instrumentation tests generally start their</span>
        <span class="token comment" spellcheck="true">// test thread at this point, and we don't want that racing.</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            mInstrumentation<span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>instrumentationArgs<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>
                <span class="token string">"Exception thrown in onCreate() of "</span>
                <span class="token operator">+</span> data<span class="token punctuation">.</span>instrumentationName <span class="token operator">+</span> <span class="token string">": "</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            mInstrumentation<span class="token punctuation">.</span><span class="token function">callApplicationOnCreate</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mInstrumentation<span class="token punctuation">.</span><span class="token function">onException</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>
                    <span class="token string">"Unable to create application "</span> <span class="token operator">+</span> app<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token operator">+</span> <span class="token string">": "</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            StrictMode<span class="token punctuation">.</span><span class="token function">setThreadPolicy</span><span class="token punctuation">(</span>savedPolicy<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<p>这里有个比较重要的类，<code>mInstrumentation</code> 为什么说它特别重要呢，我们先来看看它怎么初始化的</p>
<blockquote>
<p>final ClassLoader cl = instrContext.getClassLoader();<br>mInstrumentation=(Instrumentation)cl.loadClass(data.instrumentationName.getClassName()).newInstance();</p>
</blockquote>
<p>通过反射创建mInstrumentation 然后给进行一系列初始化操作,然后执行了</p>
<blockquote>
<p>Application app = data.info.makeApplication(data.restrictedBackupMode, null);</p>
</blockquote>
<p>data.info是一个LoadeApk对象。</p>
<p><strong>LoadeApk.java</strong></p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> Application <span class="token function">makeApplication</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> forceDefaultAppClass<span class="token punctuation">,</span>
        Instrumentation instrumentation<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>mApplication <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> mApplication<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    Trace<span class="token punctuation">.</span><span class="token function">traceBegin</span><span class="token punctuation">(</span>Trace<span class="token punctuation">.</span>TRACE_TAG_ACTIVITY_MANAGER<span class="token punctuation">,</span> <span class="token string">"makeApplication"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    Application app <span class="token operator">=</span> null<span class="token punctuation">;</span>

    String appClass <span class="token operator">=</span> mApplicationInfo<span class="token punctuation">.</span>className<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>forceDefaultAppClass <span class="token operator">||</span> <span class="token punctuation">(</span>appClass <span class="token operator">==</span> null<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        appClass <span class="token operator">=</span> <span class="token string">"android.app.Application"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>ClassLoader cl <span class="token operator">=</span> <span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mPackageName<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"android"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            Trace<span class="token punctuation">.</span><span class="token function">traceBegin</span><span class="token punctuation">(</span>Trace<span class="token punctuation">.</span>TRACE_TAG_ACTIVITY_MANAGER<span class="token punctuation">,</span>
                    <span class="token string">"initializeJavaContextClassLoader"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">initializeJavaContextClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            Trace<span class="token punctuation">.</span><span class="token function">traceEnd</span><span class="token punctuation">(</span>Trace<span class="token punctuation">.</span>TRACE_TAG_ACTIVITY_MANAGER<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        ContextImpl appContext <span class="token operator">=</span> ContextImpl<span class="token punctuation">.</span><span class="token function">createAppContext</span><span class="token punctuation">(</span>mActivityThread<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        app <span class="token operator">=</span> mActivityThread<span class="token punctuation">.</span>mInstrumentation<span class="token punctuation">.</span><span class="token function">newApplication</span><span class="token punctuation">(</span>
                cl<span class="token punctuation">,</span> appClass<span class="token punctuation">,</span> appContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
        appContext<span class="token punctuation">.</span><span class="token function">setOuterContext</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mActivityThread<span class="token punctuation">.</span>mInstrumentation<span class="token punctuation">.</span><span class="token function">onException</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            Trace<span class="token punctuation">.</span><span class="token function">traceEnd</span><span class="token punctuation">(</span>Trace<span class="token punctuation">.</span>TRACE_TAG_ACTIVITY_MANAGER<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>
                <span class="token string">"Unable to instantiate application "</span> <span class="token operator">+</span> appClass
                <span class="token operator">+</span> <span class="token string">": "</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    mActivityThread<span class="token punctuation">.</span>mAllApplications<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">;</span>
    mApplication <span class="token operator">=</span> app<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>instrumentation <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
       <span class="token comment" spellcheck="true">//这里不会执行，以为传过来的是null，onCreate在上一层执行的</span>
            instrumentation<span class="token punctuation">.</span><span class="token function">callApplicationOnCreate</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>instrumentation<span class="token punctuation">.</span><span class="token function">onException</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                Trace<span class="token punctuation">.</span><span class="token function">traceEnd</span><span class="token punctuation">(</span>Trace<span class="token punctuation">.</span>TRACE_TAG_ACTIVITY_MANAGER<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>
                    <span class="token string">"Unable to create application "</span> <span class="token operator">+</span> app<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token operator">+</span> <span class="token string">": "</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<p>执行了</p>
<blockquote>
<p>app = mActivityThread.mInstrumentation.newApplication(<br>                cl, appClass, appContext);</p>
</blockquote>
<p><strong>Instrumentation.java</strong></p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">static</span> <span class="token keyword">public</span> Application <span class="token function">newApplication</span><span class="token punctuation">(</span>Class<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> clazz<span class="token punctuation">,</span> Context context<span class="token punctuation">)</span>
        <span class="token keyword">throws</span> InstantiationException<span class="token punctuation">,</span> IllegalAccessException<span class="token punctuation">,</span> 
        ClassNotFoundException <span class="token punctuation">{</span>
    Application app <span class="token operator">=</span> <span class="token punctuation">(</span>Application<span class="token punctuation">)</span>clazz<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    app<span class="token punctuation">.</span><span class="token function">attach</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> app<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>同样通过反射出一个application并且 调用其<code>attach()</code>,也就是说我的自定义application的时候attach就是在这里调用的</p>
<p>接着上面<code>ActivityThread.handleBindApplication()</code>中,首先反射出<code>mInstrumentation</code><br>和Application然后执行了下面一句代码</p>
<pre class=" language-java"><code class="language-java">
<span class="token keyword">try</span> <span class="token punctuation">{</span>
    mInstrumentation<span class="token punctuation">.</span><span class="token function">callApplicationOnCreate</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mInstrumentation<span class="token punctuation">.</span><span class="token function">onException</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>
            <span class="token string">"Unable to create application "</span> <span class="token operator">+</span> app<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token operator">+</span> <span class="token string">": "</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<p>调用了<code>mInstrumentation.callApplicationOnCreate()</code>，我们的Application.oncreate()就是在<strong>这里</strong>调用的，现在明白为什么Instrumentation为什么那么重要了吧，它就像个<strong>管家婆</strong>一样，负责家里的大事小事，但是一般不抛头露面，听一家之主<code>ActivityThread</code>的安排。<br>好，搞清楚Application后我们在来看看activity在哪里被初始化以及调用oncreate()方法的</p>
<h2 id="Activity是怎样启动的"><a href="#Activity是怎样启动的" class="headerlink" title="Activity是怎样启动的"></a>Activity是怎样启动的</h2><p>前面说了ActivityThread.attach()调用了ActivityManagerService.attachApplication(),在代码中看到通过调用ApplicationThread.bindApplication()绑定了application,我们在看看bindApplication()之后在干了什么</p>
<p><strong>ActivityManagerService.java</strong></p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">attachApplicationLocked</span><span class="token punctuation">(</span>IApplicationThread thread<span class="token punctuation">,</span>
        <span class="token keyword">int</span> pid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    thread<span class="token punctuation">.</span><span class="token function">bindApplication</span><span class="token punctuation">(</span>processName<span class="token punctuation">,</span> appInfo<span class="token punctuation">,</span> providers<span class="token punctuation">,</span> app<span class="token punctuation">.</span>instrumentationClass<span class="token punctuation">,</span>
            profilerInfo<span class="token punctuation">,</span> app<span class="token punctuation">.</span>instrumentationArguments<span class="token punctuation">,</span> app<span class="token punctuation">.</span>instrumentationWatcher<span class="token punctuation">,</span>
            app<span class="token punctuation">.</span>instrumentationUiAutomationConnection<span class="token punctuation">,</span> testMode<span class="token punctuation">,</span>
            mBinderTransactionTrackingEnabled<span class="token punctuation">,</span> enableTrackAllocation<span class="token punctuation">,</span>
            isRestrictedBackupMode <span class="token operator">||</span> <span class="token operator">!</span>normalMode<span class="token punctuation">,</span> app<span class="token punctuation">.</span>persistent<span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span>mConfiguration<span class="token punctuation">)</span><span class="token punctuation">,</span> app<span class="token punctuation">.</span>compat<span class="token punctuation">,</span>
            <span class="token function">getCommonServicesLocked</span><span class="token punctuation">(</span>app<span class="token punctuation">.</span>isolated<span class="token punctuation">)</span><span class="token punctuation">,</span>
            mCoreSettingsObserver<span class="token punctuation">.</span><span class="token function">getCoreSettingsLocked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>normalMode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mStackSupervisor<span class="token punctuation">.</span><span class="token function">attachApplicationLocked</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                didSomething <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            Slog<span class="token punctuation">.</span><span class="token function">wtf</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"Exception thrown launching activities in "</span> <span class="token operator">+</span> app<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            badApp <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<p>调用了mStackSupervisor.attachApplicationLocked(app)，mStackSupervisor是<code>ActivityStackSupervisor</code>类型,这个类也是非常重要的，它决定着我们app是否能启动成功,我们看看做了什么</p>
<p><strong>ActivityStackSupervisor.java</strong></p>
<pre class=" language-java"><code class="language-java">
<span class="token keyword">boolean</span> <span class="token function">attachApplicationLocked</span><span class="token punctuation">(</span>ProcessRecord app<span class="token punctuation">)</span> <span class="token keyword">throws</span> RemoteException <span class="token punctuation">{</span>
    <span class="token keyword">final</span> String processName <span class="token operator">=</span> app<span class="token punctuation">.</span>processName<span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> didSomething <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> displayNdx <span class="token operator">=</span> mActivityDisplays<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> displayNdx <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token operator">--</span>displayNdx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">//当前应用的整个activity堆信息</span>
        ArrayList<span class="token operator">&lt;</span>ActivityStack<span class="token operator">></span> stacks <span class="token operator">=</span> mActivityDisplays<span class="token punctuation">.</span><span class="token function">valueAt</span><span class="token punctuation">(</span>displayNdx<span class="token punctuation">)</span><span class="token punctuation">.</span>mStacks<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> stackNdx <span class="token operator">=</span> stacks<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> stackNdx <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token operator">--</span>stackNdx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> ActivityStack stack <span class="token operator">=</span> stacks<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>stackNdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isFocusedStack</span><span class="token punctuation">(</span>stack<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            ActivityRecord hr <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">topRunningActivityLocked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>hr <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>hr<span class="token punctuation">.</span>app <span class="token operator">==</span> null <span class="token operator">&amp;&amp;</span> app<span class="token punctuation">.</span>uid <span class="token operator">==</span> hr<span class="token punctuation">.</span>info<span class="token punctuation">.</span>applicationInfo<span class="token punctuation">.</span>uid
                        <span class="token operator">&amp;&amp;</span> processName<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>hr<span class="token punctuation">.</span>processName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
<span class="token comment" spellcheck="true">//启动Activity                        </span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">realStartActivityLocked</span><span class="token punctuation">(</span>hr<span class="token punctuation">,</span> app<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            didSomething <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RemoteException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        Slog<span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"Exception in new application when starting activity "</span>
                              <span class="token operator">+</span> hr<span class="token punctuation">.</span>intent<span class="token punctuation">.</span><span class="token function">getComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flattenToShortString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">throw</span> e<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>didSomething<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">ensureActivitiesVisibleLocked</span><span class="token punctuation">(</span>null<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">!</span>PRESERVE_WINDOWS<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> didSomething<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>看到调用了realStartActivityLocked(hr, app, true, true))，继续看</p>
<pre class=" language-java"><code class="language-java">
<span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">realStartActivityLocked</span><span class="token punctuation">(</span>ActivityRecord r<span class="token punctuation">,</span> ProcessRecord app<span class="token punctuation">,</span>
        <span class="token keyword">boolean</span> andResume<span class="token punctuation">,</span> <span class="token keyword">boolean</span> checkConfig<span class="token punctuation">)</span> <span class="token keyword">throws</span> RemoteException <span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>andResume<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        app<span class="token punctuation">.</span>hasShownUi <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        app<span class="token punctuation">.</span>pendingUiClean <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    app<span class="token punctuation">.</span><span class="token function">forceProcessStateUpTo</span><span class="token punctuation">(</span>mService<span class="token punctuation">.</span>mTopProcessState<span class="token punctuation">)</span><span class="token punctuation">;</span>
    app<span class="token punctuation">.</span>thread<span class="token punctuation">.</span><span class="token function">scheduleLaunchActivity</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>intent<span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>appToken<span class="token punctuation">,</span>
            System<span class="token punctuation">.</span><span class="token function">identityHashCode</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>info<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span>mService<span class="token punctuation">.</span>mConfiguration<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span>mOverrideConfig<span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>compat<span class="token punctuation">,</span> r<span class="token punctuation">.</span>launchedFromPackage<span class="token punctuation">,</span>
            task<span class="token punctuation">.</span>voiceInteractor<span class="token punctuation">,</span> app<span class="token punctuation">.</span>repProcState<span class="token punctuation">,</span> r<span class="token punctuation">.</span>icicle<span class="token punctuation">,</span> r<span class="token punctuation">.</span>persistentState<span class="token punctuation">,</span> results<span class="token punctuation">,</span>
            newIntents<span class="token punctuation">,</span> <span class="token operator">!</span>andResume<span class="token punctuation">,</span> mService<span class="token punctuation">.</span><span class="token function">isNextTransitionForward</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> profilerInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre>
<p>看到了调用了app.thread.scheduleLaunchActivity()，这个app是上一层传过来的ActivityRecord，它代表的就是要开启的Activity对象里面分装了很多信息，比如所在的ActivityTask等，如果这是首次打开应用，那么这个Activity会被放到ActivityTask的栈顶，那么这个thread就是我们的ApplicationThread,我们回到ActivityThread<br>看下ApplicationThread.scheduleLaunchActivity()做了什么</p>
<p><strong>ActivityThread.java</strong></p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">ApplicationThread</span> <span class="token keyword">extends</span> <span class="token class-name">ApplicationThreadNative</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">scheduleLaunchActivity</span><span class="token punctuation">(</span>Intent intent<span class="token punctuation">,</span> IBinder token<span class="token punctuation">,</span> <span class="token keyword">int</span> ident<span class="token punctuation">,</span>
            ActivityInfo info<span class="token punctuation">,</span> Configuration curConfig<span class="token punctuation">,</span> Configuration overrideConfig<span class="token punctuation">,</span>
            CompatibilityInfo compatInfo<span class="token punctuation">,</span> String referrer<span class="token punctuation">,</span> IVoiceInteractor voiceInteractor<span class="token punctuation">,</span>
            <span class="token keyword">int</span> procState<span class="token punctuation">,</span> Bundle state<span class="token punctuation">,</span> PersistableBundle persistentState<span class="token punctuation">,</span>
            List<span class="token operator">&lt;</span>ResultInfo<span class="token operator">></span> pendingResults<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>ReferrerIntent<span class="token operator">></span> pendingNewIntents<span class="token punctuation">,</span>
            <span class="token keyword">boolean</span> notResumed<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isForward<span class="token punctuation">,</span> ProfilerInfo profilerInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token function">updatePendingConfiguration</span><span class="token punctuation">(</span>curConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">sendMessage</span><span class="token punctuation">(</span>H<span class="token punctuation">.</span>LAUNCH_ACTIVITY<span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<p>又用hanlder发了个消息，我们来看看hanlder怎么处理的</p>
<pre class=" language-java"><code class="language-java">
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handleMessage</span><span class="token punctuation">(</span>Message msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>DEBUG_MESSAGES<span class="token punctuation">)</span> Slog<span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">">>> handling: "</span> <span class="token operator">+</span> <span class="token function">codeToString</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>what<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>msg<span class="token punctuation">.</span>what<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> LAUNCH_ACTIVITY<span class="token operator">:</span> <span class="token punctuation">{</span>
            Trace<span class="token punctuation">.</span><span class="token function">traceBegin</span><span class="token punctuation">(</span>Trace<span class="token punctuation">.</span>TRACE_TAG_ACTIVITY_MANAGER<span class="token punctuation">,</span> <span class="token string">"activityStart"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">final</span> ActivityClientRecord r <span class="token operator">=</span> <span class="token punctuation">(</span>ActivityClientRecord<span class="token punctuation">)</span> msg<span class="token punctuation">.</span>obj<span class="token punctuation">;</span>

            r<span class="token punctuation">.</span>packageInfo <span class="token operator">=</span> <span class="token function">getPackageInfoNoCheck</span><span class="token punctuation">(</span>
                    r<span class="token punctuation">.</span>activityInfo<span class="token punctuation">.</span>applicationInfo<span class="token punctuation">,</span> r<span class="token punctuation">.</span>compatInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">handleLaunchActivity</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> null<span class="token punctuation">,</span> <span class="token string">"LAUNCH_ACTIVITY"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            Trace<span class="token punctuation">.</span><span class="token function">traceEnd</span><span class="token punctuation">(</span>Trace<span class="token punctuation">.</span>TRACE_TAG_ACTIVITY_MANAGER<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> 
    <span class="token keyword">break</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre>
<p>Word天，几经周折又回到ActivityThread自己,心好累。。我们继续~</p>
<p><strong>ActivityThread.java</strong></p>
<pre class=" language-java"><code class="language-java">    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">handleLaunchActivity</span><span class="token punctuation">(</span>ActivityClientRecord r<span class="token punctuation">,</span> Intent customIntent<span class="token punctuation">,</span> String reason<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// If we are getting ready to gc after going to the background, well</span>
        <span class="token comment" spellcheck="true">// we are back active so skip it.</span>
        <span class="token function">unscheduleGcIdler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mSomeActivitiesChanged <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span>profilerInfo <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mProfiler<span class="token punctuation">.</span><span class="token function">setProfiler</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>profilerInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
            mProfiler<span class="token punctuation">.</span><span class="token function">startProfiling</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment" spellcheck="true">// Make sure we are running with the most recent config.</span>
        <span class="token function">handleConfigurationChanged</span><span class="token punctuation">(</span>null<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>localLOGV<span class="token punctuation">)</span> Slog<span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span>
            TAG<span class="token punctuation">,</span> <span class="token string">"Handling launch of "</span> <span class="token operator">+</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">// Initialize before creating the activity</span>
        WindowManagerGlobal<span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//反射创建一个Activity</span>
        Activity a <span class="token operator">=</span> <span class="token function">performLaunchActivity</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> customIntent<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            r<span class="token punctuation">.</span>createdConfig <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span>mConfiguration<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">reportSizeConfigurations</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
            Bundle oldState <span class="token operator">=</span> r<span class="token punctuation">.</span>state<span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">//调用Activity.onResume</span>
            <span class="token function">handleResumeActivity</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>token<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>isForward<span class="token punctuation">,</span>
                    <span class="token operator">!</span>r<span class="token punctuation">.</span>activity<span class="token punctuation">.</span>mFinished <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>r<span class="token punctuation">.</span>startsNotResumed<span class="token punctuation">,</span> r<span class="token punctuation">.</span>lastProcessedSeq<span class="token punctuation">,</span> reason<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>r<span class="token punctuation">.</span>activity<span class="token punctuation">.</span>mFinished <span class="token operator">&amp;&amp;</span> r<span class="token punctuation">.</span>startsNotResumed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment" spellcheck="true">// The activity manager actually wants this one to start out paused, because it</span>
                <span class="token comment" spellcheck="true">// needs to be visible but isn't in the foreground. We accomplish this by going</span>
                <span class="token comment" spellcheck="true">// through the normal startup (because activities expect to go through onResume()</span>
                <span class="token comment" spellcheck="true">// the first time they run, before their window is displayed), and then pausing it.</span>
                <span class="token comment" spellcheck="true">// However, in this case we do -not- need to do the full pause cycle (of freezing</span>
                <span class="token comment" spellcheck="true">// and such) because the activity manager assumes it can just retain the current</span>
                <span class="token comment" spellcheck="true">// state it has.</span>
                <span class="token function">performPauseActivityIfNeeded</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> reason<span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token comment" spellcheck="true">// We need to keep around the original state, in case we need to be created again.</span>
                <span class="token comment" spellcheck="true">// But we only do this for pre-Honeycomb apps, which always save their state when</span>
                <span class="token comment" spellcheck="true">// pausing, so we can not have them save their state when restarting from a paused</span>
                <span class="token comment" spellcheck="true">// state. For HC and later, we want to (and can) let the state be saved as the</span>
                <span class="token comment" spellcheck="true">// normal part of stopping the activity.</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">isPreHoneycomb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    r<span class="token punctuation">.</span>state <span class="token operator">=</span> oldState<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">// If there was an error, for any reason, tell the activity manager to stop us.</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                ActivityManagerNative<span class="token punctuation">.</span><span class="token function">getDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">finishActivity</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>token<span class="token punctuation">,</span> Activity<span class="token punctuation">.</span>RESULT_CANCELED<span class="token punctuation">,</span> null<span class="token punctuation">,</span>
                            Activity<span class="token punctuation">.</span>DONT_FINISH_TASK_WITH_ACTIVITY<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RemoteException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> ex<span class="token punctuation">.</span><span class="token function">rethrowFromSystemServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre>
<p>看到开头 ，关键代码调用了Activity a = performLaunchActivity(r, customIntent);<br>返回一个Activity，我们看看performLaunchActivity()</p>
<p><strong>ActivityThread.java</strong></p>
<pre class=" language-java"><code class="language-java">    <span class="token keyword">private</span> Activity <span class="token function">performLaunchActivity</span><span class="token punctuation">(</span>ActivityClientRecord r<span class="token punctuation">,</span> Intent customIntent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// System.out.println("##### [" + System.currentTimeMillis() + "] ActivityThread.performLaunchActivity(" + r + ")");</span>

        ActivityInfo aInfo <span class="token operator">=</span> r<span class="token punctuation">.</span>activityInfo<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span>packageInfo <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            r<span class="token punctuation">.</span>packageInfo <span class="token operator">=</span> <span class="token function">getPackageInfo</span><span class="token punctuation">(</span>aInfo<span class="token punctuation">.</span>applicationInfo<span class="token punctuation">,</span> r<span class="token punctuation">.</span>compatInfo<span class="token punctuation">,</span>
                    Context<span class="token punctuation">.</span>CONTEXT_INCLUDE_CODE<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        ComponentName component <span class="token operator">=</span> r<span class="token punctuation">.</span>intent<span class="token punctuation">.</span><span class="token function">getComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>component <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            component <span class="token operator">=</span> r<span class="token punctuation">.</span>intent<span class="token punctuation">.</span><span class="token function">resolveActivity</span><span class="token punctuation">(</span>
                mInitialApplication<span class="token punctuation">.</span><span class="token function">getPackageManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            r<span class="token punctuation">.</span>intent<span class="token punctuation">.</span><span class="token function">setComponent</span><span class="token punctuation">(</span>component<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span>activityInfo<span class="token punctuation">.</span>targetActivity <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            component <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ComponentName</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>activityInfo<span class="token punctuation">.</span>packageName<span class="token punctuation">,</span>
                    r<span class="token punctuation">.</span>activityInfo<span class="token punctuation">.</span>targetActivity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        Activity activity <span class="token operator">=</span> null<span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>ClassLoader cl <span class="token operator">=</span> r<span class="token punctuation">.</span>packageInfo<span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">//通过反射创建activity实例</span>
            activity <span class="token operator">=</span> mInstrumentation<span class="token punctuation">.</span><span class="token function">newActivity</span><span class="token punctuation">(</span>
                    cl<span class="token punctuation">,</span> component<span class="token punctuation">.</span><span class="token function">getClassName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>
            StrictMode<span class="token punctuation">.</span><span class="token function">incrementExpectedActivityCount</span><span class="token punctuation">(</span>activity<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            r<span class="token punctuation">.</span>intent<span class="token punctuation">.</span><span class="token function">setExtrasClassLoader</span><span class="token punctuation">(</span>cl<span class="token punctuation">)</span><span class="token punctuation">;</span>
            r<span class="token punctuation">.</span>intent<span class="token punctuation">.</span><span class="token function">prepareToEnterProcess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span>state <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                r<span class="token punctuation">.</span>state<span class="token punctuation">.</span><span class="token function">setClassLoader</span><span class="token punctuation">(</span>cl<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mInstrumentation<span class="token punctuation">.</span><span class="token function">onException</span><span class="token punctuation">(</span>activity<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>
                    <span class="token string">"Unable to instantiate activity "</span> <span class="token operator">+</span> component
                    <span class="token operator">+</span> <span class="token string">": "</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            Application app <span class="token operator">=</span> r<span class="token punctuation">.</span>packageInfo<span class="token punctuation">.</span><span class="token function">makeApplication</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> mInstrumentation<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>localLOGV<span class="token punctuation">)</span> Slog<span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"Performing launch of "</span> <span class="token operator">+</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>localLOGV<span class="token punctuation">)</span> Slog<span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span>
                    TAG<span class="token punctuation">,</span> r <span class="token operator">+</span> <span class="token string">": app="</span> <span class="token operator">+</span> app
                    <span class="token operator">+</span> <span class="token string">", appName="</span> <span class="token operator">+</span> app<span class="token punctuation">.</span><span class="token function">getPackageName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token operator">+</span> <span class="token string">", pkg="</span> <span class="token operator">+</span> r<span class="token punctuation">.</span>packageInfo<span class="token punctuation">.</span><span class="token function">getPackageName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token operator">+</span> <span class="token string">", comp="</span> <span class="token operator">+</span> r<span class="token punctuation">.</span>intent<span class="token punctuation">.</span><span class="token function">getComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toShortString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token operator">+</span> <span class="token string">", dir="</span> <span class="token operator">+</span> r<span class="token punctuation">.</span>packageInfo<span class="token punctuation">.</span><span class="token function">getAppDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>activity <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment" spellcheck="true">//创建BaseContext</span>
                Context appContext <span class="token operator">=</span> <span class="token function">createBaseContextForActivity</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> activity<span class="token punctuation">)</span><span class="token punctuation">;</span>
                CharSequence title <span class="token operator">=</span> r<span class="token punctuation">.</span>activityInfo<span class="token punctuation">.</span><span class="token function">loadLabel</span><span class="token punctuation">(</span>appContext<span class="token punctuation">.</span><span class="token function">getPackageManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                Configuration config <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span>mCompatConfiguration<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span>overrideConfig <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    config<span class="token punctuation">.</span><span class="token function">updateFrom</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>overrideConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>DEBUG_CONFIGURATION<span class="token punctuation">)</span> Slog<span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"Launching activity "</span>
                        <span class="token operator">+</span> r<span class="token punctuation">.</span>activityInfo<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">" with config "</span> <span class="token operator">+</span> config<span class="token punctuation">)</span><span class="token punctuation">;</span>
                Window window <span class="token operator">=</span> null<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span>mPendingRemoveWindow <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> r<span class="token punctuation">.</span>mPreserveWindow<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    window <span class="token operator">=</span> r<span class="token punctuation">.</span>mPendingRemoveWindow<span class="token punctuation">;</span>
                    r<span class="token punctuation">.</span>mPendingRemoveWindow <span class="token operator">=</span> null<span class="token punctuation">;</span>
                    r<span class="token punctuation">.</span>mPendingRemoveWindowManager <span class="token operator">=</span> null<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment" spellcheck="true">//我们的activity.attach就在这里被调用的</span>
                activity<span class="token punctuation">.</span><span class="token function">attach</span><span class="token punctuation">(</span>appContext<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token function">getInstrumentation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>token<span class="token punctuation">,</span>
                        r<span class="token punctuation">.</span>ident<span class="token punctuation">,</span> app<span class="token punctuation">,</span> r<span class="token punctuation">.</span>intent<span class="token punctuation">,</span> r<span class="token punctuation">.</span>activityInfo<span class="token punctuation">,</span> title<span class="token punctuation">,</span> r<span class="token punctuation">.</span>parent<span class="token punctuation">,</span>
                        r<span class="token punctuation">.</span>embeddedID<span class="token punctuation">,</span> r<span class="token punctuation">.</span>lastNonConfigurationInstances<span class="token punctuation">,</span> config<span class="token punctuation">,</span>
                        r<span class="token punctuation">.</span>referrer<span class="token punctuation">,</span> r<span class="token punctuation">.</span>voiceInteractor<span class="token punctuation">,</span> window<span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span>customIntent <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    activity<span class="token punctuation">.</span>mIntent <span class="token operator">=</span> customIntent<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                r<span class="token punctuation">.</span>lastNonConfigurationInstances <span class="token operator">=</span> null<span class="token punctuation">;</span>
                activity<span class="token punctuation">.</span>mStartedActivity <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token keyword">int</span> theme <span class="token operator">=</span> r<span class="token punctuation">.</span>activityInfo<span class="token punctuation">.</span><span class="token function">getThemeResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>theme <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    activity<span class="token punctuation">.</span><span class="token function">setTheme</span><span class="token punctuation">(</span>theme<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                activity<span class="token punctuation">.</span>mCalled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">isPersistable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    mInstrumentation<span class="token punctuation">.</span><span class="token function">callActivityOnCreate</span><span class="token punctuation">(</span>activity<span class="token punctuation">,</span> r<span class="token punctuation">.</span>state<span class="token punctuation">,</span> r<span class="token punctuation">.</span>persistentState<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    mInstrumentation<span class="token punctuation">.</span><span class="token function">callActivityOnCreate</span><span class="token punctuation">(</span>activity<span class="token punctuation">,</span> r<span class="token punctuation">.</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>activity<span class="token punctuation">.</span>mCalled<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SuperNotCalledException</span><span class="token punctuation">(</span>
                        <span class="token string">"Activity "</span> <span class="token operator">+</span> r<span class="token punctuation">.</span>intent<span class="token punctuation">.</span><span class="token function">getComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toShortString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
                        <span class="token string">" did not call through to super.onCreate()"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                r<span class="token punctuation">.</span>activity <span class="token operator">=</span> activity<span class="token punctuation">;</span>
                r<span class="token punctuation">.</span>stopped <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>r<span class="token punctuation">.</span>activity<span class="token punctuation">.</span>mFinished<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    activity<span class="token punctuation">.</span><span class="token function">performStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    r<span class="token punctuation">.</span>stopped <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>r<span class="token punctuation">.</span>activity<span class="token punctuation">.</span>mFinished<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">isPersistable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span>state <span class="token operator">!=</span> null <span class="token operator">||</span> r<span class="token punctuation">.</span>persistentState <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            mInstrumentation<span class="token punctuation">.</span><span class="token function">callActivityOnRestoreInstanceState</span><span class="token punctuation">(</span>activity<span class="token punctuation">,</span> r<span class="token punctuation">.</span>state<span class="token punctuation">,</span>
                                    r<span class="token punctuation">.</span>persistentState<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span>state <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        mInstrumentation<span class="token punctuation">.</span><span class="token function">callActivityOnRestoreInstanceState</span><span class="token punctuation">(</span>activity<span class="token punctuation">,</span> r<span class="token punctuation">.</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>r<span class="token punctuation">.</span>activity<span class="token punctuation">.</span>mFinished<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    activity<span class="token punctuation">.</span>mCalled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">isPersistable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        mInstrumentation<span class="token punctuation">.</span><span class="token function">callActivityOnPostCreate</span><span class="token punctuation">(</span>activity<span class="token punctuation">,</span> r<span class="token punctuation">.</span>state<span class="token punctuation">,</span>
                                r<span class="token punctuation">.</span>persistentState<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        mInstrumentation<span class="token punctuation">.</span><span class="token function">callActivityOnPostCreate</span><span class="token punctuation">(</span>activity<span class="token punctuation">,</span> r<span class="token punctuation">.</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>activity<span class="token punctuation">.</span>mCalled<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SuperNotCalledException</span><span class="token punctuation">(</span>
                            <span class="token string">"Activity "</span> <span class="token operator">+</span> r<span class="token punctuation">.</span>intent<span class="token punctuation">.</span><span class="token function">getComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toShortString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
                            <span class="token string">" did not call through to super.onPostCreate()"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            r<span class="token punctuation">.</span>paused <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

            mActivities<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>token<span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SuperNotCalledException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> e<span class="token punctuation">;</span>

        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mInstrumentation<span class="token punctuation">.</span><span class="token function">onException</span><span class="token punctuation">(</span>activity<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>
                    <span class="token string">"Unable to start activity "</span> <span class="token operator">+</span> component
                    <span class="token operator">+</span> <span class="token string">": "</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> activity<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre>
<p>我们看到通过调用mInstrumentation.newActivity(<br>            cl, component.getClassName(), r.intent);返回一个Activity，哇~这个管家婆真是厉害！看看做了啥？肯定是反射创建一个Activity嘛。。不信？</p>
<p><strong>Instrumentation.java</strong></p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> Activity <span class="token function">newActivity</span><span class="token punctuation">(</span>ClassLoader cl<span class="token punctuation">,</span> String className<span class="token punctuation">,</span>
        Intent intent<span class="token punctuation">)</span>
        <span class="token keyword">throws</span> InstantiationException<span class="token punctuation">,</span> IllegalAccessException<span class="token punctuation">,</span>
        ClassNotFoundException <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>Activity<span class="token punctuation">)</span>cl<span class="token punctuation">.</span><span class="token function">loadClass</span><span class="token punctuation">(</span>className<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>不得不说Instrumentation真是任劳任怨啊。。</p>
<p>好，接着上面创建Activity之后,判断activity是否不等于空，走进if里面调用了</p>
<pre class=" language-java"><code class="language-java">activity<span class="token punctuation">.</span><span class="token function">attach</span><span class="token punctuation">(</span>appContext<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token function">getInstrumentation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>token<span class="token punctuation">,</span>
        r<span class="token punctuation">.</span>ident<span class="token punctuation">,</span> app<span class="token punctuation">,</span> r<span class="token punctuation">.</span>intent<span class="token punctuation">,</span> r<span class="token punctuation">.</span>activityInfo<span class="token punctuation">,</span> title<span class="token punctuation">,</span> r<span class="token punctuation">.</span>parent<span class="token punctuation">,</span>
        r<span class="token punctuation">.</span>embeddedID<span class="token punctuation">,</span> r<span class="token punctuation">.</span>lastNonConfigurationInstances<span class="token punctuation">,</span> config<span class="token punctuation">,</span>
        r<span class="token punctuation">.</span>referrer<span class="token punctuation">,</span> r<span class="token punctuation">.</span>voiceInteractor<span class="token punctuation">,</span> window<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
<p>原来我们Activity的attach在这里调用的啊。。。接着下面走</p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">if</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">isPersistable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    mInstrumentation<span class="token punctuation">.</span><span class="token function">callActivityOnCreate</span><span class="token punctuation">(</span>activity<span class="token punctuation">,</span> r<span class="token punctuation">.</span>state<span class="token punctuation">,</span> r<span class="token punctuation">.</span>persistentState<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    mInstrumentation<span class="token punctuation">.</span><span class="token function">callActivityOnCreate</span><span class="token punctuation">(</span>activity<span class="token punctuation">,</span> r<span class="token punctuation">.</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>看到没！看到没！熟悉不，我的application.onCreate也是这样调用的,管家婆666666</p>
<p><strong>Instrumentation.java</strong></p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">callActivityOnCreate</span><span class="token punctuation">(</span>Activity activity<span class="token punctuation">,</span> Bundle icicle<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">prePerformCreate</span><span class="token punctuation">(</span>activity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    activity<span class="token punctuation">.</span><span class="token function">performCreate</span><span class="token punctuation">(</span>icicle<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">postPerformCreate</span><span class="token punctuation">(</span>activity<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>调用了activity.performCreate(icicle);看到这么名字就应该很清楚了吧~，又不信？</p>
<p><strong>Activity.java</strong></p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">performCreate</span><span class="token punctuation">(</span>Bundle icicle<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">restoreHasCurrentPermissionRequest</span><span class="token punctuation">(</span>icicle<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">onCreate</span><span class="token punctuation">(</span>icicle<span class="token punctuation">)</span><span class="token punctuation">;</span>
    mActivityTransitionState<span class="token punctuation">.</span><span class="token function">readState</span><span class="token punctuation">(</span>icicle<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">performCreateCommon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>看到木有~~~回到上面，当执行handleLaunchActivity的时候，调用<code>performLaunchActivity(r, customIntent);</code>返回了Activity之后<br>我们接着向下看</p>
<p><strong>ActivityThread.java</strong></p>
<pre class=" language-java"><code class="language-java">Activity a <span class="token operator">=</span> <span class="token function">performLaunchActivity</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> customIntent<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    r<span class="token punctuation">.</span>createdConfig <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span>mConfiguration<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">reportSizeConfigurations</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
    Bundle oldState <span class="token operator">=</span> r<span class="token punctuation">.</span>state<span class="token punctuation">;</span>
    <span class="token function">handleResumeActivity</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>token<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>isForward<span class="token punctuation">,</span>
            <span class="token operator">!</span>r<span class="token punctuation">.</span>activity<span class="token punctuation">.</span>mFinished <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>r<span class="token punctuation">.</span>startsNotResumed<span class="token punctuation">,</span> r<span class="token punctuation">.</span>lastProcessedSeq<span class="token punctuation">,</span> reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>调用了handleResumeActivity，不用说 我敢肯定是用mInstrumentation来调用Activity.onResume的,我们来验证一下</p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">handleResumeActivity</span><span class="token punctuation">(</span>IBinder token<span class="token punctuation">,</span>
        <span class="token keyword">boolean</span> clearHide<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isForward<span class="token punctuation">,</span> <span class="token keyword">boolean</span> reallyResume<span class="token punctuation">,</span> <span class="token keyword">int</span> seq<span class="token punctuation">,</span> String reason<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ActivityClientRecord r <span class="token operator">=</span> mActivities<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    
    <span class="token comment" spellcheck="true">// TODO Push resumeArgs into the activity for consideration</span>
    r <span class="token operator">=</span> <span class="token function">performResumeActivity</span><span class="token punctuation">(</span>token<span class="token punctuation">,</span> clearHide<span class="token punctuation">,</span> reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre>
<p>继续看performResumeActivity()</p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">final</span> ActivityClientRecord <span class="token function">performResumeActivity</span><span class="token punctuation">(</span>IBinder token<span class="token punctuation">,</span>
        <span class="token keyword">boolean</span> clearHide<span class="token punctuation">,</span> String reason<span class="token punctuation">)</span> <span class="token punctuation">{</span>
ActivityClientRecord r <span class="token operator">=</span> mActivities<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>localLOGV<span class="token punctuation">)</span> Slog<span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"Performing resume of "</span> <span class="token operator">+</span> r
        <span class="token operator">+</span> <span class="token string">" finished="</span> <span class="token operator">+</span> r<span class="token punctuation">.</span>activity<span class="token punctuation">.</span>mFinished<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>r <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>r<span class="token punctuation">.</span>activity<span class="token punctuation">.</span>mFinished<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>clearHide<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        r<span class="token punctuation">.</span>hideForNow <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        r<span class="token punctuation">.</span>activity<span class="token punctuation">.</span>mStartedActivity <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        r<span class="token punctuation">.</span>activity<span class="token punctuation">.</span><span class="token function">onStateNotSaved</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        r<span class="token punctuation">.</span>activity<span class="token punctuation">.</span>mFragments<span class="token punctuation">.</span><span class="token function">noteStateNotSaved</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span>pendingIntents <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">deliverNewIntents</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> r<span class="token punctuation">.</span>pendingIntents<span class="token punctuation">)</span><span class="token punctuation">;</span>
            r<span class="token punctuation">.</span>pendingIntents <span class="token operator">=</span> null<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span>pendingResults <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">deliverResults</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> r<span class="token punctuation">.</span>pendingResults<span class="token punctuation">)</span><span class="token punctuation">;</span>
            r<span class="token punctuation">.</span>pendingResults <span class="token operator">=</span> null<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        r<span class="token punctuation">.</span>activity<span class="token punctuation">.</span><span class="token function">performResume</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mInstrumentation<span class="token punctuation">.</span><span class="token function">onException</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>activity<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>
            <span class="token string">"Unable to resume activity "</span>
            <span class="token operator">+</span> r<span class="token punctuation">.</span>intent<span class="token punctuation">.</span><span class="token function">getComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toShortString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token operator">+</span> <span class="token string">": "</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<p>看到了调用r.activity.performResume()，我们在继续看看Activity.performResume()</p>
<p><strong>Activity.java</strong></p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">performResume</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">performRestart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    mFragments<span class="token punctuation">.</span><span class="token function">execPendingActions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    mLastNonConfigurationInstances <span class="token operator">=</span> null<span class="token punctuation">;</span>

    mCalled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// mResumed is set by the instrumentation</span>
    mInstrumentation<span class="token punctuation">.</span><span class="token function">callActivityOnResume</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mCalled<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SuperNotCalledException</span><span class="token punctuation">(</span>
            <span class="token string">"Activity "</span> <span class="token operator">+</span> mComponent<span class="token punctuation">.</span><span class="token function">toShortString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
            <span class="token string">" did not call through to super.onResume()"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">// invisible activities must be finished before onResume() completes</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mVisibleFromClient <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>mFinished<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Log<span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"An activity without a UI must call finish() before onResume() completes"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getApplicationInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>targetSdkVersion
                <span class="token operator">></span> android<span class="token punctuation">.</span>os<span class="token punctuation">.</span>Build<span class="token punctuation">.</span>VERSION_CODES<span class="token punctuation">.</span>LOLLIPOP_MR1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span>
                    <span class="token string">"Activity "</span> <span class="token operator">+</span> mComponent<span class="token punctuation">.</span><span class="token function">toShortString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
                    <span class="token string">" did not call finish() prior to onResume() completing"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">// Now really resume, and install the current status bar and menu.</span>
    mCalled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

    mFragments<span class="token punctuation">.</span><span class="token function">dispatchResume</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    mFragments<span class="token punctuation">.</span><span class="token function">execPendingActions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">onPostResume</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mCalled<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SuperNotCalledException</span><span class="token punctuation">(</span>
            <span class="token string">"Activity "</span> <span class="token operator">+</span> mComponent<span class="token punctuation">.</span><span class="token function">toShortString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
            <span class="token string">" did not call through to super.onPostResume()"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<p>调用了<code>mInstrumentation.callActivityOnResume(this);</code>看来我们的验证是没错的</p>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>至此，Activity整个的启动流程也讲完了，大家也看到，调用过程极其复杂<br>源码中各种条件判断让人眼花缭乱，所以说如果你没记住也没关系，你只要记住这个流程，理解了Android在控制Activity生命周期时是如何操作，以及是通过哪几个关键的类进行操作的就可以了，以后遇到相关的问题之道从哪块下手即可，这些过程我虽然也是撸了一遍，但还是记不清。</p>
<h2 id="时序图"><a href="#时序图" class="headerlink" title="时序图"></a>时序图</h2><p>为了大家方便，我整理了下整个的调用过程</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1643415-b8ba30e853934979?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p><a href="http://upload-images.jianshu.io/upload_images/1643415-b8ba30e853934979?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" target="_blank" rel="external">点我查看高清无码大图</a></p>
<p>以上是本文讲的整个流程图,写的比较水，希望对大家学习有所帮助。。。</p>
<h2 id="Android-Studio查看源码的小技巧"><a href="#Android-Studio查看源码的小技巧" class="headerlink" title="Android Studio查看源码的小技巧"></a>Android Studio查看源码的小技巧</h2><p>不知道大家遇到过没，我们平时做项目的时候,想要查看哪些类使用了这个变量的，或者调用过这个类的方法的时候，都会去按住Ctrl加上鼠标点击那个变量或者方法,但是你只能查看自己的项目使用过<br>比如你想查看这个方法在哪里使用过你可以按住ctrl再点击这个方法查看它的引用</p>
<p><img src="/img/1482741073.png" alt=""></p>
<p>可是我们查看源码的时候，比如我们查看ActivityThread的源码 想看一下handleResumeActivity在哪里调用了，可是你会发现你按住ctrl在点击会找不到引用。为什么呢？因为默认是搜索你的项目，也就是说只要你的项目调用了这个方法，你才可以搜到，可是这是系统调用的，我想查看到底是谁调用的，怎么办捏？</p>
<p><img src="/img/1482741210.png" alt=""></p>
<p>右键单击这个方法弹出菜单，点击Find Usages，快捷是Ctrl+g</p>
<p><img src="/img/1482741261.png" alt=""></p>
<p>默认是搜索我们的Project引用，我们修改成</p>
<p><img src="/img/1482741279.png" alt=""></p>
<p>然后点击Find</p>
<p><img src="/img/1482741296.png" alt=""></p>
<p>就找了调用的地方，然后我们双击就到了调用的那行代码,下次你在按住ctrl单击那个方法的时候就会弹出来引用的地方</p>
<p><img src="/img/1482741310.png" alt=""></p>
<p>这对于我们查看源码有很大的帮助~</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://www.jianshu.com/p/6037f6fda285" target="_blank" rel="external">【凯子哥带你学Framework】Activity启动过程全解析</a></p>
<p><a href="http://blog.csdn.net/luoshengyang/article/details/6768304" target="_blank" rel="external">Android系统进程Zygote启动过程的源代码分析</a></p>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>讲了那么多，对于我们这些开发者来说，看源码是非常有必要，文中我只贴出了部分代码，完整的代码还要自己去看，这样印象也会非常深刻，看一遍不会，我们看两边，虽然一脸懵比，但是我们要相信自己，这点挫折怎能难倒我们程序员？最后的最后，如果文中有错误的地方还望大家指出</p>
<blockquote>
<p>博主整理不易，转载请注明出处:<br><a href="http://www.weyye.me/detail/android-source-activity-oncreate/" target="_blank" rel="external">http://www.weyye.me/detail/android-source-activity-oncreate/</a></p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[说说使用腾讯地图sdk遇到的那些坑]]></title>
      <url>http://weyye.me/detail/duplicate-files-copied/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前做项目一直使用的高德地图，这次做的项目客户必须使用腾讯地图，然后又去折腾了下腾讯地图，说说我遇到的哪些bug</p>
<h2 id="Bug1-使用RxJava集成sdk报错"><a href="#Bug1-使用RxJava集成sdk报错" class="headerlink" title="Bug1:使用RxJava集成sdk报错"></a>Bug1:使用RxJava集成sdk报错</h2><p>由于先Rxjava比较火，为了赶上时代的脚步，现在做的这几个项目都用的是Rxjava，但是当我导入腾讯地图sdk后，却报了这个错</p>
<pre class=" language-java"><code class="language-java">Error<span class="token operator">:</span>Execution failed <span class="token keyword">for</span> task <span class="token string">':app:transformResourcesWithMergeJavaResForDebug'</span><span class="token punctuation">.</span>
<span class="token operator">></span> com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>build<span class="token punctuation">.</span>api<span class="token punctuation">.</span>transform<span class="token punctuation">.</span>TransformException<span class="token operator">:</span> com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>builder<span class="token punctuation">.</span>packaging<span class="token punctuation">.</span>DuplicateFileException<span class="token operator">:</span> Duplicate files copied in APK META<span class="token operator">-</span>INF<span class="token operator">/</span>rxjava<span class="token punctuation">.</span>properties
    File1<span class="token operator">:</span> E<span class="token operator">:</span>\Android Project\YiBangKe\app\libs\TencentMapSDK_Vector_v3<span class="token number">.0</span><span class="token punctuation">.</span><span class="token number">4</span><span class="token punctuation">.</span>jar
    File2<span class="token operator">:</span> C<span class="token operator">:</span>\Users\Administrator\<span class="token punctuation">.</span>gradle\caches\modules<span class="token operator">-</span><span class="token number">2</span>\files<span class="token operator">-</span><span class="token number">2.1</span>\io<span class="token punctuation">.</span>reactivex\rxjava\<span class="token number">1.1</span><span class="token punctuation">.</span><span class="token number">1</span>\b494968f6050d494de55dc3ce005e59c7eb40012\rxjava<span class="token operator">-</span><span class="token number">1.1</span><span class="token punctuation">.</span><span class="token number">1</span><span class="token punctuation">.</span>jar
</code></pre>
<a id="more"></a>
<p>报错原因应该是因为腾讯地图也加入了RxJava</p>
<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>在app的<code>build.gradle</code>下面加入</p>
<pre class=" language-java"><code class="language-java">android <span class="token punctuation">{</span>
    packagingOptions <span class="token punctuation">{</span>
        exclude <span class="token string">'META-INF/rxjava.properties'</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<h2 id="Bug2-getMap-空指针"><a href="#Bug2-getMap-空指针" class="headerlink" title="Bug2:getMap()空指针"></a>Bug2:getMap()空指针</h2><p>使用地图官方建议是使用的SupportMapFragment,于是乎按照官方demo代码写下来</p>
<pre class=" language-java"><code class="language-java">FragmentManager fm <span class="token operator">=</span> <span class="token function">getSupportFragmentManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        SupportMapFragment map <span class="token operator">=</span> <span class="token punctuation">(</span>SupportMapFragment<span class="token punctuation">)</span>fm<span class="token punctuation">.</span><span class="token function">findFragmentById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>frag_map<span class="token punctuation">)</span><span class="token punctuation">;</span>
        tencentMap <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">getMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        tencentMap<span class="token punctuation">.</span><span class="token function">moveCamera</span><span class="token punctuation">(</span>CameraUpdateFactory<span class="token punctuation">.</span><span class="token function">newCameraPosition</span><span class="token punctuation">(</span><span class="token keyword">new</span> 
                <span class="token class-name">CameraPosition</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LatLng</span><span class="token punctuation">(</span><span class="token number">34.611524</span><span class="token punctuation">,</span><span class="token number">105.058565</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        tencentMap<span class="token punctuation">.</span><span class="token function">getUiSettings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setZoomControlsEnabled</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
<p>这个是布局</p>
<pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span>fragment
        android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/frag_map"</span>
        <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"com.tencent.tencentmap.mapsdk.maps.SupportMapFragment"</span>
        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>
        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"match_parent"</span><span class="token operator">/</span><span class="token operator">></span>
</code></pre>
<p>然后运行后报了下面这个错误</p>
<pre class=" language-java"><code class="language-java">Caused by<span class="token operator">:</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>NullPointerException<span class="token operator">:</span> Attempt to invoke virtual method <span class="token string">'com.tencent.tencentmap.mapsdk.maps.TencentMap com.tencent.tencentmap.mapsdk.maps.MapView.getMap()'</span> on a null object reference
<span class="token number">09</span><span class="token operator">-</span><span class="token number">28</span> <span class="token number">17</span><span class="token operator">:</span><span class="token number">46</span><span class="token operator">:</span><span class="token number">03.824</span> <span class="token number">10311</span><span class="token operator">-</span><span class="token number">10311</span><span class="token operator">/</span>com<span class="token punctuation">.</span>baishan<span class="token punctuation">.</span>yibangke W<span class="token operator">/</span>System<span class="token punctuation">.</span>err<span class="token operator">:</span>     at com<span class="token punctuation">.</span>tencent<span class="token punctuation">.</span>tencentmap<span class="token punctuation">.</span>mapsdk<span class="token punctuation">.</span>maps<span class="token punctuation">.</span>SupportMapFragment<span class="token punctuation">.</span><span class="token function">getMap</span><span class="token punctuation">(</span>SupportMapFragment<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">65</span><span class="token punctuation">)</span>
<span class="token number">09</span><span class="token operator">-</span><span class="token number">28</span> <span class="token number">17</span><span class="token operator">:</span><span class="token number">46</span><span class="token operator">:</span><span class="token number">03.824</span> <span class="token number">10311</span><span class="token operator">-</span><span class="token number">10311</span><span class="token operator">/</span>com<span class="token punctuation">.</span>baishan<span class="token punctuation">.</span>yibangke W<span class="token operator">/</span>System<span class="token punctuation">.</span>err<span class="token operator">:</span>     at com<span class="token punctuation">.</span>baishan<span class="token punctuation">.</span>yibangke<span class="token punctuation">.</span>presenter<span class="token punctuation">.</span>MainPresenter<span class="token punctuation">.</span><span class="token function">initMap</span><span class="token punctuation">(</span>MainPresenter<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">47</span><span class="token punctuation">)</span>
<span class="token number">09</span><span class="token operator">-</span><span class="token number">28</span> <span class="token number">17</span><span class="token operator">:</span><span class="token number">46</span><span class="token operator">:</span><span class="token number">03.824</span> <span class="token number">10311</span><span class="token operator">-</span><span class="token number">10311</span><span class="token operator">/</span>com<span class="token punctuation">.</span>baishan<span class="token punctuation">.</span>yibangke W<span class="token operator">/</span>System<span class="token punctuation">.</span>err<span class="token operator">:</span>     at com<span class="token punctuation">.</span>baishan<span class="token punctuation">.</span>yibangke<span class="token punctuation">.</span>ui<span class="token punctuation">.</span>fragment<span class="token punctuation">.</span>MainFragment<span class="token punctuation">.</span><span class="token function">processLogic</span><span class="token punctuation">(</span>MainFragment<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">74</span><span class="token punctuation">)</span>
</code></pre>
<p>MapView.getMap()是个空对象，也就是MapView，这个怎么会是null?我就奇了怪了，然后就看了下<code>SupportMapFragment</code>的代码</p>
<p><img src="/img/20160928174539.png" alt=""></p>
<p>也就是<code>mapV</code>是空，我们在看下在哪里赋值</p>
<p><img src="/img/20160928174704.png" alt=""></p>
<p>在这里初始化了 ，我们在继续跟踪看谁调用了这个方法</p>
<p><img src="/img/20160928174805.png" alt=""></p>
<p><code>newInstance</code>调用了，可是demo里面根本没有调用这个方法啊。。。你不说这谁知道。。。</p>
<h2 id="解决办法-1"><a href="#解决办法-1" class="headerlink" title="解决办法"></a>解决办法</h2><pre class=" language-java"><code class="language-java">FragmentManager fm <span class="token operator">=</span> <span class="token function">getActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSupportFragmentManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        SupportMapFragment mapFragment<span class="token operator">=</span>SupportMapFragment<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token function">getActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        fm<span class="token punctuation">.</span><span class="token function">beginTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>fl_content<span class="token punctuation">,</span> mapFragment<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
<p>在获取map之前手动掉一次，让它初始化即可</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android破解高德地图sdk使用map免key]]></title>
      <url>http://weyye.me/detail/crack-amap/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>开发项目中，经常会使用到地图，于是我会使用一些第三方的sdk，但是基本上所有的sdk使用时都需要申请key，填包名和sha1值，使(Ji)用(Qi)方(Fan)便(Suo)。作为一个android攻城狮，简直不能忍啊，于是乎看了下源码，决定破解一下，演示使用的是高德地图，至于百度，呵呵，下面看我慢慢道来</p>
<h2 id="所需工具"><a href="#所需工具" class="headerlink" title="所需工具"></a>所需工具</h2><ul>
<li>高德地图sdk最新版AMap_3DMap_V4.0.1_20160923.jar</li>
<li>Android Studio</li>
<li><a href="http://pan.baidu.com/s/1jIRnpGy" target="_blank" rel="external">jd-gui</a></li>
</ul>
<h2 id="分析代码"><a href="#分析代码" class="headerlink" title="分析代码"></a>分析代码</h2><p>在使用高德地图sdk的时候需要我们申请这个key，而这个key是需要我们提供包名和签名的sha1值生成的 因此 ，sdk在校验的时候肯定需要以下3个条件</p>
<ul>
<li>签名的sha1值</li>
<li>包名</li>
<li>申请成功的key</li>
</ul>
<a id="more"></a>
<p><a href="appkeyhttp://lbs.amap.com/dev/" target="_blank" rel="external">戳我申请</a></p>
<p>那么我们如果找到高德地图sdk的入口了，申请了一个key，可不可以写死在代码里面呢？这样就可以免去每次申请的烦恼，那么我们来尝试一下</p>
<p>首先我们打开jd-gui,然后从把从官网下下来最新的jar包拖进去，来看下jar包的目录结构</p>
<p><img src="/img/20160926145358.png" alt=""></p>
<p>我去，这么多，而且都是混淆过的，难道你要我一个个的找吗？No！这个当然是有技巧的。首先我们来思考一下</p>
<ul>
<li><p>为什么我们需要申请到的key</p>
</li>
<li><p>申请key的时候，为什么还要输入包名和sha1值，我乱填不行吗</p>
</li>
</ul>
<p>答案是 当然不行，当我们输入包名和sha1值提交的时候，其实在后台已经产生一条数据，标示着用这个sha1的签名生成出对应包名的app才可以使用。</p>
<p>既然高德要获取包名，那么我们平时是怎么样获取app的包名的呢？</p>
<pre class=" language-java"><code class="language-java">
PackageInfo packageInfo <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getPackageManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPackageInfo</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getPackageName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
String packageName<span class="token operator">=</span>packageInfo<span class="token punctuation">.</span>packageName<span class="token punctuation">;</span>
</code></pre>
<p>那么我们不妨搜索一下<code>packageName</code></p>
<p>按下快捷键ctrl+shift+s,打开搜索界面搜索 <code>packageName</code></p>
<p><img src="/img/20160926152501.png" alt=""></p>
<p>这只隐藏深处的小精灵被我抓到了 ，哈哈</p>
<p>ok，双击打开看下代码</p>
<p><img src="/img/20160926152955.png" alt=""></p>
<p>关键的地方我已经框出来了，其意思 先判断全局变量<code>e</code> 有没有值，有值直接返回，没有就获取自身app的签名的sha1和包名，然后用:去连接，最后<code>return e;</code> ，ok，找到这个全局变量我们把这个变量写死</p>
<h2 id="修改代码"><a href="#修改代码" class="headerlink" title="修改代码"></a>修改代码</h2><p>使用 Android Studio 新建一个 Android Library 的 Module ，包名与  jar 包要修改的类包名相同,新建一个类，与要修改的类名相同</p>
<p><img src="/img/20160926154945.png" alt=""></p>
<p>复制我们jd-gui中找到的class的内容到我们新建的类中，同时将 SDK 的 jar 包作为这个 Module 的依赖包，保证这个 Module 可以正常编译</p>
<p>我们修改变量e的值也就是 sha1:packageName，</p>
<p>观察这个类发现全是静态方法，由此可判断是工具类，所以key应该也会在这里面获取，我在继续查看下代码</p>
<p><img src="/img/20160926155811.png" alt=""></p>
<p>这个就是获取我们在<code>AndroidManifest</code>填入的key，我们继续把这个变量写死，填入我们的key</p>
<p>sha1有了，key有了，我们在来修改下包名，我们继续找</p>
<p><img src="/img/20160926160211.png" alt=""></p>
<p>我们继续修改b的值</p>
<p><img src="/img/20160926160355.png" alt=""></p>
<p>ok，大功告成。我们来打包成jar包，那么Android Studio 如何打包 jar 呢？</p>
<p>我们在这个修改的用来修改的 Module 的 build.gradle 中添加以下代码</p>
<pre class=" language-java"><code class="language-java">
task <span class="token function">makeJar</span><span class="token punctuation">(</span>type<span class="token operator">:</span> Copy<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    delete <span class="token string">'build/libs/lib.jar'</span>

    <span class="token function">from</span><span class="token punctuation">(</span><span class="token string">'build/intermediates/bundles/release/'</span><span class="token punctuation">)</span>

    <span class="token function">into</span><span class="token punctuation">(</span><span class="token string">'build/libs/'</span><span class="token punctuation">)</span>

    <span class="token function">include</span><span class="token punctuation">(</span><span class="token string">'classes.jar'</span><span class="token punctuation">)</span>

    <span class="token function">rename</span> <span class="token punctuation">(</span><span class="token string">'classes.jar'</span><span class="token punctuation">,</span> <span class="token string">'lib.jar'</span><span class="token punctuation">)</span>

<span class="token punctuation">}</span>

makeJar<span class="token punctuation">.</span><span class="token function">dependsOn</span><span class="token punctuation">(</span>build<span class="token punctuation">)</span>
</code></pre>
<p>在工程目录下执行</p>
<pre class=" language-java"><code class="language-java">
gradlew makeJar
</code></pre>
<p><img src="/img/20160926162721.png" alt=""></p>
<p>即可得到 jar 文件</p>
<p><img src="/img/20160926162806.png" alt=""></p>
<p>用压缩软件打开<code>lib.jar</code>和<code>AMap_3DMap_V4.0.1_20160923</code></p>
<p>找到<code>lib.jar</code>的<code>eu.class</code> 替换 到<code>AMap_3DMap_V4.0.1_20160923</code>里的<code>eu.class</code></p>
<p><img src="/img/20160926163211.png" alt=""></p>
<p>大功告成~</p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>使用修改后的 SDK jar 包替换原来的 jar 包进行地图测试</p>
<p>测试成功,包名和签名可以随意换咯，再也不用麻烦的每次申请 key 啦！</p>
<p><img src="/img/20160926164713.png" alt=""></p>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p><a href="https://github.com/yewei02538/AmapDemo" target="_blank" rel="external">戳我传送GitHub</a></p>
<blockquote>
<p>demo中定位也是破解后免key，下一篇会讲解如何定位免key</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[修改hosts进入google世界]]></title>
      <url>http://weyye.me/detail/my-google-search/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>自从google退出中国市场后，很多人使用百度搜索，但是作为程序员的我们，应该去使用google搜索，因为很多资料是百度搜索不到的，而且没有广告，毕竟墙外的世界是非常精彩滴。</p>
<h2 id="如何科学上网"><a href="#如何科学上网" class="headerlink" title="如何科学上网"></a>如何科学上网</h2><ul>
<li>VPN： 这里不多做介绍</li>
<li>google浏览器插件：之前可以，现在很多插件都没和谐了</li>
<li>修改系统hosts： 这个是最简单粗暴的，而且速度又快，谁用谁知道</li>
</ul>
<h2 id="hosts下载地址"><a href="#hosts下载地址" class="headerlink" title="hosts下载地址"></a>hosts下载地址</h2><blockquote>
<p>IP有一段的时效性，并不能保证能永久使用，我会持续更新最新的hosts的文件提供给大家</p>
</blockquote>
<p><a href="http://weyye.me/download/hosts.zip">下载地址</a></p>
<a id="more"></a>
<h2 id="修改系统hosts"><a href="#修改系统hosts" class="headerlink" title="修改系统hosts"></a>修改系统hosts</h2><p>1、找到hosts这个文件，在Windows 系统下是位于C盘/windows/system32/drivers/etc目录里。</p>
<p><img src="/img/20160923165124.png" alt=""></p>
<p>2、把下载下来的<code>hosts.zip</code>解压后得到hosts，然后直接覆盖就可以了</p>
<h2 id="进入google世界"><a href="#进入google世界" class="headerlink" title="进入google世界"></a>进入google世界</h2><p>接下来，你就可以google搜索啦~</p>
<p>输入 <a href="https://www.google.com/" target="_blank" rel="external">https://www.google.com/</a></p>
<p><img src="/img/20160923165742.png" alt=""></p>
<p>然后就成功看到熟悉的google啦</p>
<p><img src="/img/20160923165725.png" alt=""></p>
<blockquote>
<p>如果还是不行的朋友，可以输入<a href="https://www.google.com/ncr" target="_blank" rel="external">https://www.google.com/ncr</a></p>
</blockquote>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>作为了一名技术人，请大家一定要使用 Google ，虽然现在被墙，但是我坚信终有一天 Google 会回归，也许十年之后，也许五十年之后… </p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android通用的EmptyLayout-展示不用状态的界面]]></title>
      <url>http://weyye.me/detail/empty-layout/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在做项目的时候，经常会遇到列表数据为空的时候展示的空布局，如果你用的是<code>ListView</code> ,目测会经常使用<code>ListView</code>的一个方法<code>setEmptyView</code> ,如果你用的是<code>RecyclerView</code>,你也许会用自定义View来实现，但是，这些方法虽然使用起来简单，但是如果你提供一个复杂的布局，例如：</p>
<blockquote>
<p>在数据加载失败后，添加一个Button让用户可以选择重新加载数据。</p>
</blockquote>
<p>你肯定会说，findviewbyId找到这个button，给它设置点击事件，一个两个可以接受，但是，界面多了呢？ 那你说了那么多，有没有好的解决办法呢？ 当然有 而且是几行代码搞定的<br><a id="more"></a></p>
<h2 id="自定义View"><a href="#自定义View" class="headerlink" title="自定义View"></a>自定义View</h2><p>接下来就是重头戏 开始编码了 ，首先我们需要继承<code>FrameLayout</code>来实现这样的布局</p>
<pre class=" language-java"><code class="language-java">
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EmptyLayout</span> <span class="token keyword">extends</span> <span class="token class-name">FrameLayout</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token function">EmptyLayout</span><span class="token punctuation">(</span>Context context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token function">EmptyLayout</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> AttributeSet attrs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token function">EmptyLayout</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> AttributeSet attrs<span class="token punctuation">,</span> <span class="token keyword">int</span> defStyleAttr<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<p>为了灵活性，我自定义属性来添加所需要的布局，<code>values</code>下面新建<code>attrs.xml</code></p>
<pre class=" language-java"><code class="language-java">
<span class="token operator">&lt;</span>resources<span class="token operator">></span>
    <span class="token operator">&lt;</span>declare<span class="token operator">-</span>styleable name<span class="token operator">=</span><span class="token string">"EmptyLayout"</span><span class="token operator">></span>
        <span class="token operator">&lt;</span>attr name<span class="token operator">=</span><span class="token string">"elEmptyLayout"</span>  format<span class="token operator">=</span><span class="token string">"reference"</span><span class="token operator">/</span><span class="token operator">></span>
        <span class="token operator">&lt;</span>attr name<span class="token operator">=</span><span class="token string">"elErrorLayout"</span>  format<span class="token operator">=</span><span class="token string">"reference"</span><span class="token operator">/</span><span class="token operator">></span>
        <span class="token operator">&lt;</span>attr name<span class="token operator">=</span><span class="token string">"elLoadingLayout"</span>  format<span class="token operator">=</span><span class="token string">"reference"</span><span class="token operator">/</span><span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>declare<span class="token operator">-</span>styleable<span class="token operator">></span>
<span class="token operator">&lt;</span><span class="token operator">/</span>resources<span class="token operator">></span>
</code></pre>
<p>然后我们以此找到这些布局，并且添加进去</p>
<pre class=" language-java"><code class="language-java">
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EmptyLayout</span> <span class="token keyword">extends</span> <span class="token class-name">FrameLayout</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span>  Context mContext<span class="token punctuation">;</span>
    <span class="token keyword">private</span> View mEmptyView<span class="token punctuation">;</span>
    <span class="token keyword">private</span> View mBindView<span class="token punctuation">;</span>
    <span class="token keyword">private</span> View mErrorView<span class="token punctuation">;</span>
    <span class="token keyword">private</span> Button mBtnReset<span class="token punctuation">;</span>
    <span class="token keyword">private</span> View mLoadingView<span class="token punctuation">;</span>
    <span class="token keyword">private</span> View loadingView<span class="token punctuation">;</span>
    <span class="token keyword">private</span> TextView mEmptyText<span class="token punctuation">;</span>
    <span class="token keyword">private</span> TextView tvLoadingText<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">EmptyLayout</span><span class="token punctuation">(</span>Context context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token function">EmptyLayout</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> AttributeSet attrs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token function">EmptyLayout</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> AttributeSet attrs<span class="token punctuation">,</span> <span class="token keyword">int</span> defStyleAttr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">,</span> defStyleAttr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>mContext<span class="token operator">=</span>context<span class="token punctuation">;</span>

        LayoutParams params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LayoutParams</span><span class="token punctuation">(</span>LayoutParams<span class="token punctuation">.</span>WRAP_CONTENT<span class="token punctuation">,</span> LayoutParams<span class="token punctuation">.</span>WRAP_CONTENT<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//居中</span>
        params<span class="token punctuation">.</span>gravity <span class="token operator">=</span> Gravity<span class="token punctuation">.</span>CENTER<span class="token punctuation">;</span>

        TypedArray ta <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">obtainStyledAttributes</span><span class="token punctuation">(</span>attrs<span class="token punctuation">,</span> R<span class="token punctuation">.</span>styleable<span class="token punctuation">.</span>EmptyLayout<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//数据为空时的布局</span>
        <span class="token keyword">int</span> emptyLayout <span class="token operator">=</span> ta<span class="token punctuation">.</span><span class="token function">getResourceId</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>styleable<span class="token punctuation">.</span>EmptyLayout_elEmptyLayout<span class="token punctuation">,</span> R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>layout_empty<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mEmptyView <span class="token operator">=</span> View<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> emptyLayout<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mEmptyText <span class="token operator">=</span><span class="token punctuation">(</span>TextView<span class="token punctuation">)</span>mEmptyView<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>tvEmptyText<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">addView</span><span class="token punctuation">(</span>mEmptyView<span class="token punctuation">,</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">//加载中的布局</span>
        <span class="token keyword">int</span> loadingLayout <span class="token operator">=</span> ta<span class="token punctuation">.</span><span class="token function">getResourceId</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>styleable<span class="token punctuation">.</span>EmptyLayout_elLoadingLayout<span class="token punctuation">,</span> R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>layout_loading<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mLoadingView <span class="token operator">=</span> View<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> loadingLayout<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>
        tvLoadingText <span class="token operator">=</span><span class="token punctuation">(</span>TextView<span class="token punctuation">)</span>mLoadingView<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>tvLoadingText<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">addView</span><span class="token punctuation">(</span>mLoadingView<span class="token punctuation">,</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">//错误时的布局</span>
        <span class="token keyword">int</span> errorLayout <span class="token operator">=</span> ta<span class="token punctuation">.</span><span class="token function">getResourceId</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>styleable<span class="token punctuation">.</span>EmptyLayout_elErrorLayout<span class="token punctuation">,</span> R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>layout_error<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mErrorView <span class="token operator">=</span> View<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> errorLayout<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mBtnReset <span class="token operator">=</span><span class="token punctuation">(</span>Button<span class="token punctuation">)</span>mErrorView<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>btnReset<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">addView</span><span class="token punctuation">(</span>mErrorView<span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">//全部隐藏</span>
        <span class="token function">setGone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">/**
    * 全部隐藏
    */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">setGone</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mEmptyView<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span>View<span class="token punctuation">.</span>GONE<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mErrorView<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span>View<span class="token punctuation">.</span>GONE<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mLoadingView<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span>View<span class="token punctuation">.</span>GONE<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<p>简单说下几个变量的作用<br><code>mEmptyView</code> 表示数据为空的时候展示给用户<br><code>mEmptyText</code> 数据为空提示的文字<br><code>mErrorView</code> 加载错误展示给用户<br><code>mBtnReset</code> 加载错误重新加载的按钮<br><code>mLoadingView</code> 加载中展示给用户<br><code>tvLoadingText</code> 加载中提示的文字<br><code>mBindView</code> 我们要绑定的view</p>
<p>至此还需要重写一个方法,</p>
<pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">canScrollVertically</span><span class="token punctuation">(</span><span class="token keyword">int</span> direction<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">return</span> mBindView<span class="token punctuation">.</span><span class="token function">getVisibility</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span>VISIBLE<span class="token operator">?</span>mBindView<span class="token punctuation">.</span><span class="token function">canScrollVertically</span><span class="token punctuation">(</span>direction<span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">canScrollVertically</span><span class="token punctuation">(</span>direction<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre>
<p>如果加载成功，过度滑动会调用<code>mBindView</code>的<code>canScrollVertically</code>,没有则调用父类的<code>canScrollVertically</code></p>
<p>如果没有重写,添加SwipeRefreshLayout下拉刷新会报错，</p>
<p>在此谢谢<a href="">丁大哥</a>提出来的bug</p>
<p>好了，首先我们找到布局，然后添加进去，如果没有，添加默认的布局。至此，布局已经完成，那怎么控制呢？我们想要的是什么效果呢？</p>
<blockquote>
<p>在数据正在加载的时候调用loading方法，显示正在加载中的文本。<br>在数据加载成，隐藏该view。<br>在数据加载失败，显示加载失败的文本，并提供一个按钮去刷新数据。</p>
</blockquote>
<p>ok，我们按照这个条目一个个的来实现，首先是loading。</p>
<pre class=" language-java"><code class="language-java">
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">showLoading</span><span class="token punctuation">(</span>String text<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mBindView <span class="token operator">!=</span> null<span class="token punctuation">)</span> mBindView<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span>View<span class="token punctuation">.</span>GONE<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>TextUtils<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span> tvLoadingText<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setGone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mLoadingView<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span>View<span class="token punctuation">.</span>VISIBLE<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">showLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">showLoading</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre>
<p>首先判断下我们要绑定view是不是为空，不为空则隐藏它，隐藏其他布局，然后展示loadingview</p>
<p>那加载失败了呢？同样简单！</p>
<pre class=" language-java"><code class="language-java">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">showError</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">showError</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">showError</span><span class="token punctuation">(</span>String text<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mBindView <span class="token operator">!=</span> null<span class="token punctuation">)</span> mBindView<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span>View<span class="token punctuation">.</span>GONE<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>TextUtils<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span> mBtnReset<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setGone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mErrorView<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span>View<span class="token punctuation">.</span>VISIBLE<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre>
<p>这个同上</p>
<p>继续看看加载成功的方法，这个更简单啦。</p>
<pre class=" language-java"><code class="language-java">
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">showSuccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mBindView <span class="token operator">!=</span> null<span class="token punctuation">)</span> mBindView<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span>View<span class="token punctuation">.</span>VISIBLE<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setGone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre>
<p>至此，我们整个效果就完成了，在加载数据的时候调用<code>showLoading</code>方法来显示加载中的文本，加载失败后，调用<code>showError</code>来显示加载失败的文本和刷新的按钮，在加载成功后直接隐藏控件</p>
<p>控件倒是完成了，我们还不知道mBindView怎么来的，其实也很简单。我们在代码中需要调用bindView(View view)方法来指定。</p>
<pre class=" language-java"><code class="language-java">
     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">bindView</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mBindView <span class="token operator">=</span> view<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre>
<p>那么问题来了，我加载失败后，按钮的点击事件怎么做呢？有人会说用反射，这样既省了代码行数，看着又舒服，但是这样是有个问题存在的，大家都知道，一个项目的上线，都会进行混淆代码的，为了就是防止他人剽窃我们的劳动成果，可是混淆过后哪些class全部变成a，b，c ，这样如果用反射的话就会导致点击事件失效，因为找不到这个类，所以，我们还是老老实实的用onclick事件吧</p>
<pre class=" language-java"><code class="language-java">
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setOnButtonClick</span><span class="token punctuation">(</span>OnClickListener listener<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mBtnReset<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span>listener<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre>
<p>这样，一个简单的<code>EmptyLayout</code>就诞生了，接下来我们来看看怎么使用</p>
<p>先看<code>xml</code>布局</p>
<pre class=" language-java"><code class="language-java">
<span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token operator">?</span><span class="token operator">></span>
<span class="token operator">&lt;</span>RelativeLayout xmlns<span class="token operator">:</span>android<span class="token operator">=</span><span class="token string">"http://schemas.android.com/apk/res/android"</span>
    xmlns<span class="token operator">:</span>tools<span class="token operator">=</span><span class="token string">"http://schemas.android.com/tools"</span>

    android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>
    android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"match_parent"</span>
    tools<span class="token operator">:</span>context<span class="token operator">=</span><span class="token string">"me.weyye.emptylayout.MainActivity"</span><span class="token operator">></span>

    <span class="token operator">&lt;</span>android<span class="token punctuation">.</span>support<span class="token punctuation">.</span>v4<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>SwipeRefreshLayout
        android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/srl"</span>
        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>
        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"match_parent"</span><span class="token operator">></span>

        <span class="token operator">&lt;</span>me<span class="token punctuation">.</span>weyye<span class="token punctuation">.</span>library<span class="token punctuation">.</span>EmptyLayout xmlns<span class="token operator">:</span>app<span class="token operator">=</span><span class="token string">"http://schemas.android.com/apk/res-auto"</span>
            android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/emptyLayout"</span>
            android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>
            android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"match_parent"</span>
            app<span class="token operator">:</span>elEmptyLayout<span class="token operator">=</span><span class="token string">"@layout/layout_empty"</span>
            app<span class="token operator">:</span>elErrorLayout<span class="token operator">=</span><span class="token string">"@layout/layout_error"</span>
            app<span class="token operator">:</span>elLoadingLayout<span class="token operator">=</span><span class="token string">"@layout/layout_loading"</span><span class="token operator">></span>

            <span class="token operator">&lt;</span>android<span class="token punctuation">.</span>support<span class="token punctuation">.</span>v7<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>RecyclerView
                android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/recyclerView"</span>
                android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>
                android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"match_parent"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>android<span class="token punctuation">.</span>support<span class="token punctuation">.</span>v7<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>RecyclerView<span class="token operator">></span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>me<span class="token punctuation">.</span>weyye<span class="token punctuation">.</span>library<span class="token punctuation">.</span>EmptyLayout<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>android<span class="token punctuation">.</span>support<span class="token punctuation">.</span>v4<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>SwipeRefreshLayout<span class="token operator">></span>
<span class="token operator">&lt;</span><span class="token operator">/</span>RelativeLayout<span class="token operator">></span>
</code></pre>
<p>在看看Activity中怎么调用</p>
<pre class=" language-java"><code class="language-java">
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">Activity</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> EmptyLayout emptyLayout<span class="token punctuation">;</span>
    <span class="token keyword">private</span> RecyclerView recyclerView<span class="token punctuation">;</span>
    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>String<span class="token operator">></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> MyAdapter adapter<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">initView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">loadData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> Handler mHandler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Handler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">initView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        emptyLayout <span class="token operator">=</span> <span class="token punctuation">(</span>EmptyLayout<span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>emptyLayout<span class="token punctuation">)</span><span class="token punctuation">;</span>
        recyclerView <span class="token operator">=</span> <span class="token punctuation">(</span>RecyclerView<span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>recyclerView<span class="token punctuation">)</span><span class="token punctuation">;</span>
     srl <span class="token operator">=</span> <span class="token punctuation">(</span>SwipeRefreshLayout<span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>srl<span class="token punctuation">)</span><span class="token punctuation">;</span>
        recyclerView<span class="token punctuation">.</span><span class="token function">setLayoutManager</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LinearLayoutManager</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> LinearLayoutManager<span class="token punctuation">.</span>VERTICAL<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        recyclerView<span class="token punctuation">.</span><span class="token function">setAdapter</span><span class="token punctuation">(</span>adapter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyAdapter</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//绑定</span>
        emptyLayout<span class="token punctuation">.</span><span class="token function">bindView</span><span class="token punctuation">(</span>recyclerView<span class="token punctuation">)</span><span class="token punctuation">;</span>
        emptyLayout<span class="token punctuation">.</span><span class="token function">setOnButtonClick</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View v<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">//重新加载数据</span>
                <span class="token function">loadData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    srl<span class="token punctuation">.</span><span class="token function">setOnRefreshListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SwipeRefreshLayout<span class="token punctuation">.</span>OnRefreshListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                srl<span class="token punctuation">.</span><span class="token function">setRefreshing</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">loadData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">loadData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">//模拟加载数据</span>
        emptyLayout<span class="token punctuation">.</span><span class="token function">showLoading</span><span class="token punctuation">(</span><span class="token string">"正在加载，请稍后"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mHandler<span class="token punctuation">.</span><span class="token function">postDelayed</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">//为了防止重复调用</span>
                mHandler<span class="token punctuation">.</span><span class="token function">removeCallbacks</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                Random r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">int</span> res <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span>res <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment" spellcheck="true">// 失败</span>
                    emptyLayout<span class="token punctuation">.</span><span class="token function">showError</span><span class="token punctuation">(</span><span class="token string">"加载失败，点击重新加载"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 显示失败</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token comment" spellcheck="true">// 成功</span>
                    emptyLayout<span class="token punctuation">.</span><span class="token function">showSuccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">15</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"测试"</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    adapter<span class="token punctuation">.</span><span class="token function">notifyDataSetChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<p>首页我们找到控件，然后给<code>recyclerView</code>设置<code>adapter</code>，然后我们调用<code>emptyLayout.bindView(recyclerView);</code>来设置要绑定的<code>view</code>,当然这里是recyclerView,接下来，通过<code>emptyLayout.setOnButtonClick()</code>来设置重新加载的时候执行哪个方法，在<code>loadData()</code>中延迟3秒获取数据，数据成功失败都是随机的，当失败的时候会调用<code>emptyLayout.showError()</code>，成功就调用emptyLayout.showSuccess();就这么简单，来看看运行效果</p>
<h2 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h2><p><img src="/img/device-2016-08-30-180056 00_00_00-00_00_10~1.gif" alt=""></p>
<p>Github:<a href="https://github.com/yewei02538/EmptyLayout" target="_blank" rel="external">https://github.com/yewei02538/EmptyLayout</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[调用System.gc没有立即执行的解决方法]]></title>
      <url>http://weyye.me/detail/System-gc-not-called/</url>
      <content type="html"><![CDATA[<h2 id="查看源码"><a href="#查看源码" class="headerlink" title="查看源码"></a>查看源码</h2><p>当我们调用System.gc()的时候，其实并不会马上进行垃圾回收，甚至不一定会执行垃圾回收，查看系统源码可以看到</p>
<pre class=" language-java"><code class="language-java">
    <span class="token comment" spellcheck="true">/**
     * Indicates to the VM that it would be a good time to run the
     * garbage collector. Note that this is a hint only. There is no guarantee
     * that the garbage collector will actually be run.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">gc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">boolean</span> shouldRunGC<span class="token punctuation">;</span>
        <span class="token keyword">synchronized</span><span class="token punctuation">(</span>lock<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            shouldRunGC <span class="token operator">=</span> justRanFinalization<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>shouldRunGC<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                justRanFinalization <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                runGC <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>shouldRunGC<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            Runtime<span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">gc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre>
<p>也就是<code>justRanFinalization=true</code>的时候才会执行<br><a id="more"></a></p>
<p>查找发现当调用runFinalization()的时候<code>justRanFinalization</code>变为<code>true</code><br>下面是runFinalization()的源码</p>
<pre class=" language-java"><code class="language-java">
<span class="token comment" spellcheck="true">/**
* Provides a hint to the VM that it would be useful to attempt
* to perform any outstanding object finalization.
*/</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">runFinalization</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">boolean</span> shouldRunGC<span class="token punctuation">;</span>
        <span class="token keyword">synchronized</span><span class="token punctuation">(</span>lock<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            shouldRunGC <span class="token operator">=</span> runGC<span class="token punctuation">;</span>
            runGC <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>shouldRunGC<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            Runtime<span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">gc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        Runtime<span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">runFinalization</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">synchronized</span><span class="token punctuation">(</span>lock<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            justRanFinalization <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>
<p>其实当我们直接调用<code>System.gc()</code>只会把这次gc请求记录下来，等到<code>runFinalization=true</code>的时候才会先去执行GC，<code>runFinalization=true</code>之后会在允许一次system.gc()。之后在call System.gc()还会重复上面的行为。<br>所以System.gc()要跟System.runFinalization()一起搭配使用才好。<br>查看<code>ZygoteInit.java</code> 里面 gc()和runFinalizationSync()是配合使用的，这样才有效果</p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">gcAndFinalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> VMRuntime runtime <span class="token operator">=</span> VMRuntime<span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">/* runFinalizationSync() lets finalizers be called in Zygote,
    * which doesn't have a HeapWorker thread.
    */</span>
    System<span class="token punctuation">.</span><span class="token function">gc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    runtime<span class="token punctuation">.</span><span class="token function">runFinalizationSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    System<span class="token punctuation">.</span><span class="token function">gc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>由此可见，当我们需要调用的<code>System.gc()</code>的时候 要这样才会执行</p>
<pre class=" language-java"><code class="language-java">System<span class="token punctuation">.</span><span class="token function">gc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
runtime<span class="token punctuation">.</span><span class="token function">runFinalizationSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
System<span class="token punctuation">.</span><span class="token function">gc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
<p>不过个人建议不到万不得已不要调用,因为jvm有自己的gc策略，根本不需要我们来手动</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Dialog样式的Activity-可以在任何地方弹出的Dialog]]></title>
      <url>http://weyye.me/detail/dialogactivity/</url>
      <content type="html"><![CDATA[<p>最近项目用到一个需求，当收到透传消息后不管在哪个界面都要弹出一个dialog，当时觉得这还不简单嘛，new一个呀 ，于是我就在receiver里面new了一个</p>
<p>然后就报了如下的错</p>
<p><pre><br>android.view.WindowManager$BadTokenException: Unable to add window – token null is not for an application<br>android.view.ViewRootImpl.setView(ViewRootImpl.java:567)<br>                                                                    at android.view.WindowManagerGlobal.addView(WindowManagerGlobal.java:269)                                                                       at android.view.WindowManagerImpl.addView(WindowManagerImpl.java:69)                                                               at android.app.Dialog.show(Dialog.java:323)                                                                     at com.yipwey.dialogactivity.PushReceiver.onReceive(PushReceiver.java:16)<br>                                                                           at android.app.ActivityThread.handleReceiver(ActivityThread.java:2508)<br>                                                                           at android.app.ActivityThread.access$2000(ActivityThread.java:141)<br>                                                                           at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1323)<br></pre><br><a id="more"></a><br>下面是我写的测试代码</p>
<pre><code>public class PushReceiver extends BroadcastReceiver {
    @Override
    public void onReceive(Context context, Intent intent) {
        Dialog dialog=new Dialog(context);
        dialog.setTitle(&quot;Dialog&quot;);
        dialog.show();
    }
}
</code></pre><p>在stackoverflow上找到了原因 <a href="http://stackoverflow.com/questions/19024940/android-error-unable-to-add-window-token-null-is-not-for-an-application" title="Unable to add window" target="_blank" rel="external">http://stackoverflow.com/questions/19024940/android-error-unable-to-add-window-token-null-is-not-for-an-application</a></p>
<p>原因是因为传入的是Context，而需要的是Activity</p>
<p>查询SDK帮助文档：</p>
<p>Return the context of the single, global Application object of the current process. This generally should only be used if you need a Context whose lifecycle is separate from the current context, that is tied to the lifetime of the process rather than the current component.</p>
<p>在回来发现我这里是Receiver啊，并不是Activity<br>于是乎就要换一种方法了，也就是Dialog风格的Activity</p>
<p>这样既解决了这个问题，有可以再Activity里写控制的代码，下面我就抛砖引玉介绍一下吧</p>
<p>首先，要写一个style 并且集成 <code>@android:style/Theme.Dialog</code>，</p>
<pre><code> &lt;style name=&quot;CustomTheme_Dialog&quot; parent=&quot;@android:style/Theme.Dialog&quot;&gt;
        &lt;item name=&quot;android:windowBackground&quot;&gt;@android:color/transparent&lt;/item&gt;
        &lt;item name=&quot;android:windowFrame&quot;&gt;@null&lt;/item&gt;
        &lt;item name=&quot;android:windowActionBar&quot;&gt;false&lt;/item&gt;
        &lt;item name=&quot;android:windowNoTitle&quot;&gt;true&lt;/item&gt;
        &lt;item name=&quot;android:windowIsFloating&quot;&gt;true&lt;/item&gt;
        &lt;item name=&quot;android:windowIsTranslucent&quot;&gt;false&lt;/item&gt;
        &lt;item name=&quot;android:backgroundDimEnabled&quot;&gt;true&lt;/item&gt;
 &lt;/style&gt;
</code></pre><p>然后再你的Manifest中的Activity添加 <code>android:theme=&quot;@style/CustomTheme_Dialog&quot;</code></p>
<p>这样你的Activity就是dialog风格的了</p>
<pre><code>public class DialogActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    }
}
</code></pre><p>下面是我的布局，</p>
<pre><code>&lt;RelativeLayout
    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot;
    android:paddingLeft=&quot;@dimen/activity_horizontal_margin&quot;
    android:paddingRight=&quot;@dimen/activity_horizontal_margin&quot;
    android:paddingTop=&quot;@dimen/activity_vertical_margin&quot;
    android:paddingBottom=&quot;@dimen/activity_vertical_margin&quot;
    tools:context=&quot;com.yipwey.dialogactivity.MainActivity&quot;&gt;

    &lt;Button
        android:id=&quot;@+id/btn&quot;
        android:text=&quot;Hello World!&quot;
        android:layout_centerInParent=&quot;true&quot;
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot; /&gt;
&lt;/RelativeLayout&gt;
</code></pre><p>,然后我们运行一下</p>
<p>然后你会发现又报错了</p>
<pre><code>Caused by: java.lang.IllegalStateException: You need to use a Theme.AppCompat theme (or descendant) with this activity.
                                                                               at android.support.v7.app.AppCompatDelegateImplV7.createSubDecor(AppCompatDelegateImplV7.java:343)
                                                                               at android.support.v7.app.AppCompatDelegateImplV7.ensureSubDecor(AppCompatDelegateImplV7.java:312)
                                                                               at android.support.v7.app.AppCompatDelegateImplV7.setContentView(AppCompatDelegateImplV7.java:277)
                                                                               at android.support.v7.app.AppCompatActivity.setContentView(AppCompatActivity.java:140)
                                                                               at com.yipwey.dialogactivity.MainActivity.onCreate(MainActivity.java:14)
                                                                               at android.app.Activity.performCreate(Activity.java:5308)
                                                                               at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1090)
</code></pre><p><img src="/img/img_xk.jpg" alt=""></p>
<p>原因是你继承了<code>AppCompatActivity</code>,改成<code>Activity</code>就可以了</p>
<p>然后就成功了</p>
<p><img src="/img/Screenshot_2016-08-12-17-25-15.jpeg" alt=""></p>
<p>如果你想点击外部不消失的话 调用 <code>setFinishOnTouchOutside(false);</code>就可以了(注意：一定要在setContentView之前调用)</p>
<p>demo下载地址：<a href="http://download.csdn.net/detail/yewei02538/9602028" target="_blank" rel="external">http://download.csdn.net/detail/yewei02538/9602028</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android 使用PLDroidPlayer播放网络视频 根据视频角度自动旋转]]></title>
      <url>http://weyye.me/detail/Android-PLDroidPlayer%E6%92%AD%E6%94%BE/</url>
      <content type="html"><![CDATA[<p>最近因为项目需求 ，需要播放网络视频  ，于是乎 研究了一番 ，说说我遇到的那些坑    </p>
<p>现在市面上有几个比较主流好用的第三方框架</p>
<ul>
<li>Vitamio （  体积比较大，有商业化风险 github:<a href="https://github.com/yixia/VitamioBundle/）" target="_blank" rel="external">https://github.com/yixia/VitamioBundle/）</a></li>
<li>ijkplayer（B站下开源的框架 体积大 配置环境比较麻烦  github:<a href="https://github.com/Bilibili/ijkplayer" target="_blank" rel="external">https://github.com/Bilibili/ijkplayer</a> ）</li>
<li>PLDroidPlayer（七牛根据ijkplayer二次开发的 定制简单 github:<a href="https://github.com/pili-engineering/PLDroidPlayer）" target="_blank" rel="external">https://github.com/pili-engineering/PLDroidPlayer）</a><a id="more"></a>
当然还有很多别的视频播放框架 因为我只找到这几个= =！</li>
</ul>
<p>因为项目比较急，所以我用的比较简单的 PLDroidPlayer</p>
<p> 首先把需要的jar包和jni文件拷到你的项目中<br>这个里面有很多控件，你们可以根据自己的需求来用指定的控件，我用的是PLVideoTextureView</p>
<pre class=" language-python"><code class="language-python"><span class="token operator">&lt;</span>com<span class="token punctuation">.</span>pili<span class="token punctuation">.</span>pldroid<span class="token punctuation">.</span>player<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>PLVideoTextureView
        android<span class="token punctuation">:</span>id<span class="token operator">=</span><span class="token string">"@+id/video"</span>
        android<span class="token punctuation">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>
        android<span class="token punctuation">:</span>layout_height<span class="token operator">=</span><span class="token string">"match_parent"</span>
        android<span class="token punctuation">:</span>layout_centerInParent<span class="token operator">=</span><span class="token string">"true"</span> <span class="token operator">/</span><span class="token operator">></span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> prompt<span class="token string">''</span>'
</code></pre>
<p>然后findviewbyid找到它</p>
<pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PLVideoTextureActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> MediaController mMediaController<span class="token punctuation">;</span>
    <span class="token keyword">private</span> PLVideoTextureView mVideoView<span class="token punctuation">;</span>
    <span class="token keyword">private</span> Toast mToast <span class="token operator">=</span> null<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String mVideoPath <span class="token operator">=</span> null<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> mRotation <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> mDisplayAspectRatio <span class="token operator">=</span> PLVideoTextureView<span class="token punctuation">.</span>ASPECT_RATIO_FIT_PARENT<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//default</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">getWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addFlags</span><span class="token punctuation">(</span>WindowManager<span class="token punctuation">.</span>LayoutParams<span class="token punctuation">.</span>FLAG_KEEP_SCREEN_ON<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_pl_video_texture<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mVideoView <span class="token operator">=</span> <span class="token punctuation">(</span>PLVideoTextureView<span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>VideoView<span class="token punctuation">)</span><span class="token punctuation">;</span>

        View loadingView <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>LoadingView<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mVideoView<span class="token punctuation">.</span><span class="token function">setBufferingIndicator</span><span class="token punctuation">(</span>loadingView<span class="token punctuation">)</span><span class="token punctuation">;</span>

        mVideoPath <span class="token operator">=</span> <span class="token function">getIntent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getStringExtra</span><span class="token punctuation">(</span><span class="token string">"videoPath"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">// If you want to fix display orientation such as landscape, you can use the code show as follow</span>
        <span class="token comment" spellcheck="true">//</span>
        <span class="token comment" spellcheck="true">// if (this.getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE) {</span>
        <span class="token comment" spellcheck="true">//     mVideoView.setPreviewOrientation(0);</span>
        <span class="token comment" spellcheck="true">// }</span>
        <span class="token comment" spellcheck="true">// else if (this.getResources().getConfiguration().orientation == Configuration.ORIENTATION_PORTRAIT) {</span>
        <span class="token comment" spellcheck="true">//     mVideoView.setPreviewOrientation(270);</span>
        <span class="token comment" spellcheck="true">// }</span>

        mVideoPath <span class="token operator">=</span> <span class="token function">getIntent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getStringExtra</span><span class="token punctuation">(</span><span class="token string">"videoPath"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        AVOptions options <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AVOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">int</span> isLiveStreaming <span class="token operator">=</span> <span class="token function">getIntent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getIntExtra</span><span class="token punctuation">(</span><span class="token string">"liveStreaming"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// the unit of timeout is ms</span>
        options<span class="token punctuation">.</span><span class="token function">setInteger</span><span class="token punctuation">(</span>AVOptions<span class="token punctuation">.</span>KEY_PREPARE_TIMEOUT<span class="token punctuation">,</span> <span class="token number">10</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        options<span class="token punctuation">.</span><span class="token function">setInteger</span><span class="token punctuation">(</span>AVOptions<span class="token punctuation">.</span>KEY_GET_AV_FRAME_TIMEOUT<span class="token punctuation">,</span> <span class="token number">10</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// Some optimization with buffering mechanism when be set to 1</span>
        options<span class="token punctuation">.</span><span class="token function">setInteger</span><span class="token punctuation">(</span>AVOptions<span class="token punctuation">.</span>KEY_LIVE_STREAMING<span class="token punctuation">,</span> isLiveStreaming<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>isLiveStreaming <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            options<span class="token punctuation">.</span><span class="token function">setInteger</span><span class="token punctuation">(</span>AVOptions<span class="token punctuation">.</span>KEY_DELAY_OPTIMIZATION<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment" spellcheck="true">// 1 -> hw codec enable, 0 -> disable [recommended]</span>
        <span class="token keyword">int</span> codec <span class="token operator">=</span> <span class="token function">getIntent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getIntExtra</span><span class="token punctuation">(</span><span class="token string">"mediaCodec"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        options<span class="token punctuation">.</span><span class="token function">setInteger</span><span class="token punctuation">(</span>AVOptions<span class="token punctuation">.</span>KEY_MEDIACODEC<span class="token punctuation">,</span> codec<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">// whether start play automatically after prepared, default value is 1</span>
        options<span class="token punctuation">.</span><span class="token function">setInteger</span><span class="token punctuation">(</span>AVOptions<span class="token punctuation">.</span>KEY_START_ON_PREPARED<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        mVideoView<span class="token punctuation">.</span><span class="token function">setAVOptions</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">// You can mirror the display</span>
        <span class="token comment" spellcheck="true">// mVideoView.setMirror(true);</span>

        <span class="token comment" spellcheck="true">// You can also use a custom `MediaController` widget</span>
        mMediaController <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MediaController</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> isLiveStreaming <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mVideoView<span class="token punctuation">.</span><span class="token function">setMediaController</span><span class="token punctuation">(</span>mMediaController<span class="token punctuation">)</span><span class="token punctuation">;</span>

        mVideoView<span class="token punctuation">.</span><span class="token function">setOnInfoListener</span><span class="token punctuation">(</span>mOnInfoListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//        mVideoView.setOnVideoSizeChangedListener(mOnVideoSizeChangedListener);</span>
        mVideoView<span class="token punctuation">.</span><span class="token function">setOnBufferingUpdateListener</span><span class="token punctuation">(</span>mOnBufferingUpdateListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mVideoView<span class="token punctuation">.</span><span class="token function">setOnCompletionListener</span><span class="token punctuation">(</span>mOnCompletionListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mVideoView<span class="token punctuation">.</span><span class="token function">setOnSeekCompleteListener</span><span class="token punctuation">(</span>mOnSeekCompleteListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mVideoView<span class="token punctuation">.</span><span class="token function">setOnErrorListener</span><span class="token punctuation">(</span>mOnErrorListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mVideoView<span class="token punctuation">.</span><span class="token function">setVideoPath</span><span class="token punctuation">(</span>mVideoPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mVideoView<span class="token punctuation">.</span><span class="token function">setDisplayAspectRatio</span><span class="token punctuation">(</span>PLVideoView<span class="token punctuation">.</span>ASPECT_RATIO_PAVED_PARENT<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mVideoView<span class="token punctuation">.</span><span class="token function">setOnPreparedListener</span><span class="token punctuation">(</span>mOnPreparedListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mVideoView<span class="token punctuation">.</span><span class="token function">setOnVideoSizeChangedListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PLMediaPlayer<span class="token punctuation">.</span>OnVideoSizeChangedListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onVideoSizeChanged</span><span class="token punctuation">(</span>PLMediaPlayer plMediaPlayer<span class="token punctuation">,</span> <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                Logger<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token string">"width:"</span> <span class="token operator">+</span> width <span class="token operator">+</span> <span class="token string">"---heightL:"</span> <span class="token operator">+</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>width <span class="token operator">></span> height<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment" spellcheck="true">//视频是横屏 旋转方向</span>
                   <span class="token function">setRequestedOrientation</span><span class="token punctuation">(</span>ActivityInfo<span class="token punctuation">.</span>SCREEN_ORIENTATION_LANDSCAPE<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>


            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        mVideoView<span class="token punctuation">.</span><span class="token function">setVideoPath</span><span class="token punctuation">(</span>mVideoPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mVideoView<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onPause</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onPause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mToast <span class="token operator">=</span> null<span class="token punctuation">;</span>
        mVideoView<span class="token punctuation">.</span><span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onResume</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onResume</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mVideoView<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mVideoView<span class="token punctuation">.</span><span class="token function">stopPlayback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClickRotate</span><span class="token punctuation">(</span>View v<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mRotation <span class="token operator">=</span> <span class="token punctuation">(</span>mRotation <span class="token operator">+</span> <span class="token number">90</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">360</span><span class="token punctuation">;</span>
        mVideoView<span class="token punctuation">.</span><span class="token function">setDisplayOrientation</span><span class="token punctuation">(</span>mRotation<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClickSwitchScreen</span><span class="token punctuation">(</span>View v<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mDisplayAspectRatio <span class="token operator">=</span> <span class="token punctuation">(</span>mDisplayAspectRatio <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">5</span><span class="token punctuation">;</span>
        mVideoView<span class="token punctuation">.</span><span class="token function">setDisplayAspectRatio</span><span class="token punctuation">(</span>mDisplayAspectRatio<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>mVideoView<span class="token punctuation">.</span><span class="token function">getDisplayAspectRatio</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> PLVideoTextureView<span class="token punctuation">.</span>ASPECT_RATIO_ORIGIN<span class="token operator">:</span>
                <span class="token function">showToastTips</span><span class="token punctuation">(</span><span class="token string">"Origin mode"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> PLVideoTextureView<span class="token punctuation">.</span>ASPECT_RATIO_FIT_PARENT<span class="token operator">:</span>
                <span class="token function">showToastTips</span><span class="token punctuation">(</span><span class="token string">"Fit parent !"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> PLVideoTextureView<span class="token punctuation">.</span>ASPECT_RATIO_PAVED_PARENT<span class="token operator">:</span>
                <span class="token function">showToastTips</span><span class="token punctuation">(</span><span class="token string">"Paved parent !"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> PLVideoTextureView<span class="token punctuation">.</span>ASPECT_RATIO_16_9<span class="token operator">:</span>
                <span class="token function">showToastTips</span><span class="token punctuation">(</span><span class="token string">"16 : 9 !"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> PLVideoTextureView<span class="token punctuation">.</span>ASPECT_RATIO_4_3<span class="token operator">:</span>
                <span class="token function">showToastTips</span><span class="token punctuation">(</span><span class="token string">"4 : 3 !"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">default</span><span class="token operator">:</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> PLMediaPlayer<span class="token punctuation">.</span>OnErrorListener mOnErrorListener <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PLMediaPlayer<span class="token punctuation">.</span>OnErrorListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onError</span><span class="token punctuation">(</span>PLMediaPlayer mp<span class="token punctuation">,</span> <span class="token keyword">int</span> errorCode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">switch</span> <span class="token punctuation">(</span>errorCode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">case</span> PLMediaPlayer<span class="token punctuation">.</span>ERROR_CODE_INVALID_URI<span class="token operator">:</span>
                    <span class="token function">showToastTips</span><span class="token punctuation">(</span><span class="token string">"Invalid URL !"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> PLMediaPlayer<span class="token punctuation">.</span>ERROR_CODE_404_NOT_FOUND<span class="token operator">:</span>
                    <span class="token function">showToastTips</span><span class="token punctuation">(</span><span class="token string">"404 resource not found !"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> PLMediaPlayer<span class="token punctuation">.</span>ERROR_CODE_CONNECTION_REFUSED<span class="token operator">:</span>
                    <span class="token function">showToastTips</span><span class="token punctuation">(</span><span class="token string">"Connection refused !"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> PLMediaPlayer<span class="token punctuation">.</span>ERROR_CODE_CONNECTION_TIMEOUT<span class="token operator">:</span>
                    <span class="token function">showToastTips</span><span class="token punctuation">(</span><span class="token string">"Connection timeout !"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> PLMediaPlayer<span class="token punctuation">.</span>ERROR_CODE_EMPTY_PLAYLIST<span class="token operator">:</span>
                    <span class="token function">showToastTips</span><span class="token punctuation">(</span><span class="token string">"Empty playlist !"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> PLMediaPlayer<span class="token punctuation">.</span>ERROR_CODE_STREAM_DISCONNECTED<span class="token operator">:</span>
                    <span class="token function">showToastTips</span><span class="token punctuation">(</span><span class="token string">"Stream disconnected !"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> PLMediaPlayer<span class="token punctuation">.</span>ERROR_CODE_IO_ERROR<span class="token operator">:</span>
                    <span class="token function">showToastTips</span><span class="token punctuation">(</span><span class="token string">"Network IO Error !"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> PLMediaPlayer<span class="token punctuation">.</span>ERROR_CODE_UNAUTHORIZED<span class="token operator">:</span>
                    <span class="token function">showToastTips</span><span class="token punctuation">(</span><span class="token string">"Unauthorized Error !"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> PLMediaPlayer<span class="token punctuation">.</span>ERROR_CODE_PREPARE_TIMEOUT<span class="token operator">:</span>
                    <span class="token function">showToastTips</span><span class="token punctuation">(</span><span class="token string">"Prepare timeout !"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> PLMediaPlayer<span class="token punctuation">.</span>ERROR_CODE_READ_FRAME_TIMEOUT<span class="token operator">:</span>
                    <span class="token function">showToastTips</span><span class="token punctuation">(</span><span class="token string">"Read frame timeout !"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> PLMediaPlayer<span class="token punctuation">.</span>MEDIA_ERROR_UNKNOWN<span class="token operator">:</span>
                <span class="token keyword">default</span><span class="token operator">:</span>
                    <span class="token function">showToastTips</span><span class="token punctuation">(</span><span class="token string">"unknown error !"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment" spellcheck="true">// Todo pls handle the error status here, retry or call finish()</span>
            <span class="token function">finish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">// If you want to retry, do like this:</span>
            <span class="token comment" spellcheck="true">// mVideoView.setVideoPath(mVideoPath);</span>
            <span class="token comment" spellcheck="true">// mVideoView.start();</span>
            <span class="token comment" spellcheck="true">// Return true means the error has been handled</span>
            <span class="token comment" spellcheck="true">// If return false, then `onCompletion` will be called</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>


     <span class="token keyword">private</span> PLMediaPlayer<span class="token punctuation">.</span>OnCompletionListener mOnCompletionListener <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PLMediaPlayer<span class="token punctuation">.</span>OnCompletionListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCompletion</span><span class="token punctuation">(</span>PLMediaPlayer plMediaPlayer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment" spellcheck="true">//            finish();</span>
            <span class="token function">showToast</span><span class="token punctuation">(</span><span class="token string">"视频播放完成"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> PLMediaPlayer<span class="token punctuation">.</span>OnBufferingUpdateListener mOnBufferingUpdateListener <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PLMediaPlayer<span class="token punctuation">.</span>OnBufferingUpdateListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onBufferingUpdate</span><span class="token punctuation">(</span>PLMediaPlayer plMediaPlayer<span class="token punctuation">,</span> <span class="token keyword">int</span> precent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> PLMediaPlayer<span class="token punctuation">.</span>OnSeekCompleteListener mOnSeekCompleteListener <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PLMediaPlayer<span class="token punctuation">.</span>OnSeekCompleteListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSeekComplete</span><span class="token punctuation">(</span>PLMediaPlayer plMediaPlayer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            Logger<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"onSeekComplete !"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> PLMediaPlayer<span class="token punctuation">.</span>OnPreparedListener mOnPreparedListener <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PLMediaPlayer<span class="token punctuation">.</span>OnPreparedListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onPrepared</span><span class="token punctuation">(</span>PLMediaPlayer plMediaPlayer<span class="token punctuation">)</span> <span class="token punctuation">{</span>


        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> PLMediaPlayer<span class="token punctuation">.</span>OnInfoListener mOnInfoListener <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PLMediaPlayer<span class="token punctuation">.</span>OnInfoListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onInfo</span><span class="token punctuation">(</span>PLMediaPlayer plMediaPlayer<span class="token punctuation">,</span> <span class="token keyword">int</span> what<span class="token punctuation">,</span> <span class="token keyword">int</span> extra<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">switch</span> <span class="token punctuation">(</span>what<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">case</span> PLMediaPlayer<span class="token punctuation">.</span>MEDIA_INFO_BUFFERING_START<span class="token operator">:</span>
                    Logger<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token string">"正在缓冲----"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment" spellcheck="true">//开始缓存，暂停播放</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPlaying</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment" spellcheck="true">//                        stopPlayer();</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>mVideoView <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            mVideoView<span class="token punctuation">.</span><span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        needResume <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    rl_loading<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span>View<span class="token punctuation">.</span>VISIBLE<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> PLMediaPlayer<span class="token punctuation">.</span>MEDIA_INFO_BUFFERING_END<span class="token operator">:</span>
                <span class="token keyword">case</span> PLMediaPlayer<span class="token punctuation">.</span>MEDIA_INFO_VIDEO_RENDERING_START<span class="token operator">:</span>
                    Logger<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token string">"缓冲完成----"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment" spellcheck="true">//缓存完成，继续播放</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>needResume<span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">//                        startPlayer();</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>mVideoView <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            mVideoView<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    rl_loading<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span>View<span class="token punctuation">.</span>GONE<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> PLMediaPlayer<span class="token punctuation">.</span>MEDIA_INFO_BUFFERING_BYTES_UPDATE<span class="token operator">:</span>
                    <span class="token comment" spellcheck="true">//显示 下载速度</span>
                    Logger<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token string">"download rate:"</span> <span class="token operator">+</span> extra<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment" spellcheck="true">//mListener.onDownloadRateChanged(arg2);</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            Logger<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token string">"onInfo:"</span> <span class="token operator">+</span> what <span class="token operator">+</span> <span class="token string">"___"</span> <span class="token operator">+</span> extra<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>这样就完成了普通视频的播放和旋转视频播放</p>
<p>看似简单 其实隐藏着大问题 ，也就是我所说的大坑<br>现在我是这样判断角度的  当视频的宽度大于高度的 我就认为这是一个横屏的视频 ，也就是说假如这个视频是1330X720（我随便说的尺寸，只为举例）现在宽度大于高度了 那么这就是一个横屏的视频，但是我只要播放手机拍摄的视频就会发现视频被放大了 ，但是其实我录制视频的时候是竖着排的 ，可视播放的时候却给我横着过来了，然后我就去看这个手机拍摄视频的尺寸  现在一般录制视频最低都是1280X720  ，恰好符合我判断的逻辑 ，难道他真是横着的？  然后我就用系统自带的播放器打开 ，居然没有横过来 ，而是竖着播放的 ，可它是怎么知道这个方向呢？于是我在百度搜 ，确实可以获取到本地视频的角度，但是好像低版本好像不兼容，然后根据角度去判断 是否需要旋转，可是我这个是网络视频啊  ，网络视频怎么获取到视频角度啊 ？ 我第一反应是 上传视频的时候把宽高角度传到服务器 ，然后获取的时候根据这个角度旋转 ，但是别人播放网络视频的时候也没有传角度过去啊 - -  然后我就在github上面问那个作者  ，结果他说 </p>
<p><strong>“onInfo: 10001, 90”, 收到这个消息后，使用 PLVideoTextureView 的 setDisplayOrientation 旋转显示的方向，后面会补充这个回调的接口和文档。</strong></p>
<p>我晕  ，你这不说 谁知道啊 坑死啊 -  -<br>然后我就修改了下代码</p>
<pre class=" language-java"><code class="language-java"> <span class="token comment" spellcheck="true">/**
     * 视频的方向
     */</span>
<span class="token keyword">private</span> <span class="token keyword">int</span> mVideoRotation<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> needResume<span class="token punctuation">;</span>
    <span class="token keyword">private</span> PLMediaPlayer<span class="token punctuation">.</span>OnInfoListener mOnInfoListener <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PLMediaPlayer<span class="token punctuation">.</span>OnInfoListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onInfo</span><span class="token punctuation">(</span>PLMediaPlayer plMediaPlayer<span class="token punctuation">,</span> <span class="token keyword">int</span> what<span class="token punctuation">,</span> <span class="token keyword">int</span> extra<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">switch</span> <span class="token punctuation">(</span>what<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">case</span> PLMediaPlayer<span class="token punctuation">.</span>MEDIA_INFO_BUFFERING_START<span class="token operator">:</span>
                    Logger<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token string">"正在缓冲----"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment" spellcheck="true">//开始缓存，暂停播放</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPlaying</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment" spellcheck="true">//                        stopPlayer();</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>mVideoView <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            mVideoView<span class="token punctuation">.</span><span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        needResume <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    rl_loading<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span>View<span class="token punctuation">.</span>VISIBLE<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> PLMediaPlayer<span class="token punctuation">.</span>MEDIA_INFO_BUFFERING_END<span class="token operator">:</span>
                <span class="token keyword">case</span> PLMediaPlayer<span class="token punctuation">.</span>MEDIA_INFO_VIDEO_RENDERING_START<span class="token operator">:</span>
                    Logger<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token string">"缓冲完成----"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment" spellcheck="true">//缓存完成，继续播放</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>needResume<span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">//                        startPlayer();</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>mVideoView <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            mVideoView<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    rl_loading<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span>View<span class="token punctuation">.</span>GONE<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> PLMediaPlayer<span class="token punctuation">.</span>MEDIA_INFO_BUFFERING_BYTES_UPDATE<span class="token operator">:</span>
                    <span class="token comment" spellcheck="true">//显示 下载速度</span>
                    Logger<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token string">"download rate:"</span> <span class="token operator">+</span> extra<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment" spellcheck="true">//mListener.onDownloadRateChanged(arg2);</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token number">10001</span><span class="token operator">:</span>
                    <span class="token comment" spellcheck="true">//保存视频角度</span>
                    mVideoRotation<span class="token operator">=</span>extra<span class="token punctuation">;</span>

                    <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            Logger<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token string">"onInfo:"</span> <span class="token operator">+</span> what <span class="token operator">+</span> <span class="token string">"___"</span> <span class="token operator">+</span> extra<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre>
<p>然后在onVideoSizeChanged的回调里这样</p>
<pre class=" language-java"><code class="language-java"> mVideoView<span class="token punctuation">.</span><span class="token function">setOnVideoSizeChangedListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PLMediaPlayer<span class="token punctuation">.</span>OnVideoSizeChangedListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onVideoSizeChanged</span><span class="token punctuation">(</span>PLMediaPlayer plMediaPlayer<span class="token punctuation">,</span> <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                Logger<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token string">"width:"</span> <span class="token operator">+</span> width <span class="token operator">+</span> <span class="token string">"---heightL:"</span> <span class="token operator">+</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>width <span class="token operator">></span> height<span class="token operator">&amp;&amp;</span>mVideoRotation<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment" spellcheck="true">//旋转方向</span>
                    <span class="token function">setRequestedOrientation</span><span class="token punctuation">(</span>ActivityInfo<span class="token punctuation">.</span>SCREEN_ORIENTATION_LANDSCAPE<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment" spellcheck="true">//如果视频角度是90度</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>mVideoRotation<span class="token operator">==</span><span class="token number">90</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                   <span class="token comment" spellcheck="true">//旋转视频</span>
                    mVideoView<span class="token punctuation">.</span><span class="token function">setDisplayOrientation</span><span class="token punctuation">(</span><span class="token number">270</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
<p>这样 不管是什么视频  播放终于正常了  - -  </p>
<p>转载请注明出处  <a href="http://blog.csdn.net/yewei02538/article/details/51882933" target="_blank" rel="external">http://blog.csdn.net/yewei02538/article/details/51882933</a></p>
<p>Demo下载地址: <a href="http://download.csdn.net/detail/yewei02538/9602032" target="_blank" rel="external">http://download.csdn.net/detail/yewei02538/9602032</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[FragmentTransaction.commit onCreateView没有立即执行]]></title>
      <url>http://weyye.me/detail/commit-onCreateView/</url>
      <content type="html"><![CDATA[<p>在做项目中，遇到一个很奇怪的问题 ，当调用fragmentTransaction.commit的时候 fragment的生命周期并没有立即执行，下面是我的代码</p>
<pre class=" language-java"><code class="language-java">manager <span class="token operator">=</span> <span class="token function">getSupportFragmentManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
FragmentTransaction ft <span class="token operator">=</span> manager<span class="token punctuation">.</span><span class="token function">beginTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
MainFragment fragment <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MainFragment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ft<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>fl_content<span class="token punctuation">,</span> fragment<span class="token punctuation">)</span><span class="token punctuation">;</span>
ft<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
fragment<span class="token punctuation">.</span><span class="token function">setInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
<a id="more"></a>
<p>看似正常的逻辑没有问题 ，可是却fragment里面却给我报了NullPointException ,看log显示 view是null，我就奇怪了，明明onCreateView里面不是findViewById找到了嘛 ，不会啊，无意中查看了fragmentTransaction.commit()的源码才知道<br>注释是这样写的</p>
<pre><code>* Schedules a commit of this transaction.  The commit does
* not happen immediately; it will be scheduled as work on the main thread
* to be done the next time that thread is ready.
</code></pre><p>大致的意思是说 调用commit后不会立即执行，会再下一次准备好的时候，运行在主线程里面。</p>
<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>调用commit后执行<br>    manager.executePendingTransactions();<br>这样就会立即执行了</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[第三方sdk（我的是高德和个推） so库包冲突]]></title>
      <url>http://weyye.me/detail/sdk-so/</url>
      <content type="html"><![CDATA[<p>项目原本只加入高德sdk的时候，获取map，添加marker一切正常 ，可是只要我加入个推sdk后 编译运行 居然报高德地图的错 ，当时了就懵了- -<br>这个是错误日志</p>
<pre class=" language-java"><code class="language-java"> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>UnsatisfiedLinkError<span class="token operator">:</span> No implementation found <span class="token keyword">for</span> <span class="token keyword">long</span> com<span class="token punctuation">.</span>autonavi<span class="token punctuation">.</span>amap<span class="token punctuation">.</span>mapcore<span class="token punctuation">.</span>MapCore<span class="token punctuation">.</span><span class="token function">nativeNewInstance</span><span class="token punctuation">(</span>java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>String<span class="token punctuation">,</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>String<span class="token punctuation">)</span> <span class="token punctuation">(</span>tried Java_com_autonavi_amap_mapcore_MapCore_nativeNewInstance and Java_com_autonavi_amap_mapcore_MapCore_nativeNewInstance__Ljava_lang_String_2Ljava_lang_String_2<span class="token punctuation">)</span>
                                                       at com<span class="token punctuation">.</span>autonavi<span class="token punctuation">.</span>amap<span class="token punctuation">.</span>mapcore<span class="token punctuation">.</span>MapCore<span class="token punctuation">.</span><span class="token function">nativeNewInstance</span><span class="token punctuation">(</span>Native Method<span class="token punctuation">)</span>
                                                       at com<span class="token punctuation">.</span>autonavi<span class="token punctuation">.</span>amap<span class="token punctuation">.</span>mapcore<span class="token punctuation">.</span>MapCore<span class="token punctuation">.</span><span class="token function">newMap</span><span class="token punctuation">(</span>MapCore<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">83</span>
</code></pre>
<a id="more"></a>
<p>错误日志可以看出是so库没有找到的原因 ，这是我的lib目录</p>
<p><img src="/img/1468653788.png" alt=""></p>
<p>但是有的手机却没有问题<br>google一番后其实是因为没有找到手机对应的so库 （也就是armeabi-v7a）</p>
<h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><p>把armeabi里高德的so库直接拷入到armeabi-v7a文件夹下 然后删除mips和mips64就可以了<br><img src="/img/1468653948 .png" alt=""></p>
<div class="tip"><br>    转载请注明出处<br></div>

]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[adapter.notifyDataSetChanged没有反应，触摸滑动屏幕才刷新]]></title>
      <url>http://weyye.me/detail/adapter-notifyDataSetChanged/</url>
      <content type="html"><![CDATA[<p>今天做项目遇到个比较头疼的问题，adapter.notifyDataSetChanged没有反应，要触摸屏幕才可以改变数据，上网查资料有人说是给list集合赋值的时候地址改变了（要用list.addAll()），可是我并没有改变地址 ，只是手动改了一个item的数据而已，后来发现只要延迟刷新就可以了<br><a id="more"></a></p>
<pre class=" language-java"><code class="language-java">handler<span class="token punctuation">.</span><span class="token function">postDelayed</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
            <span class="token annotation punctuation">@Override</span>  
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
                adapter<span class="token punctuation">.</span><span class="token function">notifyDataSetChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token punctuation">}</span>  
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
<div class="tip"><br>    转载请注明出处<br></div>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Fragment里面用ViewPager嵌套2个Fragment，第二次切换变成空白的解决办法]]></title>
      <url>http://weyye.me/detail/fragment-viewpager%E5%B5%8C%E5%A5%97/</url>
      <content type="html"><![CDATA[<p>今天做项目遇到一个问题 ，</p>
<p>主界面用5个fragment组成，其中一个fragment里面 用了个ViewPager ，然后再这个ViewPager里面又嵌套了2个Fragment，第一次加载没有  但是第二次加载的时候 ，就变成空白<br><a id="more"></a><br>在网上找了下解决的办法，参考资料 <a href="http://www.th7.cn/Program/Android/201406/218498.shtml" target="_blank" rel="external">http://www.th7.cn/Program/Android/201406/218498.shtml</a></p>
<p>原因是因为：fragment里面又嵌套了fragment，所以在创建viewpager的适配器的时候传参为getChildFragmentManager()而不是getFragmentManager()，因为如果传参为getFragmentManager()则表示将父Fragment的FragmentManager传给了子Fragment，所以无法显示数据，</p>
<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><pre><code>FragmentPagerAdapter adapter= new FragmentPagerAdapter(getChildFragmentManager())
</code></pre><p>传入 <strong>getChildFragmentManager()</strong>就可以了</p>
]]></content>
    </entry>
    
  
  
</search>
